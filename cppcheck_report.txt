clients/attach.c:174:16: style: Redundant condition: If '!EXPR', the comparison 'EXPR != '@'' is always true. [redundantCondition]
  if (!opts[0] || opts[0] != '@') {
               ^
clients/attach.c:100:0: information: Skipping configuration 'SIGPWR' since the value of 'SIGPWR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  signal(SIGPWR, SignalPanic);
^
clients/cuckoo.c:149:27: style: Variable 'buff_len' is assigned a value that is never used. [unreadVariable]
  uldat egg_len, buff_len = 0, buff_capacity = 0, delay = 1, err;
                          ^
clients/cuckoo.c:190:23: style: Variable 'aid' is assigned a value that is never used. [unreadVariable]
  if (!Init() || (aid = TwGetAll()) == TW_NOID) {
                      ^
clients/cuckoo.c:126:0: information: Skipping configuration 'SIGPWR' since the value of 'SIGPWR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  signal(SIGPWR, SignalFatal);
^
clients/dialog.c:135:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, y;
      ^
clients/dialog.c:135:10: style: The scope of the variable 'y' can be reduced. [variableScope]
  int i, y;
         ^
clients/dialog.c:162:7: style: The scope of the variable 'eaten' can be reduced. [variableScope]
  int eaten;
      ^
clients/dm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
clients/dm.c:176:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, fd[2];
      ^
clients/dm.c:616:7: style: The scope of the variable 'fd' can be reduced. [variableScope]
  int fd;
      ^
clients/dm.c:394:17: style: Variable 'pw_passwd' is assigned a value that is never used. [unreadVariable]
      pw_passwd = p->pw_passwd;
                ^
clients/dm.c:383:28: style: Unused variable: c [unusedVariable]
  char *pw_passwd = NULL, *c;
                           ^
clients/event.c:343:9: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
        printf("Gadget: Code %d (0x%04x)\n", (unsigned)EventG->Code, (unsigned)EventG->Code);
        ^
clients/event.c:82:15: style: The scope of the variable 'buf' can be reduced. [variableScope]
  static char buf[2];
              ^
clients/event.c:339:24: error: Uninitialized variable: s7 [uninitvar]
               s5, s6, s7, s8, s9, EventM->X, EventM->Y);
                       ^
clients/event.c:323:18: note: Assuming condition is true
        if (Code & HOLD_ANY) {
                 ^
clients/event.c:339:24: note: Uninitialized variable: s7
               s5, s6, s7, s8, s9, EventM->X, EventM->Y);
                       ^
clients/event.c:339:28: error: Uninitialized variable: s8 [uninitvar]
               s5, s6, s7, s8, s9, EventM->X, EventM->Y);
                           ^
clients/event.c:323:18: note: Assuming condition is true
        if (Code & HOLD_ANY) {
                 ^
clients/event.c:339:28: note: Uninitialized variable: s8
               s5, s6, s7, s8, s9, EventM->X, EventM->Y);
                           ^
clients/event.c:332:0: information: Skipping configuration 'HOLD_WHEEL_FWD' since the value of 'HOLD_WHEEL_FWD' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
          s8 = Code & HOLD_WHEEL_FWD ? " Wheel Fwd" : "";
^
clients/event.c:329:0: information: Skipping configuration 'HOLD_WHEEL_REV' since the value of 'HOLD_WHEEL_REV' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
          s7 = Code & HOLD_WHEEL_REV ? " Wheel Rev" : "";
^
clients/findtwin.c:68:9: style: The scope of the variable 's' can be reduced. [variableScope]
  char *s;
        ^
clients/lsmsgport.c:47:11: style: The scope of the variable 'fl' can be reduced. [variableScope]
      int fl;
          ^
clients/lsobj.c:21:1: error: syntax error [syntaxError]
enum {
^
clients/mapscrn/findfile.c:52:9: style: The scope of the variable 't' can be reduced. [variableScope]
  char *t;
        ^
clients/mapscrn/findfile.c:53:24: style: The scope of the variable 'dc' can be reduced. [variableScope]
  struct decompressor *dc;
                       ^
clients/mapscrn/findfile.c:150:15: style: The scope of the variable 'dir' can be reduced. [variableScope]
  char **dp, *dir, **sp;
              ^
clients/mapscrn/findfile.c:150:22: style: The scope of the variable 'sp' can be reduced. [variableScope]
  char **dp, *dir, **sp;
                     ^
clients/mapscrn/findfile.c:152:7: style: The scope of the variable 'dl' can be reduced. [variableScope]
  int dl, recdepth;
      ^
clients/mapscrn/findfile.c:152:11: style: The scope of the variable 'recdepth' can be reduced. [variableScope]
  int dl, recdepth;
          ^
clients/mapscrn/findfile.c:153:24: style: The scope of the variable 'dc' can be reduced. [variableScope]
  struct decompressor *dc;
                       ^
clients/mapscrn/kdmapop.c:166:7: error: Memory leak: ud.entries [memleak]
      return -1;
      ^
clients/mapscrn/kdmapop.c:149:7: style: The scope of the variable 'ct' can be reduced. [variableScope]
  int ct;
      ^
clients/mapscrn/kdmapop.c:147:42: style:inconclusive: Function 'getunimap' argument 2 names different: declaration 'ud' definition 'ud0'. [funcArgNamesDifferent]
int getunimap(int fd, struct unimapdesc *ud0) {
                                         ^
clients/mapscrn/kdmapop.h:13:49: note: Function 'getunimap' argument 2 names different: declaration 'ud' definition 'ud0'.
extern int getunimap(int fd, struct unimapdesc *ud);
                                                ^
clients/mapscrn/kdmapop.c:147:42: note: Function 'getunimap' argument 2 names different: declaration 'ud' definition 'ud0'.
int getunimap(int fd, struct unimapdesc *ud0) {
                                         ^
clients/mapscrn/kdmapop.c:191:0: information: Skipping configuration 'ENOIOCTLCMD' since the value of 'ENOIOCTLCMD' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (errno == ENOIOCTLCMD) {
^
clients/mapscrn/kdmapop.c:103:0: information: Skipping configuration 'E_TABSZ' since the value of 'E_TABSZ' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    trune buf[E_TABSZ - 0x80];
^
clients/mapscrn/mapscrn.c:237:5: warning: %x in format string (no. 1) requires 'unsigned int *' but the argument type is 'signed int *'. [invalidScanfArgType_int]
    sscanf(s + 2, "%x", &i);
    ^
clients/mapscrn/mapscrn.c:240:5: warning: %o in format string (no. 1) requires 'unsigned int *' but the argument type is 'signed int *'. [invalidScanfArgType_int]
    sscanf(s, "%o", &i);
    ^
clients/mapscrn/mapscrn.c:247:5: warning: %x in format string (no. 1) requires 'unsigned int *' but the argument type is 'signed int *'. [invalidScanfArgType_int]
    sscanf(s + 2, "%x", &i);
    ^
clients/mapscrn/mapscrn.c:123:9: style: The scope of the variable 'p' can be reduced. [variableScope]
  char *p, *q;
        ^
clients/mapscrn/mapscrn.c:271:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, havemap, haveumap;
      ^
clients/mapscrn/mapscrn.c:168:0: information: Skipping configuration 'E_TABSZ' since the value of 'E_TABSZ' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (stbuf.st_size == E_TABSZ) {
^
clients/mapscrn/mapscrn.c:173:0: information: Skipping configuration 'E_TABSZ' since the value of 'E_TABSZ' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (fread(buf, E_TABSZ, 1, fp) != 1) {
^
clients/mapscrn/mapscrn.c:177:0: information: Skipping configuration 'E_TABSZ' since the value of 'E_TABSZ' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  } else if (stbuf.st_size == 2 * E_TABSZ) {
^
clients/mapscrn/mapscrn.c:182:0: information: Skipping configuration 'E_TABSZ' since the value of 'E_TABSZ' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (fread(ubuf, 2 * E_TABSZ, 1, fp) != 1) {
^
clients/mapscrn/mapscrn.c:203:0: information: Skipping configuration 'E_TABSZ' since the value of 'E_TABSZ' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  unsigned short ubuf[E_TABSZ];
^
clients/mapscrn/mapscrn.c:204:0: information: Skipping configuration 'E_TABSZ' since the value of 'E_TABSZ' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  char buf[E_TABSZ];
^
clients/mapscrn/mapscrn.c:208:0: information: Skipping configuration 'E_TABSZ' since the value of 'E_TABSZ' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  for (i = 0; i < E_TABSZ; i++) {
^
clients/mapscrn/mapscrn.c:269:0: information: Skipping configuration 'E_TABSZ' since the value of 'E_TABSZ' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  char buf[E_TABSZ];
^
clients/mapscrn/mapscrn.c:270:0: information: Skipping configuration 'E_TABSZ' since the value of 'E_TABSZ' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  unsigned short ubuf[E_TABSZ];
^
clients/mapscrn/mapscrn.c:283:0: information: Skipping configuration 'E_TABSZ' since the value of 'E_TABSZ' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    for (i = 0; i < E_TABSZ; i++) {
^
clients/mapscrn/xmalloc.c:32:22: style:inconclusive: Function 'xrealloc' argument 1 names different: declaration 'p' definition 'pp'. [funcArgNamesDifferent]
void *xrealloc(void *pp, size_t sz) {
                     ^
clients/mapscrn/xmalloc.h:11:29: note: Function 'xrealloc' argument 1 names different: declaration 'p' definition 'pp'.
extern void *xrealloc(void *p, size_t sz);
                            ^
clients/mapscrn/xmalloc.c:32:22: note: Function 'xrealloc' argument 1 names different: declaration 'p' definition 'pp'.
void *xrealloc(void *pp, size_t sz) {
                     ^
clients/pty.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 23 configurations. Use --force to check all configurations. [toomanyconfigs]

^
clients/pty.c:86:10: style: Variable 'fd' is assigned a value that is never used. [unreadVariable]
  int fd = -1, sfd = -1;
         ^
clients/pty.c:86:20: style: Variable 'sfd' is assigned a value that is never used. [unreadVariable]
  int fd = -1, sfd = -1;
                   ^
clients/pty.c:274:0: information: Skipping configuration 'TIOCSCTTY' since the value of 'TIOCSCTTY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  ioctl(0, TIOCSCTTY, 0);
^
clients/pty.c:281:0: information: Skipping configuration 'TIOCSPGRP' since the value of 'TIOCSPGRP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  ioctl(0, TIOCSPGRP, &pid);
^
clients/restackM.c:34:16: style: The scope of the variable 'v' can be reduced. [variableScope]
  tobj a, id, *v;
               ^
clients/restackW.c:34:16: style: The scope of the variable 'v' can be reduced. [variableScope]
  tobj f, id, *v;
               ^
clients/restackW.c:34:8: style: Unused variable: f [unusedVariable]
  tobj f, id, *v;
       ^
clients/setroot.c:38:10: style: The scope of the variable 'image' can be reduced. [variableScope]
  tcell *image;
         ^
clients/setroot.c:38:10: style: Local variable 'image' shadows outer variable [shadowVariable]
  tcell *image;
         ^
clients/setroot.c:111:15: note: Shadowed declaration
static tcell *image;
              ^
clients/setroot.c:38:10: note: Shadow variable
  tcell *image;
         ^
clients/setroot.c:39:9: style: Local variable 'X' shadows outer variable [shadowVariable]
  uldat X, Y, padX = 0, padY = 0, err;
        ^
clients/setroot.c:113:14: note: Shadowed declaration
static uldat X, Y, Xmax, Ymax, Xreal, Yreal, max;
             ^
clients/setroot.c:39:9: note: Shadow variable
  uldat X, Y, padX = 0, padY = 0, err;
        ^
clients/setroot.c:39:12: style: Local variable 'Y' shadows outer variable [shadowVariable]
  uldat X, Y, padX = 0, padY = 0, err;
           ^
clients/setroot.c:113:17: note: Shadowed declaration
static uldat X, Y, Xmax, Ymax, Xreal, Yreal, max;
                ^
clients/setroot.c:39:12: note: Shadow variable
  uldat X, Y, padX = 0, padY = 0, err;
           ^
clients/sysmon.c:171:11: style: The scope of the variable 'got' can be reduced. [variableScope]
  ssize_t got;
          ^
clients/term.c:143:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
clients/term.c:253:7: style: The scope of the variable 'Fd' can be reduced. [variableScope]
  int Fd;
      ^
clients/term.c:391:7: style: The scope of the variable 'Fd' can be reduced. [variableScope]
  int Fd;
      ^
clients/term.c:495:9: style: The scope of the variable 't' can be reduced. [variableScope]
  char *t, *name = argv[0], *shell[3];
        ^
clients/term.c:273:17: style: Variable 'Slot' is assigned a value that is never used. [unreadVariable]
      if ((Slot = RegisterRemote(Fd, Window, Pid)) != TW_NOSLOT) {
                ^
contrib/twcd/twcd.c:42:97: error: Unmatched ')'. Configuration: ''. [syntaxError]
                   TCOL(thigh | tblack, tblack), TCOL(tred, twhite), TCOL(tred, tgreen), (byte)0);
                                                                                                ^
libs/libltdl/loaders/dld_link.c:100:35: style:inconclusive: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vl_exit (lt_user_data loader_data LT__UNUSED)
                                  ^
libs/libltdl/loaders/dld_link.c:48:36: note: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static int  vl_exit  (lt_user_data loader_data);
                                   ^
libs/libltdl/loaders/dld_link.c:100:35: note: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vl_exit (lt_user_data loader_data LT__UNUSED)
                                  ^
libs/libltdl/loaders/dld_link.c:110:35: style:inconclusive: Function 'vm_open' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_open (lt_user_data loader_data LT__UNUSED, const char *filename,
                                  ^
libs/libltdl/loaders/dld_link.c:49:41: note: Function 'vm_open' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static lt_module vm_open  (lt_user_data loader_data, const char *filename,
                                        ^
libs/libltdl/loaders/dld_link.c:110:35: note: Function 'vm_open' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vm_open (lt_user_data loader_data LT__UNUSED, const char *filename,
                                  ^
libs/libltdl/loaders/dld_link.c:111:29: style:inconclusive: Function 'vm_open' argument 3 names different: declaration 'advise' definition 'LT__UNUSED'. [funcArgNamesDifferent]
         lt_dladvise advise LT__UNUSED)
                            ^
libs/libltdl/loaders/dld_link.c:50:40: note: Function 'vm_open' argument 3 names different: declaration 'advise' definition 'LT__UNUSED'.
                           lt_dladvise advise);
                                       ^
libs/libltdl/loaders/dld_link.c:111:29: note: Function 'vm_open' argument 3 names different: declaration 'advise' definition 'LT__UNUSED'.
         lt_dladvise advise LT__UNUSED)
                            ^
libs/libltdl/loaders/dld_link.c:127:36: style:inconclusive: Function 'vm_close' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_close (lt_user_data loader_data LT__UNUSED, lt_module module)
                                   ^
libs/libltdl/loaders/dld_link.c:51:36: note: Function 'vm_close' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static int  vm_close (lt_user_data loader_data, lt_module module);
                                   ^
libs/libltdl/loaders/dld_link.c:127:36: note: Function 'vm_close' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vm_close (lt_user_data loader_data LT__UNUSED, lt_module module)
                                   ^
libs/libltdl/loaders/dld_link.c:147:34: style:inconclusive: Function 'vm_sym' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module LT__UNUSED,
                                 ^
libs/libltdl/loaders/dld_link.c:52:39: note: Function 'vm_sym' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static void *  vm_sym   (lt_user_data loader_data, lt_module module,
                                      ^
libs/libltdl/loaders/dld_link.c:147:34: note: Function 'vm_sym' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module LT__UNUSED,
                                 ^
libs/libltdl/loaders/dld_link.c:147:63: style:inconclusive: Function 'vm_sym' argument 2 names different: declaration 'module' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module LT__UNUSED,
                                                              ^
libs/libltdl/loaders/dld_link.c:52:62: note: Function 'vm_sym' argument 2 names different: declaration 'module' definition 'LT__UNUSED'.
static void *  vm_sym   (lt_user_data loader_data, lt_module module,
                                                             ^
libs/libltdl/loaders/dld_link.c:147:63: note: Function 'vm_sym' argument 2 names different: declaration 'module' definition 'LT__UNUSED'.
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module LT__UNUSED,
                                                              ^
libs/libltdl/loaders/dld_link.c:148:14: style:inconclusive: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'. [funcArgNamesDifferent]
 const char *name)
             ^
libs/libltdl/loaders/dld_link.c:53:18: note: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'.
     const char *symbolname);
                 ^
libs/libltdl/loaders/dld_link.c:148:14: note: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'.
 const char *name)
             ^
libs/libltdl/loaders/dlopen.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
libs/libltdl/loaders/dlopen.c:155:35: style:inconclusive: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vl_exit (lt_user_data loader_data LT__UNUSED)
                                  ^
libs/libltdl/loaders/dlopen.c:48:36: note: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static int  vl_exit  (lt_user_data loader_data);
                                   ^
libs/libltdl/loaders/dlopen.c:155:35: note: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vl_exit (lt_user_data loader_data LT__UNUSED)
                                  ^
libs/libltdl/loaders/dlopen.c:166:35: style:inconclusive: Function 'vm_open' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_open (lt_user_data loader_data LT__UNUSED, const char *filename,
                                  ^
libs/libltdl/loaders/dlopen.c:49:41: note: Function 'vm_open' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static lt_module vm_open  (lt_user_data loader_data, const char *filename,
                                        ^
libs/libltdl/loaders/dlopen.c:166:35: note: Function 'vm_open' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vm_open (lt_user_data loader_data LT__UNUSED, const char *filename,
                                  ^
libs/libltdl/loaders/dlopen.c:248:36: style:inconclusive: Function 'vm_close' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_close (lt_user_data loader_data LT__UNUSED, lt_module module)
                                   ^
libs/libltdl/loaders/dlopen.c:51:36: note: Function 'vm_close' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static int  vm_close (lt_user_data loader_data, lt_module module);
                                   ^
libs/libltdl/loaders/dlopen.c:248:36: note: Function 'vm_close' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vm_close (lt_user_data loader_data LT__UNUSED, lt_module module)
                                   ^
libs/libltdl/loaders/dlopen.c:265:34: style:inconclusive: Function 'vm_sym' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                 ^
libs/libltdl/loaders/dlopen.c:52:39: note: Function 'vm_sym' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static void *  vm_sym   (lt_user_data loader_data, lt_module module,
                                      ^
libs/libltdl/loaders/dlopen.c:265:34: note: Function 'vm_sym' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                 ^
libs/libltdl/loaders/dlopen.c:265:76: style:inconclusive: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'. [funcArgNamesDifferent]
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                                                           ^
libs/libltdl/loaders/dlopen.c:53:18: note: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'.
     const char *symbolname);
                 ^
libs/libltdl/loaders/dlopen.c:265:76: note: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'.
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                                                           ^
libs/libltdl/loaders/dlopen.c:181:0: information: Skipping configuration 'DL_GLOBAL;RTLD_GLOBAL' since the value of 'RTLD_GLOBAL' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        module_flags |= RTLD_GLOBAL;
^
libs/libltdl/loaders/dlopen.c:169:0: information: Skipping configuration 'DL_LAZY;LT_LAZY_OR_NOW' since the value of 'LT_LAZY_OR_NOW' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  int  module_flags = LT_LAZY_OR_NOW;
^
libs/libltdl/loaders/dlopen.c:191:0: information: Skipping configuration 'DL_LOCAL;RTLD_LOCAL' since the value of 'RTLD_LOCAL' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        module_flags |= RTLD_LOCAL;
^
libs/libltdl/loaders/dlopen.c:169:0: information: Skipping configuration 'DL_NOW' since the value of 'DL_NOW' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  int  module_flags = LT_LAZY_OR_NOW;
^
libs/libltdl/loaders/dlopen.c:169:0: information: Skipping configuration 'LT_LAZY_OR_NOW' since the value of 'LT_LAZY_OR_NOW' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  int  module_flags = LT_LAZY_OR_NOW;
^
libs/libltdl/loaders/dlopen.c:169:0: information: Skipping configuration 'LT_LAZY_OR_NOW;RTLD_LAZY' since the value of 'LT_LAZY_OR_NOW' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  int  module_flags = LT_LAZY_OR_NOW;
^
libs/libltdl/loaders/dlopen.c:220:0: information: Skipping configuration 'LT_SHARED_LIB_MEMBER;RTLD_MEMBER' since the value of 'LT_SHARED_LIB_MEMBER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      const char *member = LT_SHARED_LIB_MEMBER;
^
libs/libltdl/loaders/dlopen.c:206:0: information: Skipping configuration 'LT_SHARED_LIB_MEMBER;RTLD_MEMBER' since the value of 'RTLD_MEMBER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     module_flags |= RTLD_MEMBER;
^
libs/libltdl/loaders/dlopen.c:214:0: information: Skipping configuration 'LT_SHARED_LIB_MEMBER;RTLD_MEMBER' since the value of 'RTLD_MEMBER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (!module && len && !(module_flags & RTLD_MEMBER) && errno == ENOEXEC)
^
libs/libltdl/loaders/dyld.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
libs/libltdl/loaders/dyld.c:477:28: style: The scope of the variable 'lc' can be reduced. [variableScope]
      struct load_command *lc;
                           ^
libs/libltdl/loaders/dyld.c:188:35: style:inconclusive: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vl_exit (lt_user_data loader_data LT__UNUSED)
                                  ^
libs/libltdl/loaders/dyld.c:49:36: note: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static int  vl_exit  (lt_user_data loader_data);
                                   ^
libs/libltdl/loaders/dyld.c:188:35: note: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vl_exit (lt_user_data loader_data LT__UNUSED)
                                  ^
libs/libltdl/loaders/dyld.c:229:29: style:inconclusive: Function 'vm_open' argument 3 names different: declaration 'advise' definition 'LT__UNUSED'. [funcArgNamesDifferent]
         lt_dladvise advise LT__UNUSED)
                            ^
libs/libltdl/loaders/dyld.c:51:40: note: Function 'vm_open' argument 3 names different: declaration 'advise' definition 'LT__UNUSED'.
                           lt_dladvise advise);
                                       ^
libs/libltdl/loaders/dyld.c:229:29: note: Function 'vm_open' argument 3 names different: declaration 'advise' definition 'LT__UNUSED'.
         lt_dladvise advise LT__UNUSED)
                            ^
libs/libltdl/loaders/dyld.c:322:65: style:inconclusive: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'. [funcArgNamesDifferent]
vm_sym (lt_user_data loader_data, lt_module module, const char *name)
                                                                ^
libs/libltdl/loaders/dyld.c:54:18: note: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'.
     const char *symbolname);
                 ^
libs/libltdl/loaders/dyld.c:322:65: note: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'.
vm_sym (lt_user_data loader_data, lt_module module, const char *name)
                                                                ^
libs/libltdl/loaders/dyld.c:483:0: information: Skipping configuration 'LC_LOAD_WEAK_DYLIB' since the value of 'LC_LOAD_WEAK_DYLIB' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if ((LC_LOAD_DYLIB == lc->cmd) || (LC_LOAD_WEAK_DYLIB == lc->cmd))
^
libs/libltdl/loaders/dyld.c:483:0: information: Skipping configuration 'LC_REQ_DYLD' since the value of 'LC_REQ_DYLD' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if ((LC_LOAD_DYLIB == lc->cmd) || (LC_LOAD_WEAK_DYLIB == lc->cmd))
^
libs/libltdl/loaders/dyld.c:493:0: information: Skipping configuration 'NSADDIMAGE_OPTION_RETURN_ONLY_IF_LOADED' since the value of 'NSADDIMAGE_OPTION_RETURN_ONLY_IF_LOADED' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
          NSADDIMAGE_OPTION_RETURN_ONLY_IF_LOADED
^
libs/libltdl/loaders/dyld.c:257:0: information: Skipping configuration 'NSADDIMAGE_OPTION_RETURN_ON_ERROR' since the value of 'NSADDIMAGE_OPTION_RETURN_ON_ERROR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
         NSADDIMAGE_OPTION_RETURN_ON_ERROR);
^
libs/libltdl/loaders/dyld.c:495:0: information: Skipping configuration 'NSADDIMAGE_OPTION_RETURN_ON_ERROR' since the value of 'NSADDIMAGE_OPTION_RETURN_ON_ERROR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
          | NSADDIMAGE_OPTION_RETURN_ON_ERROR);
^
libs/libltdl/loaders/dyld.c:494:0: information: Skipping configuration 'NSADDIMAGE_OPTION_WITH_SEARCHING' since the value of 'NSADDIMAGE_OPTION_WITH_SEARCHING' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
          | NSADDIMAGE_OPTION_WITH_SEARCHING
^
libs/libltdl/loaders/load_add_on.c:98:35: style:inconclusive: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vl_exit (lt_user_data loader_data LT__UNUSED)
                                  ^
libs/libltdl/loaders/load_add_on.c:48:36: note: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static int  vl_exit  (lt_user_data loader_data);
                                   ^
libs/libltdl/loaders/load_add_on.c:98:35: note: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vl_exit (lt_user_data loader_data LT__UNUSED)
                                  ^
libs/libltdl/loaders/load_add_on.c:108:35: style:inconclusive: Function 'vm_open' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_open (lt_user_data loader_data LT__UNUSED, const char *filename,
                                  ^
libs/libltdl/loaders/load_add_on.c:49:41: note: Function 'vm_open' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static lt_module vm_open  (lt_user_data loader_data, const char *filename,
                                        ^
libs/libltdl/loaders/load_add_on.c:108:35: note: Function 'vm_open' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vm_open (lt_user_data loader_data LT__UNUSED, const char *filename,
                                  ^
libs/libltdl/loaders/load_add_on.c:109:29: style:inconclusive: Function 'vm_open' argument 3 names different: declaration 'advise' definition 'LT__UNUSED'. [funcArgNamesDifferent]
         lt_dladvise advise LT__UNUSED)
                            ^
libs/libltdl/loaders/load_add_on.c:50:40: note: Function 'vm_open' argument 3 names different: declaration 'advise' definition 'LT__UNUSED'.
                           lt_dladvise advise);
                                       ^
libs/libltdl/loaders/load_add_on.c:109:29: note: Function 'vm_open' argument 3 names different: declaration 'advise' definition 'LT__UNUSED'.
         lt_dladvise advise LT__UNUSED)
                            ^
libs/libltdl/loaders/load_add_on.c:138:36: style:inconclusive: Function 'vm_close' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_close (lt_user_data loader_data LT__UNUSED, lt_module module)
                                   ^
libs/libltdl/loaders/load_add_on.c:51:36: note: Function 'vm_close' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static int  vm_close (lt_user_data loader_data, lt_module module);
                                   ^
libs/libltdl/loaders/load_add_on.c:138:36: note: Function 'vm_close' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vm_close (lt_user_data loader_data LT__UNUSED, lt_module module)
                                   ^
libs/libltdl/loaders/load_add_on.c:155:34: style:inconclusive: Function 'vm_sym' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                 ^
libs/libltdl/loaders/load_add_on.c:52:39: note: Function 'vm_sym' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static void *  vm_sym   (lt_user_data loader_data, lt_module module,
                                      ^
libs/libltdl/loaders/load_add_on.c:155:34: note: Function 'vm_sym' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                 ^
libs/libltdl/loaders/load_add_on.c:155:76: style:inconclusive: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'. [funcArgNamesDifferent]
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                                                           ^
libs/libltdl/loaders/load_add_on.c:53:18: note: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'.
     const char *symbolname);
                 ^
libs/libltdl/loaders/load_add_on.c:155:76: note: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'.
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                                                           ^
libs/libltdl/loaders/loadlibrary.c:324:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (!getthreaderrormode)
      ^
libs/libltdl/loaders/loadlibrary.c:320:7: note: First condition
  if (!getthreaderrormode)
      ^
libs/libltdl/loaders/loadlibrary.c:324:7: note: Second condition
  if (!getthreaderrormode)
      ^
libs/libltdl/loaders/loadlibrary.c:123:35: style:inconclusive: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vl_exit (lt_user_data loader_data LT__UNUSED)
                                  ^
libs/libltdl/loaders/loadlibrary.c:52:36: note: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static int  vl_exit  (lt_user_data loader_data);
                                   ^
libs/libltdl/loaders/loadlibrary.c:123:35: note: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vl_exit (lt_user_data loader_data LT__UNUSED)
                                  ^
libs/libltdl/loaders/loadlibrary.c:134:35: style:inconclusive: Function 'vm_open' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_open (lt_user_data loader_data LT__UNUSED, const char *filename,
                                  ^
libs/libltdl/loaders/loadlibrary.c:53:41: note: Function 'vm_open' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static lt_module vm_open  (lt_user_data loader_data, const char *filename,
                                        ^
libs/libltdl/loaders/loadlibrary.c:134:35: note: Function 'vm_open' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vm_open (lt_user_data loader_data LT__UNUSED, const char *filename,
                                  ^
libs/libltdl/loaders/loadlibrary.c:135:29: style:inconclusive: Function 'vm_open' argument 3 names different: declaration 'advise' definition 'LT__UNUSED'. [funcArgNamesDifferent]
         lt_dladvise advise LT__UNUSED)
                            ^
libs/libltdl/loaders/loadlibrary.c:54:40: note: Function 'vm_open' argument 3 names different: declaration 'advise' definition 'LT__UNUSED'.
                           lt_dladvise advise);
                                       ^
libs/libltdl/loaders/loadlibrary.c:135:29: note: Function 'vm_open' argument 3 names different: declaration 'advise' definition 'LT__UNUSED'.
         lt_dladvise advise LT__UNUSED)
                            ^
libs/libltdl/loaders/loadlibrary.c:248:36: style:inconclusive: Function 'vm_close' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_close (lt_user_data loader_data LT__UNUSED, lt_module module)
                                   ^
libs/libltdl/loaders/loadlibrary.c:55:36: note: Function 'vm_close' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static int  vm_close (lt_user_data loader_data, lt_module module);
                                   ^
libs/libltdl/loaders/loadlibrary.c:248:36: note: Function 'vm_close' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vm_close (lt_user_data loader_data LT__UNUSED, lt_module module)
                                   ^
libs/libltdl/loaders/loadlibrary.c:265:34: style:inconclusive: Function 'vm_sym' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                 ^
libs/libltdl/loaders/loadlibrary.c:56:39: note: Function 'vm_sym' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static void *  vm_sym   (lt_user_data loader_data, lt_module module,
                                      ^
libs/libltdl/loaders/loadlibrary.c:265:34: note: Function 'vm_sym' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                 ^
libs/libltdl/loaders/loadlibrary.c:265:76: style:inconclusive: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'. [funcArgNamesDifferent]
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                                                           ^
libs/libltdl/loaders/loadlibrary.c:57:18: note: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'.
     const char *symbolname);
                 ^
libs/libltdl/loaders/loadlibrary.c:265:76: note: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'.
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                                                           ^
libs/libltdl/loaders/loadlibrary.c:147:16: style: Variable 'filename' is assigned a value that is never used. [unreadVariable]
      filename = wpath;
               ^
libs/libltdl/loaders/loadlibrary.c:178:8: style: Condition '!len' is always true [knownConditionTrueFalse]
   if (!len)
       ^
libs/libltdl/loaders/loadlibrary.c:165:13: note: Assignment 'len=0', assigned value is 0
      len = 0;
            ^
libs/libltdl/loaders/loadlibrary.c:178:8: note: Condition '!len' is always true
   if (!len)
       ^
libs/libltdl/loaders/loadlibrary.c:178:8: style: Condition '!len' is always true [knownConditionTrueFalse]
   if (!len)
       ^
libs/libltdl/loaders/loadlibrary.c:168:13: note: Assignment 'len=0', assigned value is 0
      len = 0;
            ^
libs/libltdl/loaders/loadlibrary.c:178:8: note: Condition '!len' is always true
   if (!len)
       ^
libs/libltdl/loaders/preopen.c:116:35: style:inconclusive: Function 'vl_init' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vl_init (lt_user_data loader_data LT__UNUSED)
                                  ^
libs/libltdl/loaders/preopen.c:48:36: note: Function 'vl_init' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static int  vl_init  (lt_user_data loader_data);
                                   ^
libs/libltdl/loaders/preopen.c:116:35: note: Function 'vl_init' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vl_init (lt_user_data loader_data LT__UNUSED)
                                  ^
libs/libltdl/loaders/preopen.c:133:35: style:inconclusive: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vl_exit (lt_user_data loader_data LT__UNUSED)
                                  ^
libs/libltdl/loaders/preopen.c:49:36: note: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static int  vl_exit  (lt_user_data loader_data);
                                   ^
libs/libltdl/loaders/preopen.c:133:35: note: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vl_exit (lt_user_data loader_data LT__UNUSED)
                                  ^
libs/libltdl/loaders/preopen.c:145:35: style:inconclusive: Function 'vm_open' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_open (lt_user_data loader_data LT__UNUSED, const char *filename,
                                  ^
libs/libltdl/loaders/preopen.c:50:41: note: Function 'vm_open' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static lt_module vm_open  (lt_user_data loader_data, const char *filename,
                                        ^
libs/libltdl/loaders/preopen.c:145:35: note: Function 'vm_open' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vm_open (lt_user_data loader_data LT__UNUSED, const char *filename,
                                  ^
libs/libltdl/loaders/preopen.c:146:29: style:inconclusive: Function 'vm_open' argument 3 names different: declaration 'advise' definition 'LT__UNUSED'. [funcArgNamesDifferent]
         lt_dladvise advise LT__UNUSED)
                            ^
libs/libltdl/loaders/preopen.c:51:40: note: Function 'vm_open' argument 3 names different: declaration 'advise' definition 'LT__UNUSED'.
                           lt_dladvise advise);
                                       ^
libs/libltdl/loaders/preopen.c:146:29: note: Function 'vm_open' argument 3 names different: declaration 'advise' definition 'LT__UNUSED'.
         lt_dladvise advise LT__UNUSED)
                            ^
libs/libltdl/loaders/preopen.c:198:36: style:inconclusive: Function 'vm_close' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_close (lt_user_data loader_data LT__UNUSED, lt_module module LT__UNUSED)
                                   ^
libs/libltdl/loaders/preopen.c:52:36: note: Function 'vm_close' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static int  vm_close (lt_user_data loader_data, lt_module module);
                                   ^
libs/libltdl/loaders/preopen.c:198:36: note: Function 'vm_close' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vm_close (lt_user_data loader_data LT__UNUSED, lt_module module LT__UNUSED)
                                   ^
libs/libltdl/loaders/preopen.c:198:65: style:inconclusive: Function 'vm_close' argument 2 names different: declaration 'module' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_close (lt_user_data loader_data LT__UNUSED, lt_module module LT__UNUSED)
                                                                ^
libs/libltdl/loaders/preopen.c:52:59: note: Function 'vm_close' argument 2 names different: declaration 'module' definition 'LT__UNUSED'.
static int  vm_close (lt_user_data loader_data, lt_module module);
                                                          ^
libs/libltdl/loaders/preopen.c:198:65: note: Function 'vm_close' argument 2 names different: declaration 'module' definition 'LT__UNUSED'.
vm_close (lt_user_data loader_data LT__UNUSED, lt_module module LT__UNUSED)
                                                                ^
libs/libltdl/loaders/preopen.c:209:34: style:inconclusive: Function 'vm_sym' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                 ^
libs/libltdl/loaders/preopen.c:53:39: note: Function 'vm_sym' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static void *  vm_sym   (lt_user_data loader_data, lt_module module,
                                      ^
libs/libltdl/loaders/preopen.c:209:34: note: Function 'vm_sym' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                 ^
libs/libltdl/loaders/preopen.c:209:76: style:inconclusive: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'. [funcArgNamesDifferent]
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                                                           ^
libs/libltdl/loaders/preopen.c:54:18: note: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'.
     const char *symbolname);
                 ^
libs/libltdl/loaders/preopen.c:209:76: note: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'.
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                                                           ^
libs/libltdl/loaders/shl_load.c:169:14: style: Redundant initialization for 'module'. The initialized value is overwritten before it is read. [redundantInitialization]
      module = self;
             ^
libs/libltdl/loaders/shl_load.c:155:20: note: module is initialized
  lt_module module = shl_load (filename, LT_BIND_FLAGS, 0L);
                   ^
libs/libltdl/loaders/shl_load.c:169:14: note: module is overwritten
      module = self;
             ^
libs/libltdl/loaders/shl_load.c:141:35: style:inconclusive: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vl_exit (lt_user_data loader_data LT__UNUSED)
                                  ^
libs/libltdl/loaders/shl_load.c:48:36: note: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static int  vl_exit  (lt_user_data loader_data);
                                   ^
libs/libltdl/loaders/shl_load.c:141:35: note: Function 'vl_exit' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vl_exit (lt_user_data loader_data LT__UNUSED)
                                  ^
libs/libltdl/loaders/shl_load.c:151:35: style:inconclusive: Function 'vm_open' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_open (lt_user_data loader_data LT__UNUSED, const char *filename,
                                  ^
libs/libltdl/loaders/shl_load.c:49:41: note: Function 'vm_open' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static lt_module vm_open  (lt_user_data loader_data, const char *filename,
                                        ^
libs/libltdl/loaders/shl_load.c:151:35: note: Function 'vm_open' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vm_open (lt_user_data loader_data LT__UNUSED, const char *filename,
                                  ^
libs/libltdl/loaders/shl_load.c:152:29: style:inconclusive: Function 'vm_open' argument 3 names different: declaration 'advise' definition 'LT__UNUSED'. [funcArgNamesDifferent]
         lt_dladvise advise LT__UNUSED)
                            ^
libs/libltdl/loaders/shl_load.c:50:40: note: Function 'vm_open' argument 3 names different: declaration 'advise' definition 'LT__UNUSED'.
                           lt_dladvise advise);
                                       ^
libs/libltdl/loaders/shl_load.c:152:29: note: Function 'vm_open' argument 3 names different: declaration 'advise' definition 'LT__UNUSED'.
         lt_dladvise advise LT__UNUSED)
                            ^
libs/libltdl/loaders/shl_load.c:187:36: style:inconclusive: Function 'vm_close' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_close (lt_user_data loader_data LT__UNUSED, lt_module module)
                                   ^
libs/libltdl/loaders/shl_load.c:51:36: note: Function 'vm_close' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static int  vm_close (lt_user_data loader_data, lt_module module);
                                   ^
libs/libltdl/loaders/shl_load.c:187:36: note: Function 'vm_close' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vm_close (lt_user_data loader_data LT__UNUSED, lt_module module)
                                   ^
libs/libltdl/loaders/shl_load.c:204:34: style:inconclusive: Function 'vm_sym' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'. [funcArgNamesDifferent]
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                 ^
libs/libltdl/loaders/shl_load.c:52:39: note: Function 'vm_sym' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
static void *  vm_sym   (lt_user_data loader_data, lt_module module,
                                      ^
libs/libltdl/loaders/shl_load.c:204:34: note: Function 'vm_sym' argument 1 names different: declaration 'loader_data' definition 'LT__UNUSED'.
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                 ^
libs/libltdl/loaders/shl_load.c:204:76: style:inconclusive: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'. [funcArgNamesDifferent]
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                                                           ^
libs/libltdl/loaders/shl_load.c:53:18: note: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'.
     const char *symbolname);
                 ^
libs/libltdl/loaders/shl_load.c:204:76: note: Function 'vm_sym' argument 3 names different: declaration 'symbolname' definition 'name'.
vm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)
                                                                           ^
libs/libltdl/loaders/shl_load.c:155:0: information: Skipping configuration 'DYNAMIC_PATH' since the value of 'DYNAMIC_PATH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  lt_module module = shl_load (filename, LT_BIND_FLAGS, 0L);
^
libs/libltdl/loaders/shl_load.c:173:0: information: Skipping configuration 'DYNAMIC_PATH' since the value of 'DYNAMIC_PATH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      module = shl_load (filename, LT_BIND_FLAGS, 0L);
^
libs/libltdl/lt__argz.c:33:0: error: No header in #include [preprocessorErrorDirective]
#  include LT_CONFIG_H
^
libs/libltdl/lt__dirent.c:78:3: error: Returning/dereferencing 'entry' after it is deallocated / released [deallocret]
  return entry;
  ^
libs/libltdl/lt__dirent.c:73:17: note: Returning/dereferencing 'entry' after it is deallocated / released
       entry = (free (entry), (DIR *) 0);
                ^
libs/libltdl/lt__dirent.c:78:3: note: Returning/dereferencing 'entry' after it is deallocated / released
  return entry;
  ^
libs/libltdl/lt__dirent.c:85:7: style: The scope of the variable 'status' can be reduced. [variableScope]
  int status;
      ^
libs/libltdl/lt_dlloader.c:190:7: style: Condition 'vtable' is always true [knownConditionTrueFalse]
  if (vtable && vtable->dlloader_exit)
      ^
libs/libltdl/lt_dlloader.c:163:7: note: Assuming that condition '!vtable' is not redundant
  if (!vtable)
      ^
libs/libltdl/lt_dlloader.c:182:7: note: Assuming condition is false
  if (in_use)
      ^
libs/libltdl/lt_dlloader.c:190:7: note: Condition 'vtable' is always true
  if (vtable && vtable->dlloader_exit)
      ^
libs/libltdl/ltdl.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
libs/libltdl/ltdl.c:1676:12: style: Condition 'filename' is always true [knownConditionTrueFalse]
  else if (filename && *filename)
           ^
libs/libltdl/ltdl.c:1664:7: note: Assuming that condition '!filename' is not redundant
  if (!filename
      ^
libs/libltdl/ltdl.c:1676:12: note: Condition 'filename' is always true
  else if (filename && *filename)
           ^
libs/libltdl/ltdl.c:2438:11: style: Condition 'cur' is always true [knownConditionTrueFalse]
      if (cur && cur->info.name && STREQ (cur->info.name, module_name))
          ^
libs/libltdl/ltdl.c:2435:18: note: Assuming that condition 'handle=lt_dlhandle_iterate(iface,handle)' is not redundant
  while ((handle = lt_dlhandle_iterate (iface, handle)))
                 ^
libs/libltdl/ltdl.c:2437:25: note: Assignment 'cur=handle', assigned value is 0
      lt_dlhandle cur = handle;
                        ^
libs/libltdl/ltdl.c:2438:11: note: Condition 'cur' is always true
      if (cur && cur->info.name && STREQ (cur->info.name, module_name))
          ^
libs/libltdl/ltdl.c:984:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
libs/libltdl/ltdl.c:368:29: style:inconclusive: Function 'tryall_dlopen' argument 1 names different: declaration 'handle' definition 'phandle'. [funcArgNamesDifferent]
tryall_dlopen (lt_dlhandle *phandle, const char *filename,
                            ^
libs/libltdl/ltdl.c:136:46: note: Function 'tryall_dlopen' argument 1 names different: declaration 'handle' definition 'phandle'.
static int tryall_dlopen       (lt_dlhandle *handle,
                                             ^
libs/libltdl/ltdl.c:368:29: note: Function 'tryall_dlopen' argument 1 names different: declaration 'handle' definition 'phandle'.
tryall_dlopen (lt_dlhandle *phandle, const char *filename,
                            ^
libs/libltdl/ltdl.c:369:21: style:inconclusive: Function 'tryall_dlopen' argument 3 names different: declaration 'padvise' definition 'advise'. [funcArgNamesDifferent]
        lt_dladvise advise, const lt_dlvtable *vtable)
                    ^
libs/libltdl/ltdl.c:138:24: note: Function 'tryall_dlopen' argument 3 names different: declaration 'padvise' definition 'advise'.
           lt_dladvise padvise,
                       ^
libs/libltdl/ltdl.c:369:21: note: Function 'tryall_dlopen' argument 3 names different: declaration 'padvise' definition 'advise'.
        lt_dladvise advise, const lt_dlvtable *vtable)
                    ^
libs/libltdl/ltdl.c:782:57: style:inconclusive: Function 'find_handle_callback' argument 3 names different: declaration 'ignored' definition 'data2'. [funcArgNamesDifferent]
find_handle_callback (char *filename, void *data, void *data2)
                                                        ^
libs/libltdl/ltdl.c:112:18: note: Function 'find_handle_callback' argument 3 names different: declaration 'ignored' definition 'data2'.
           void *ignored);
                 ^
libs/libltdl/ltdl.c:782:57: note: Function 'find_handle_callback' argument 3 names different: declaration 'ignored' definition 'data2'.
find_handle_callback (char *filename, void *data, void *data2)
                                                        ^
libs/libltdl/ltdl.c:804:20: style:inconclusive: Function 'find_handle' argument 3 names different: declaration 'handle' definition 'phandle'. [funcArgNamesDifferent]
      lt_dlhandle *phandle, lt_dladvise advise)
                   ^
libs/libltdl/ltdl.c:124:25: note: Function 'find_handle' argument 3 names different: declaration 'handle' definition 'phandle'.
           lt_dlhandle *handle,
                        ^
libs/libltdl/ltdl.c:804:20: note: Function 'find_handle' argument 3 names different: declaration 'handle' definition 'phandle'.
      lt_dlhandle *phandle, lt_dladvise advise)
                   ^
libs/libltdl/ltdl.c:818:50: style:inconclusive: Function 'load_deplibs' argument 2 names different: declaration 'deplibs' definition 'LT__UNUSED'. [funcArgNamesDifferent]
load_deplibs (lt_dlhandle handle, char * deplibs LT__UNUSED)
                                                 ^
libs/libltdl/ltdl.c:131:59: note: Function 'load_deplibs' argument 2 names different: declaration 'deplibs' definition 'LT__UNUSED'.
static int load_deplibs       (lt_dlhandle handle,  char *deplibs);
                                                          ^
libs/libltdl/ltdl.c:818:50: note: Function 'load_deplibs' argument 2 names different: declaration 'deplibs' definition 'LT__UNUSED'.
load_deplibs (lt_dlhandle handle, char * deplibs LT__UNUSED)
                                                 ^
libs/libltdl/ltdl.c:1159:26: style:inconclusive: Function 'try_dlopen' argument 1 names different: declaration 'handle' definition 'phandle'. [funcArgNamesDifferent]
try_dlopen (lt_dlhandle *phandle, const char *filename, const char *ext,
                         ^
libs/libltdl/ltdl.c:133:43: note: Function 'try_dlopen' argument 1 names different: declaration 'handle' definition 'phandle'.
static int try_dlopen       (lt_dlhandle *handle,
                                          ^
libs/libltdl/ltdl.c:1159:26: note: Function 'try_dlopen' argument 1 names different: declaration 'handle' definition 'phandle'.
try_dlopen (lt_dlhandle *phandle, const char *filename, const char *ext,
                         ^
libs/libltdl/ltdl.c:1870:29: style:inconclusive: Function 'foreachfile_callback' argument 1 names different: declaration 'filename' definition 'dirname'. [funcArgNamesDifferent]
foreachfile_callback (char *dirname, void *data1, void *data2)
                            ^
libs/libltdl/ltdl.c:113:41: note: Function 'foreachfile_callback' argument 1 names different: declaration 'filename' definition 'dirname'.
static int foreachfile_callback  (char *filename, void *data1,
                                        ^
libs/libltdl/ltdl.c:1870:29: note: Function 'foreachfile_callback' argument 1 names different: declaration 'filename' definition 'dirname'.
foreachfile_callback (char *dirname, void *data1, void *data2)
                            ^
libs/libltdl/ltdl.c:508:0: information: Skipping configuration 'LT_DIRSEP_CHAR' since the value of 'LT_DIRSEP_CHAR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  assert (strchr (dirname, LT_DIRSEP_CHAR) == 0);
^
libs/libltdl/ltdl.c:617:0: information: Skipping configuration 'LT_DIRSEP_CHAR' since the value of 'LT_DIRSEP_CHAR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     && (path[src] != LT_DIRSEP_CHAR)
^
libs/libltdl/ltdl.c:629:0: information: Skipping configuration 'LT_DIRSEP_CHAR' since the value of 'LT_DIRSEP_CHAR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   && (path[1+ src] != LT_DIRSEP_CHAR)
^
libs/libltdl/ltdl.c:89:0: information: Skipping configuration 'LT_DLSEARCH_PATH' since the value of 'LT_DLSEARCH_PATH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const char sys_dlsearch_path[] = LT_DLSEARCH_PATH;
^
libs/libltdl/ltdl.c:1041:0: information: Skipping configuration 'LT_FILENAME_MAX' since the value of 'LT_FILENAME_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  size_t line_len = LT_FILENAME_MAX;
^
libs/libltdl/ltdl.c:78:0: information: Skipping configuration 'LT_LIBEXT' since the value of 'LT_LIBEXT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static  const char libext[]  = LT_LIBEXT;
^
libs/libltdl/ltdl.c:79:0: information: Skipping configuration 'LT_LIBPREFIX' since the value of 'LT_LIBPREFIX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static  const char libprefix[]  = LT_LIBPREFIX;
^
libs/libltdl/ltdl.c:81:0: information: Skipping configuration 'LT_MODULE_EXT' since the value of 'LT_MODULE_EXT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const char shlib_ext[]  = LT_MODULE_EXT;
^
libs/libltdl/ltdl.c:1369:0: information: Skipping configuration 'LT_MODULE_PATH_VAR' since the value of 'LT_MODULE_PATH_VAR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
       search_path = getenv (LT_MODULE_PATH_VAR);
^
libs/libltdl/ltdl.c:1472:0: information: Skipping configuration 'LT_MODULE_PATH_VAR' since the value of 'LT_MODULE_PATH_VAR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     && !find_handle (getenv (LT_MODULE_PATH_VAR), base_name,
^
libs/libltdl/ltdl.c:1932:0: information: Skipping configuration 'LT_MODULE_PATH_VAR' since the value of 'LT_MODULE_PATH_VAR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   is_done = foreach_dirinpath (getenv(LT_MODULE_PATH_VAR), 0,
^
libs/libltdl/ltdl.c:86:0: information: Skipping configuration 'LT_SHARED_EXT' since the value of 'LT_SHARED_EXT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const char shared_ext[]  = LT_SHARED_EXT;
^
libs/libltdl/slist.c:80:16: style: Variable 'stale' is assigned a value that is never used. [unreadVariable]
  SList *stale = 0;
               ^
libs/libtstl/to_chars.cpp:53:27: warning: Either the condition 'val!=0' is redundant or there is division by zero at line 53. [zerodivcond]
    *--addr = to_char(val % base);
                          ^
libs/libtstl/to_chars.cpp:52:28: note: Assuming that condition 'val!=0' is not redundant
  while (addr > buf && val != 0) {
                           ^
libs/libtstl/to_chars.cpp:54:12: note: Assignment to 'val/=base'
    val /= base;
           ^
libs/libtstl/to_chars.cpp:53:27: note: Division by zero
    *--addr = to_char(val % base);
                          ^
libs/libtutf/ascii.c:37:7: error: There is an unknown macro here somewhere. Configuration is required. If T_CAT is a macro then please configure it. [unknownMacro]
trune T_CAT(Tutf_UTF_32_to_, T_MAP(ASCII))(trune c) {
      ^
libs/libtutf/template.c:20:7: error: There is an unknown macro here somewhere. Configuration is required. If T_CAT is a macro then please configure it. [unknownMacro]
trune T_CAT(Tutf_UTF_32_to_, T_TEMPLATE)(trune c) {
      ^
libs/libtw/avl.c:231:14: style: Variable 'Y' is reassigned a value before the old one has been used. [redundantAssignment]
      if ((Y = L->AVLParent) == P)
             ^
libs/libtw/avl.c:230:9: note: Y is assigned
      Y = R->AVLParent;
        ^
libs/libtw/avl.c:231:14: note: Y is overwritten
      if ((Y = L->AVLParent) == P)
             ^
libs/libtw/libtw.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
libs/libtw/libtw.c:960:38: error: There is an unknown macro here somewhere. Configuration is required. If TW_STR is a macro then please configure it. [unknownMacro]
  TW_CONST char *hostdata = " Twin-" TW_STR(TW_PROTOCOL_VERSION_MAJOR) ".";
                                     ^
libs/libtw/missing.c:54:3: portability: Returning an address value in a function with integer return type is not portable. [CastAddressToIntegerAtReturn]
  return s;
  ^
libs/libtw/missing.c:34:9: style: The scope of the variable 'q' can be reduced. [variableScope]
  char *q;
        ^
libs/libtw/missing.c:35:10: style: The scope of the variable 'len' can be reduced. [variableScope]
  size_t len;
         ^
server/obj/widget.h:141:16: style: The function 'Delete' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Delete() OVERRIDE;
               ^
server/obj/obj.h:44:16: note: Virtual function in base class
  virtual void Delete();
               ^
server/obj/widget.h:141:16: note: Function in derived class
  virtual void Delete() OVERRIDE;
               ^
server/obj/widget.h:142:16: style: The function 'Remove' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Remove() OVERRIDE;
               ^
server/obj/obj.h:47:16: note: Virtual function in base class
  virtual void Remove() {
               ^
server/obj/widget.h:142:16: note: Function in derived class
  virtual void Remove() OVERRIDE;
               ^
server/obj/widget.h:143:16: style: The function 'ChangeField' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void ChangeField(udat field, uldat clear_mask, uldat xor_mask) OVERRIDE;
               ^
server/obj/obj.h:51:16: note: Virtual function in base class
  virtual void ChangeField(udat field, uldat clear_mask, uldat xor_mask) {
               ^
server/obj/widget.h:143:16: note: Function in derived class
  virtual void ChangeField(udat field, uldat clear_mask, uldat xor_mask) OVERRIDE;
               ^
server/obj/gadget.h:39:16: style: The function 'Delete' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Delete() OVERRIDE;
               ^
server/obj/widget.h:141:16: note: Virtual function in base class
  virtual void Delete() OVERRIDE;
               ^
server/obj/gadget.h:39:16: note: Function in derived class
  virtual void Delete() OVERRIDE;
               ^
server/obj/gadget.h:40:16: style: The function 'ChangeField' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void ChangeField(udat field, uldat clear_mask, uldat xor_mask) OVERRIDE;
               ^
server/obj/widget.h:143:16: note: Virtual function in base class
  virtual void ChangeField(udat field, uldat clear_mask, uldat xor_mask) OVERRIDE;
               ^
server/obj/gadget.h:40:16: note: Function in derived class
  virtual void ChangeField(udat field, uldat clear_mask, uldat xor_mask) OVERRIDE;
               ^
server/obj/gadget.h:43:16: style: The function 'DrawSelf' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void DrawSelf(Sdraw *d) OVERRIDE; // defined in draw.cpp
               ^
server/obj/widget.h:147:16: note: Virtual function in base class
  virtual void DrawSelf(Sdraw *d);    // defined in draw.cpp
               ^
server/obj/gadget.h:43:16: note: Function in derived class
  virtual void DrawSelf(Sdraw *d) OVERRIDE; // defined in draw.cpp
               ^
server/obj/window.h:98:16: style: The function 'Delete' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Delete() OVERRIDE;
               ^
server/obj/widget.h:141:16: note: Virtual function in base class
  virtual void Delete() OVERRIDE;
               ^
server/obj/window.h:98:16: note: Function in derived class
  virtual void Delete() OVERRIDE;
               ^
server/obj/window.h:99:16: style: The function 'ChangeField' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void ChangeField(udat field, uldat clear_mask, uldat xor_mask) OVERRIDE;
               ^
server/obj/widget.h:143:16: note: Virtual function in base class
  virtual void ChangeField(udat field, uldat clear_mask, uldat xor_mask) OVERRIDE;
               ^
server/obj/window.h:99:16: note: Function in derived class
  virtual void ChangeField(udat field, uldat clear_mask, uldat xor_mask) OVERRIDE;
               ^
server/obj/window.h:102:16: style: The function 'DrawSelf' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void DrawSelf(Sdraw *d) OVERRIDE; // defined in draw.cpp
               ^
server/obj/widget.h:147:16: note: Virtual function in base class
  virtual void DrawSelf(Sdraw *d);    // defined in draw.cpp
               ^
server/obj/window.h:102:16: note: Function in derived class
  virtual void DrawSelf(Sdraw *d) OVERRIDE; // defined in draw.cpp
               ^
server/obj/window.h:103:16: style: The function 'SetXY' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void SetXY(dat x, dat y) OVERRIDE;
               ^
server/obj/widget.h:150:16: note: Virtual function in base class
  virtual void SetXY(dat x, dat y);
               ^
server/obj/window.h:103:16: note: Function in derived class
  virtual void SetXY(dat x, dat y) OVERRIDE;
               ^
server/obj/window.h:105:16: style: The function 'Expose' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Expose(dat xwidth, dat ywidth, dat left, dat up, dat pitch, const char *ascii,
               ^
server/obj/widget.h:168:16: note: Virtual function in base class
  virtual void Expose(dat xwidth, dat ywidth, dat left, dat up, dat pitch, const char *ascii,
               ^
server/obj/window.h:105:16: note: Function in derived class
  virtual void Expose(dat xwidth, dat ywidth, dat left, dat up, dat pitch, const char *ascii,
               ^
server/obj/screen.h:33:16: style: The function 'Delete' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Delete() OVERRIDE;
               ^
server/obj/widget.h:141:16: note: Virtual function in base class
  virtual void Delete() OVERRIDE;
               ^
server/obj/screen.h:33:16: note: Function in derived class
  virtual void Delete() OVERRIDE;
               ^
server/obj/screen.h:34:16: style: The function 'Remove' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Remove() OVERRIDE;
               ^
server/obj/widget.h:142:16: note: Virtual function in base class
  virtual void Remove() OVERRIDE;
               ^
server/obj/screen.h:34:16: note: Function in derived class
  virtual void Remove() OVERRIDE;
               ^
server/obj/screen.h:35:16: style: The function 'ChangeField' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void ChangeField(udat field, uldat clear_mask, uldat xor_mask) OVERRIDE;
               ^
server/obj/widget.h:143:16: note: Virtual function in base class
  virtual void ChangeField(udat field, uldat clear_mask, uldat xor_mask) OVERRIDE;
               ^
server/obj/screen.h:35:16: note: Function in derived class
  virtual void ChangeField(udat field, uldat clear_mask, uldat xor_mask) OVERRIDE;
               ^
server/obj/screen.h:38:16: style: The function 'DrawSelf' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void DrawSelf(Sdraw *d) OVERRIDE; // defined in draw.cpp
               ^
server/obj/widget.h:147:16: note: Virtual function in base class
  virtual void DrawSelf(Sdraw *d);    // defined in draw.cpp
               ^
server/obj/screen.h:38:16: note: Function in derived class
  virtual void DrawSelf(Sdraw *d) OVERRIDE; // defined in draw.cpp
               ^
server/obj/screen.h:39:16: style: The function 'SetXY' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void SetXY(dat x, dat y) OVERRIDE;
               ^
server/obj/widget.h:150:16: note: Virtual function in base class
  virtual void SetXY(dat x, dat y);
               ^
server/obj/screen.h:39:16: note: Function in derived class
  virtual void SetXY(dat x, dat y) OVERRIDE;
               ^
server/obj/screen.h:40:19: style: The function 'Focus' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Twidget Focus() OVERRIDE;
                  ^
server/obj/widget.h:153:19: note: Virtual function in base class
  virtual Twidget Focus();         // return previously focused widget
                  ^
server/obj/screen.h:40:19: note: Function in derived class
  virtual Twidget Focus() OVERRIDE;
                  ^
server/obj/screen.h:74:16: style: The function 'InsertWidget' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void InsertWidget(Tobj parent, Twidget prev, Twidget next) OVERRIDE;
               ^
server/obj/widget.h:175:16: note: Virtual function in base class
  virtual void InsertWidget(Tobj parent, Twidget prev, Twidget next);
               ^
server/obj/screen.h:74:16: note: Function in derived class
  virtual void InsertWidget(Tobj parent, Twidget prev, Twidget next) OVERRIDE;
               ^
server/obj/group.h:36:16: style: The function 'Delete' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Delete() OVERRIDE;
               ^
server/obj/obj.h:44:16: note: Virtual function in base class
  virtual void Delete();
               ^
server/obj/group.h:36:16: note: Function in derived class
  virtual void Delete() OVERRIDE;
               ^
server/obj/group.h:38:16: style: The function 'Remove' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Remove() OVERRIDE;
               ^
server/obj/obj.h:47:16: note: Virtual function in base class
  virtual void Remove() {
               ^
server/obj/group.h:38:16: note: Function in derived class
  virtual void Remove() OVERRIDE;
               ^
server/obj/row.h:40:16: style: The function 'Delete' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Delete() OVERRIDE;
               ^
server/obj/obj.h:44:16: note: Virtual function in base class
  virtual void Delete();
               ^
server/obj/row.h:40:16: note: Function in derived class
  virtual void Delete() OVERRIDE;
               ^
server/obj/row.h:41:16: style: The function 'Remove' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Remove() OVERRIDE;
               ^
server/obj/obj.h:47:16: note: Virtual function in base class
  virtual void Remove() {
               ^
server/obj/row.h:41:16: note: Function in derived class
  virtual void Remove() OVERRIDE;
               ^
server/obj/menuitem.h:36:16: style: The function 'Delete' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Delete() OVERRIDE;
               ^
server/obj/row.h:40:16: note: Virtual function in base class
  virtual void Delete() OVERRIDE;
               ^
server/obj/menuitem.h:36:16: note: Function in derived class
  virtual void Delete() OVERRIDE;
               ^
server/obj/menuitem.h:37:16: style: The function 'Remove' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Remove() OVERRIDE;
               ^
server/obj/row.h:41:16: note: Virtual function in base class
  virtual void Remove() OVERRIDE;
               ^
server/obj/menuitem.h:37:16: note: Function in derived class
  virtual void Remove() OVERRIDE;
               ^
server/obj/menu.h:36:16: style: The function 'Delete' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Delete() OVERRIDE;
               ^
server/obj/obj.h:44:16: note: Virtual function in base class
  virtual void Delete();
               ^
server/obj/menu.h:36:16: note: Function in derived class
  virtual void Delete() OVERRIDE;
               ^
server/obj/menu.h:38:16: style: The function 'Remove' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Remove() OVERRIDE;
               ^
server/obj/obj.h:47:16: note: Virtual function in base class
  virtual void Remove() {
               ^
server/obj/menu.h:38:16: note: Function in derived class
  virtual void Remove() OVERRIDE;
               ^
server/obj/msg.h:38:16: style: The function 'Delete' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Delete() OVERRIDE;
               ^
server/obj/obj.h:44:16: note: Virtual function in base class
  virtual void Delete();
               ^
server/obj/msg.h:38:16: note: Function in derived class
  virtual void Delete() OVERRIDE;
               ^
server/obj/msg.h:39:16: style: The function 'Remove' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Remove() OVERRIDE;
               ^
server/obj/obj.h:47:16: note: Virtual function in base class
  virtual void Remove() {
               ^
server/obj/msg.h:39:16: note: Function in derived class
  virtual void Remove() OVERRIDE;
               ^
server/obj/msgport.h:46:16: style: The function 'Delete' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Delete() OVERRIDE;
               ^
server/obj/obj.h:44:16: note: Virtual function in base class
  virtual void Delete();
               ^
server/obj/msgport.h:46:16: note: Function in derived class
  virtual void Delete() OVERRIDE;
               ^
server/obj/msgport.h:47:16: style: The function 'Remove' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Remove() OVERRIDE;
               ^
server/obj/obj.h:47:16: note: Virtual function in base class
  virtual void Remove() {
               ^
server/obj/msgport.h:47:16: note: Function in derived class
  virtual void Remove() OVERRIDE;
               ^
server/obj/mutex.h:35:16: style: The function 'Delete' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Delete() OVERRIDE;
               ^
server/obj/obj.h:44:16: note: Virtual function in base class
  virtual void Delete();
               ^
server/obj/mutex.h:35:16: note: Function in derived class
  virtual void Delete() OVERRIDE;
               ^
server/obj/mutex.h:36:16: style: The function 'Remove' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Remove() OVERRIDE;
               ^
server/obj/obj.h:47:16: note: Virtual function in base class
  virtual void Remove() {
               ^
server/obj/mutex.h:36:16: note: Function in derived class
  virtual void Remove() OVERRIDE;
               ^
server/obj/module.h:44:16: style: The function 'Delete' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Delete() OVERRIDE;
               ^
server/obj/obj.h:44:16: note: Virtual function in base class
  virtual void Delete();
               ^
server/obj/module.h:44:16: note: Function in derived class
  virtual void Delete() OVERRIDE;
               ^
server/obj/module.h:45:16: style: The function 'Remove' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Remove() OVERRIDE;
               ^
server/obj/obj.h:47:16: note: Virtual function in base class
  virtual void Remove() {
               ^
server/obj/module.h:45:16: note: Function in derived class
  virtual void Remove() OVERRIDE;
               ^
server/obj/display.h:155:16: style: The function 'Delete' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Delete() OVERRIDE;
               ^
server/obj/obj.h:44:16: note: Virtual function in base class
  virtual void Delete();
               ^
server/obj/display.h:155:16: note: Function in derived class
  virtual void Delete() OVERRIDE;
               ^
server/obj/display.h:157:16: style: The function 'Remove' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Remove() OVERRIDE;
               ^
server/obj/obj.h:47:16: note: Virtual function in base class
  virtual void Remove() {
               ^
server/obj/display.h:157:16: note: Function in derived class
  virtual void Remove() OVERRIDE;
               ^
server/obj/all.h:127:16: style: The function 'Delete' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Delete() OVERRIDE;
               ^
server/obj/obj.h:44:16: note: Virtual function in base class
  virtual void Delete();
               ^
server/obj/all.h:127:16: note: Function in derived class
  virtual void Delete() OVERRIDE;
               ^
server/obj/all.h:130:16: style: The function 'Remove' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Remove() OVERRIDE;
               ^
server/obj/obj.h:47:16: note: Virtual function in base class
  virtual void Remove() {
               ^
server/obj/all.h:130:16: note: Function in derived class
  virtual void Remove() OVERRIDE;
               ^
server/alloc.cpp:31:9: style: The scope of the variable 'q' can be reduced. [variableScope]
  char *q;
        ^
server/alloc.cpp:44:9: style: The scope of the variable 'q' can be reduced. [variableScope]
  char *q;
        ^
server/alloc.cpp:88:10: style: The scope of the variable 'temp' can be reduced. [variableScope]
  trune *temp, *save;
         ^
server/log.h:19:1: style: The class 'Logger' does not have a constructor although it has private member variables. [noConstructor]
class Logger {
^
server/builtin.cpp:210:9: style: Consecutive return, break, continue, goto or throw statements are unnecessary. [duplicateBreak]
        break;
        ^
server/builtin.cpp:179:17: style: The scope of the variable 'arg0' can be reduced. [variableScope]
  char **argv, *arg0;
                ^
server/builtin.cpp:181:11: style: The scope of the variable 'G' can be reduced. [variableScope]
  Tgadget G;
          ^
server/data.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
server/display.cpp:1028:15: error: There is an unknown macro here somewhere. Configuration is required. If STR is a macro then please configure it. [unknownMacro]
    printk("" SS ": libtw error: " SS "" SS "\n", MYname, TwStrError(err),
              ^
server/display.cpp:259:0: information: Skipping configuration 'TW_HAVE_INCLUDED_LTDL;TW_HAVE_LTDL;TW_LT_LIBPREFIX' since the value of 'TW_LT_LIBPREFIX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  } else if (!m->Name.format(name) || !path.format(plugindir, "/" DL_PREFIX, name, DL_SUFFIX)) {
^
server/dl.cpp:28:10: style: The scope of the variable 'init_func' can be reduced. [variableScope]
  byte (*init_func)(Tmodule);
         ^
server/dl.cpp:35:0: information: Skipping configuration 'TW_HAVE_INCLUDED_LTDL;TW_HAVE_LTDL;TW_LT_LIBPREFIX' since the value of 'TW_LT_LIBPREFIX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      if (!name.format(plugindir, "/", DL_PREFIX, Module->Name, DL_SUFFIX)) {
^
server/draw.cpp:1230:16: style: Redundant condition: onlyW. '!A || (A && B)' is equivalent to '!A || B' [redundantCondition]
    if (!onlyW || (onlyW && ScreenParent(onlyW->Parent) != FirstScreen)) {
               ^
server/draw.cpp:989:11: style: Condition '!no_children' is always true [knownConditionTrueFalse]
      if (!no_children && child_next) {
          ^
server/draw.cpp:983:9: note: Assuming that condition 'no_children' is not redundant
    if (no_children)
        ^
server/draw.cpp:989:11: note: Condition '!no_children' is always true
      if (!no_children && child_next) {
          ^
server/draw.cpp:863:14: style: C-style pointer casting [cstyleCast]
    if ((d = (Sdraw *)AllocMem(sizeof(Sdraw)))) {
             ^
server/draw.cpp:1088:14: style: C-style pointer casting [cstyleCast]
    if ((d = (Sdraw *)AllocMem(sizeof(Sdraw)))) {
             ^
server/draw.cpp:1175:28: style: The scope of the variable 'shaded' can be reduced. [variableScope]
  bool first_cycle = true, shaded;
                           ^
server/draw.cpp:1839:11: style: The scope of the variable 'FirstScreen' can be reduced. [variableScope]
  Tscreen FirstScreen;
          ^
server/draw.cpp:86:26: style:inconclusive: Function 'DrawDesktop' argument 1 names different: declaration 's' definition 'screen'. [funcArgNamesDifferent]
void DrawDesktop(Tscreen screen, dat X1, dat Y1, dat X2, dat Y2, bool shaded) {
                         ^
server/draw.h:16:26: note: Function 'DrawDesktop' argument 1 names different: declaration 's' definition 'screen'.
void DrawDesktop(Tscreen s, dat xstart, dat ystart, dat xend, dat yend, bool shaded);
                         ^
server/draw.cpp:86:26: note: Function 'DrawDesktop' argument 1 names different: declaration 's' definition 'screen'.
void DrawDesktop(Tscreen screen, dat X1, dat Y1, dat X2, dat Y2, bool shaded) {
                         ^
server/draw.cpp:86:38: style:inconclusive: Function 'DrawDesktop' argument 2 names different: declaration 'xstart' definition 'X1'. [funcArgNamesDifferent]
void DrawDesktop(Tscreen screen, dat X1, dat Y1, dat X2, dat Y2, bool shaded) {
                                     ^
server/draw.h:16:33: note: Function 'DrawDesktop' argument 2 names different: declaration 'xstart' definition 'X1'.
void DrawDesktop(Tscreen s, dat xstart, dat ystart, dat xend, dat yend, bool shaded);
                                ^
server/draw.cpp:86:38: note: Function 'DrawDesktop' argument 2 names different: declaration 'xstart' definition 'X1'.
void DrawDesktop(Tscreen screen, dat X1, dat Y1, dat X2, dat Y2, bool shaded) {
                                     ^
server/draw.cpp:86:46: style:inconclusive: Function 'DrawDesktop' argument 3 names different: declaration 'ystart' definition 'Y1'. [funcArgNamesDifferent]
void DrawDesktop(Tscreen screen, dat X1, dat Y1, dat X2, dat Y2, bool shaded) {
                                             ^
server/draw.h:16:45: note: Function 'DrawDesktop' argument 3 names different: declaration 'ystart' definition 'Y1'.
void DrawDesktop(Tscreen s, dat xstart, dat ystart, dat xend, dat yend, bool shaded);
                                            ^
server/draw.cpp:86:46: note: Function 'DrawDesktop' argument 3 names different: declaration 'ystart' definition 'Y1'.
void DrawDesktop(Tscreen screen, dat X1, dat Y1, dat X2, dat Y2, bool shaded) {
                                             ^
server/draw.cpp:86:54: style:inconclusive: Function 'DrawDesktop' argument 4 names different: declaration 'xend' definition 'X2'. [funcArgNamesDifferent]
void DrawDesktop(Tscreen screen, dat X1, dat Y1, dat X2, dat Y2, bool shaded) {
                                                     ^
server/draw.h:16:57: note: Function 'DrawDesktop' argument 4 names different: declaration 'xend' definition 'X2'.
void DrawDesktop(Tscreen s, dat xstart, dat ystart, dat xend, dat yend, bool shaded);
                                                        ^
server/draw.cpp:86:54: note: Function 'DrawDesktop' argument 4 names different: declaration 'xend' definition 'X2'.
void DrawDesktop(Tscreen screen, dat X1, dat Y1, dat X2, dat Y2, bool shaded) {
                                                     ^
server/draw.cpp:86:62: style:inconclusive: Function 'DrawDesktop' argument 5 names different: declaration 'yend' definition 'Y2'. [funcArgNamesDifferent]
void DrawDesktop(Tscreen screen, dat X1, dat Y1, dat X2, dat Y2, bool shaded) {
                                                             ^
server/draw.h:16:67: note: Function 'DrawDesktop' argument 5 names different: declaration 'yend' definition 'Y2'.
void DrawDesktop(Tscreen s, dat xstart, dat ystart, dat xend, dat yend, bool shaded);
                                                                  ^
server/draw.cpp:86:62: note: Function 'DrawDesktop' argument 5 names different: declaration 'yend' definition 'Y2'.
void DrawDesktop(Tscreen screen, dat X1, dat Y1, dat X2, dat Y2, bool shaded) {
                                                             ^
server/draw.cpp:287:36: style:inconclusive: Function 'TranslateCoordsWidget' argument 1 names different: declaration 'w1' definition 'W1'. [funcArgNamesDifferent]
void TranslateCoordsWidget(Twidget W1, Twidget W2, dat *X, dat *Y, byte *Inside) {
                                   ^
server/draw.h:14:36: note: Function 'TranslateCoordsWidget' argument 1 names different: declaration 'w1' definition 'W1'.
void TranslateCoordsWidget(Twidget w1, Twidget w2, dat *x, dat *y, byte *inside);
                                   ^
server/draw.cpp:287:36: note: Function 'TranslateCoordsWidget' argument 1 names different: declaration 'w1' definition 'W1'.
void TranslateCoordsWidget(Twidget W1, Twidget W2, dat *X, dat *Y, byte *Inside) {
                                   ^
server/draw.cpp:287:48: style:inconclusive: Function 'TranslateCoordsWidget' argument 2 names different: declaration 'w2' definition 'W2'. [funcArgNamesDifferent]
void TranslateCoordsWidget(Twidget W1, Twidget W2, dat *X, dat *Y, byte *Inside) {
                                               ^
server/draw.h:14:48: note: Function 'TranslateCoordsWidget' argument 2 names different: declaration 'w2' definition 'W2'.
void TranslateCoordsWidget(Twidget w1, Twidget w2, dat *x, dat *y, byte *inside);
                                               ^
server/draw.cpp:287:48: note: Function 'TranslateCoordsWidget' argument 2 names different: declaration 'w2' definition 'W2'.
void TranslateCoordsWidget(Twidget W1, Twidget W2, dat *X, dat *Y, byte *Inside) {
                                               ^
server/draw.cpp:287:57: style:inconclusive: Function 'TranslateCoordsWidget' argument 3 names different: declaration 'x' definition 'X'. [funcArgNamesDifferent]
void TranslateCoordsWidget(Twidget W1, Twidget W2, dat *X, dat *Y, byte *Inside) {
                                                        ^
server/draw.h:14:57: note: Function 'TranslateCoordsWidget' argument 3 names different: declaration 'x' definition 'X'.
void TranslateCoordsWidget(Twidget w1, Twidget w2, dat *x, dat *y, byte *inside);
                                                        ^
server/draw.cpp:287:57: note: Function 'TranslateCoordsWidget' argument 3 names different: declaration 'x' definition 'X'.
void TranslateCoordsWidget(Twidget W1, Twidget W2, dat *X, dat *Y, byte *Inside) {
                                                        ^
server/draw.cpp:287:65: style:inconclusive: Function 'TranslateCoordsWidget' argument 4 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
void TranslateCoordsWidget(Twidget W1, Twidget W2, dat *X, dat *Y, byte *Inside) {
                                                                ^
server/draw.h:14:65: note: Function 'TranslateCoordsWidget' argument 4 names different: declaration 'y' definition 'Y'.
void TranslateCoordsWidget(Twidget w1, Twidget w2, dat *x, dat *y, byte *inside);
                                                                ^
server/draw.cpp:287:65: note: Function 'TranslateCoordsWidget' argument 4 names different: declaration 'y' definition 'Y'.
void TranslateCoordsWidget(Twidget W1, Twidget W2, dat *X, dat *Y, byte *Inside) {
                                                                ^
server/draw.cpp:287:74: style:inconclusive: Function 'TranslateCoordsWidget' argument 5 names different: declaration 'inside' definition 'Inside'. [funcArgNamesDifferent]
void TranslateCoordsWidget(Twidget W1, Twidget W2, dat *X, dat *Y, byte *Inside) {
                                                                         ^
server/draw.h:14:74: note: Function 'TranslateCoordsWidget' argument 5 names different: declaration 'inside' definition 'Inside'.
void TranslateCoordsWidget(Twidget w1, Twidget w2, dat *x, dat *y, byte *inside);
                                                                         ^
server/draw.cpp:287:74: note: Function 'TranslateCoordsWidget' argument 5 names different: declaration 'inside' definition 'Inside'.
void TranslateCoordsWidget(Twidget W1, Twidget W2, dat *X, dat *Y, byte *Inside) {
                                                                         ^
server/draw.cpp:357:39: style:inconclusive: Function 'RecursiveFindWidgetAt' argument 1 names different: declaration 'Parent' definition 'parent'. [funcArgNamesDifferent]
Twidget RecursiveFindWidgetAt(Twidget parent, dat x, dat y) {
                                      ^
server/draw.h:64:39: note: Function 'RecursiveFindWidgetAt' argument 1 names different: declaration 'Parent' definition 'parent'.
Twidget RecursiveFindWidgetAt(Twidget Parent, dat X, dat Y);
                                      ^
server/draw.cpp:357:39: note: Function 'RecursiveFindWidgetAt' argument 1 names different: declaration 'Parent' definition 'parent'.
Twidget RecursiveFindWidgetAt(Twidget parent, dat x, dat y) {
                                      ^
server/draw.cpp:357:51: style:inconclusive: Function 'RecursiveFindWidgetAt' argument 2 names different: declaration 'X' definition 'x'. [funcArgNamesDifferent]
Twidget RecursiveFindWidgetAt(Twidget parent, dat x, dat y) {
                                                  ^
server/draw.h:64:51: note: Function 'RecursiveFindWidgetAt' argument 2 names different: declaration 'X' definition 'x'.
Twidget RecursiveFindWidgetAt(Twidget Parent, dat X, dat Y);
                                                  ^
server/draw.cpp:357:51: note: Function 'RecursiveFindWidgetAt' argument 2 names different: declaration 'X' definition 'x'.
Twidget RecursiveFindWidgetAt(Twidget parent, dat x, dat y) {
                                                  ^
server/draw.cpp:357:58: style:inconclusive: Function 'RecursiveFindWidgetAt' argument 3 names different: declaration 'Y' definition 'y'. [funcArgNamesDifferent]
Twidget RecursiveFindWidgetAt(Twidget parent, dat x, dat y) {
                                                         ^
server/draw.h:64:58: note: Function 'RecursiveFindWidgetAt' argument 3 names different: declaration 'Y' definition 'y'.
Twidget RecursiveFindWidgetAt(Twidget Parent, dat X, dat Y);
                                                         ^
server/draw.cpp:357:58: note: Function 'RecursiveFindWidgetAt' argument 3 names different: declaration 'Y' definition 'y'.
Twidget RecursiveFindWidgetAt(Twidget parent, dat x, dat y) {
                                                         ^
server/draw.cpp:1061:32: style:inconclusive: Function 'DrawWidget' argument 2 names different: declaration 'xstart' definition 'x1'. [funcArgNamesDifferent]
void DrawWidget(Twidget w, dat x1, dat y1, dat x2, dat y2, bool shaded) {
                               ^
server/draw.h:26:32: note: Function 'DrawWidget' argument 2 names different: declaration 'xstart' definition 'x1'.
void DrawWidget(Twidget w, dat xstart, dat ystart, dat xend, dat yend, bool shaded);
                               ^
server/draw.cpp:1061:32: note: Function 'DrawWidget' argument 2 names different: declaration 'xstart' definition 'x1'.
void DrawWidget(Twidget w, dat x1, dat y1, dat x2, dat y2, bool shaded) {
                               ^
server/draw.cpp:1061:40: style:inconclusive: Function 'DrawWidget' argument 3 names different: declaration 'ystart' definition 'y1'. [funcArgNamesDifferent]
void DrawWidget(Twidget w, dat x1, dat y1, dat x2, dat y2, bool shaded) {
                                       ^
server/draw.h:26:44: note: Function 'DrawWidget' argument 3 names different: declaration 'ystart' definition 'y1'.
void DrawWidget(Twidget w, dat xstart, dat ystart, dat xend, dat yend, bool shaded);
                                           ^
server/draw.cpp:1061:40: note: Function 'DrawWidget' argument 3 names different: declaration 'ystart' definition 'y1'.
void DrawWidget(Twidget w, dat x1, dat y1, dat x2, dat y2, bool shaded) {
                                       ^
server/draw.cpp:1061:48: style:inconclusive: Function 'DrawWidget' argument 4 names different: declaration 'xend' definition 'x2'. [funcArgNamesDifferent]
void DrawWidget(Twidget w, dat x1, dat y1, dat x2, dat y2, bool shaded) {
                                               ^
server/draw.h:26:56: note: Function 'DrawWidget' argument 4 names different: declaration 'xend' definition 'x2'.
void DrawWidget(Twidget w, dat xstart, dat ystart, dat xend, dat yend, bool shaded);
                                                       ^
server/draw.cpp:1061:48: note: Function 'DrawWidget' argument 4 names different: declaration 'xend' definition 'x2'.
void DrawWidget(Twidget w, dat x1, dat y1, dat x2, dat y2, bool shaded) {
                                               ^
server/draw.cpp:1061:56: style:inconclusive: Function 'DrawWidget' argument 5 names different: declaration 'yend' definition 'y2'. [funcArgNamesDifferent]
void DrawWidget(Twidget w, dat x1, dat y1, dat x2, dat y2, bool shaded) {
                                                       ^
server/draw.h:26:66: note: Function 'DrawWidget' argument 5 names different: declaration 'yend' definition 'y2'.
void DrawWidget(Twidget w, dat xstart, dat ystart, dat xend, dat yend, bool shaded);
                                                                 ^
server/draw.cpp:1061:56: note: Function 'DrawWidget' argument 5 names different: declaration 'yend' definition 'y2'.
void DrawWidget(Twidget w, dat x1, dat y1, dat x2, dat y2, bool shaded) {
                                                       ^
server/draw.cpp:1482:45: style:inconclusive: Function 'DrawArea2' argument 2 names different: declaration 'Top' definition 'w'. [funcArgNamesDifferent]
void DrawArea2(Tscreen FirstScreen, Twidget w, Twidget onlyW, dat x1, dat y1, dat x2, dat y2,
                                            ^
server/draw.h:18:45: note: Function 'DrawArea2' argument 2 names different: declaration 'Top' definition 'w'.
void DrawArea2(Tscreen FirstScreen, Twidget Top, Twidget OnlyW, dat X1, dat Y1, dat X2, dat Y2,
                                            ^
server/draw.cpp:1482:45: note: Function 'DrawArea2' argument 2 names different: declaration 'Top' definition 'w'.
void DrawArea2(Tscreen FirstScreen, Twidget w, Twidget onlyW, dat x1, dat y1, dat x2, dat y2,
                                            ^
server/draw.cpp:1482:56: style:inconclusive: Function 'DrawArea2' argument 3 names different: declaration 'OnlyW' definition 'onlyW'. [funcArgNamesDifferent]
void DrawArea2(Tscreen FirstScreen, Twidget w, Twidget onlyW, dat x1, dat y1, dat x2, dat y2,
                                                       ^
server/draw.h:18:58: note: Function 'DrawArea2' argument 3 names different: declaration 'OnlyW' definition 'onlyW'.
void DrawArea2(Tscreen FirstScreen, Twidget Top, Twidget OnlyW, dat X1, dat Y1, dat X2, dat Y2,
                                                         ^
server/draw.cpp:1482:56: note: Function 'DrawArea2' argument 3 names different: declaration 'OnlyW' definition 'onlyW'.
void DrawArea2(Tscreen FirstScreen, Twidget w, Twidget onlyW, dat x1, dat y1, dat x2, dat y2,
                                                       ^
server/draw.cpp:1482:67: style:inconclusive: Function 'DrawArea2' argument 4 names different: declaration 'X1' definition 'x1'. [funcArgNamesDifferent]
void DrawArea2(Tscreen FirstScreen, Twidget w, Twidget onlyW, dat x1, dat y1, dat x2, dat y2,
                                                                  ^
server/draw.h:18:69: note: Function 'DrawArea2' argument 4 names different: declaration 'X1' definition 'x1'.
void DrawArea2(Tscreen FirstScreen, Twidget Top, Twidget OnlyW, dat X1, dat Y1, dat X2, dat Y2,
                                                                    ^
server/draw.cpp:1482:67: note: Function 'DrawArea2' argument 4 names different: declaration 'X1' definition 'x1'.
void DrawArea2(Tscreen FirstScreen, Twidget w, Twidget onlyW, dat x1, dat y1, dat x2, dat y2,
                                                                  ^
server/draw.cpp:1482:75: style:inconclusive: Function 'DrawArea2' argument 5 names different: declaration 'Y1' definition 'y1'. [funcArgNamesDifferent]
void DrawArea2(Tscreen FirstScreen, Twidget w, Twidget onlyW, dat x1, dat y1, dat x2, dat y2,
                                                                          ^
server/draw.h:18:77: note: Function 'DrawArea2' argument 5 names different: declaration 'Y1' definition 'y1'.
void DrawArea2(Tscreen FirstScreen, Twidget Top, Twidget OnlyW, dat X1, dat Y1, dat X2, dat Y2,
                                                                            ^
server/draw.cpp:1482:75: note: Function 'DrawArea2' argument 5 names different: declaration 'Y1' definition 'y1'.
void DrawArea2(Tscreen FirstScreen, Twidget w, Twidget onlyW, dat x1, dat y1, dat x2, dat y2,
                                                                          ^
server/draw.cpp:1482:83: style:inconclusive: Function 'DrawArea2' argument 6 names different: declaration 'X2' definition 'x2'. [funcArgNamesDifferent]
void DrawArea2(Tscreen FirstScreen, Twidget w, Twidget onlyW, dat x1, dat y1, dat x2, dat y2,
                                                                                  ^
server/draw.h:18:85: note: Function 'DrawArea2' argument 6 names different: declaration 'X2' definition 'x2'.
void DrawArea2(Tscreen FirstScreen, Twidget Top, Twidget OnlyW, dat X1, dat Y1, dat X2, dat Y2,
                                                                                    ^
server/draw.cpp:1482:83: note: Function 'DrawArea2' argument 6 names different: declaration 'X2' definition 'x2'.
void DrawArea2(Tscreen FirstScreen, Twidget w, Twidget onlyW, dat x1, dat y1, dat x2, dat y2,
                                                                                  ^
server/draw.cpp:1482:91: style:inconclusive: Function 'DrawArea2' argument 7 names different: declaration 'Y2' definition 'y2'. [funcArgNamesDifferent]
void DrawArea2(Tscreen FirstScreen, Twidget w, Twidget onlyW, dat x1, dat y1, dat x2, dat y2,
                                                                                          ^
server/draw.h:18:93: note: Function 'DrawArea2' argument 7 names different: declaration 'Y2' definition 'y2'.
void DrawArea2(Tscreen FirstScreen, Twidget Top, Twidget OnlyW, dat X1, dat Y1, dat X2, dat Y2,
                                                                                            ^
server/draw.cpp:1482:91: note: Function 'DrawArea2' argument 7 names different: declaration 'Y2' definition 'y2'.
void DrawArea2(Tscreen FirstScreen, Twidget w, Twidget onlyW, dat x1, dat y1, dat x2, dat y2,
                                                                                          ^
server/draw.cpp:1483:21: style:inconclusive: Function 'DrawArea2' argument 8 names different: declaration 'Shaded' definition 'shaded'. [funcArgNamesDifferent]
               bool shaded) {
                    ^
server/draw.h:19:21: note: Function 'DrawArea2' argument 8 names different: declaration 'Shaded' definition 'shaded'.
               bool Shaded);
                    ^
server/draw.cpp:1483:21: note: Function 'DrawArea2' argument 8 names different: declaration 'Shaded' definition 'shaded'.
               bool shaded) {
                    ^
server/draw.cpp:1555:34: style:inconclusive: Function 'DrawAreaShadeWindow' argument 1 names different: declaration 's' definition 'screen'. [funcArgNamesDifferent]
void DrawAreaShadeWindow(Tscreen screen, Twindow w, dat x1, dat y1, dat x2, dat y2, ldat sh_left,
                                 ^
server/draw.h:43:34: note: Function 'DrawAreaShadeWindow' argument 1 names different: declaration 's' definition 'screen'.
void DrawAreaShadeWindow(Tscreen s, Twindow w, dat xstart, dat ystart, dat xend, dat yend,
                                 ^
server/draw.cpp:1555:34: note: Function 'DrawAreaShadeWindow' argument 1 names different: declaration 's' definition 'screen'.
void DrawAreaShadeWindow(Tscreen screen, Twindow w, dat x1, dat y1, dat x2, dat y2, ldat sh_left,
                                 ^
server/draw.cpp:1555:57: style:inconclusive: Function 'DrawAreaShadeWindow' argument 3 names different: declaration 'xstart' definition 'x1'. [funcArgNamesDifferent]
void DrawAreaShadeWindow(Tscreen screen, Twindow w, dat x1, dat y1, dat x2, dat y2, ldat sh_left,
                                                        ^
server/draw.h:43:52: note: Function 'DrawAreaShadeWindow' argument 3 names different: declaration 'xstart' definition 'x1'.
void DrawAreaShadeWindow(Tscreen s, Twindow w, dat xstart, dat ystart, dat xend, dat yend,
                                                   ^
server/draw.cpp:1555:57: note: Function 'DrawAreaShadeWindow' argument 3 names different: declaration 'xstart' definition 'x1'.
void DrawAreaShadeWindow(Tscreen screen, Twindow w, dat x1, dat y1, dat x2, dat y2, ldat sh_left,
                                                        ^
server/draw.cpp:1555:65: style:inconclusive: Function 'DrawAreaShadeWindow' argument 4 names different: declaration 'ystart' definition 'y1'. [funcArgNamesDifferent]
void DrawAreaShadeWindow(Tscreen screen, Twindow w, dat x1, dat y1, dat x2, dat y2, ldat sh_left,
                                                                ^
server/draw.h:43:64: note: Function 'DrawAreaShadeWindow' argument 4 names different: declaration 'ystart' definition 'y1'.
void DrawAreaShadeWindow(Tscreen s, Twindow w, dat xstart, dat ystart, dat xend, dat yend,
                                                               ^
server/draw.cpp:1555:65: note: Function 'DrawAreaShadeWindow' argument 4 names different: declaration 'ystart' definition 'y1'.
void DrawAreaShadeWindow(Tscreen screen, Twindow w, dat x1, dat y1, dat x2, dat y2, ldat sh_left,
                                                                ^
server/draw.cpp:1555:73: style:inconclusive: Function 'DrawAreaShadeWindow' argument 5 names different: declaration 'xend' definition 'x2'. [funcArgNamesDifferent]
void DrawAreaShadeWindow(Tscreen screen, Twindow w, dat x1, dat y1, dat x2, dat y2, ldat sh_left,
                                                                        ^
server/draw.h:43:76: note: Function 'DrawAreaShadeWindow' argument 5 names different: declaration 'xend' definition 'x2'.
void DrawAreaShadeWindow(Tscreen s, Twindow w, dat xstart, dat ystart, dat xend, dat yend,
                                                                           ^
server/draw.cpp:1555:73: note: Function 'DrawAreaShadeWindow' argument 5 names different: declaration 'xend' definition 'x2'.
void DrawAreaShadeWindow(Tscreen screen, Twindow w, dat x1, dat y1, dat x2, dat y2, ldat sh_left,
                                                                        ^
server/draw.cpp:1555:81: style:inconclusive: Function 'DrawAreaShadeWindow' argument 6 names different: declaration 'yend' definition 'y2'. [funcArgNamesDifferent]
void DrawAreaShadeWindow(Tscreen screen, Twindow w, dat x1, dat y1, dat x2, dat y2, ldat sh_left,
                                                                                ^
server/draw.h:43:86: note: Function 'DrawAreaShadeWindow' argument 6 names different: declaration 'yend' definition 'y2'.
void DrawAreaShadeWindow(Tscreen s, Twindow w, dat xstart, dat ystart, dat xend, dat yend,
                                                                                     ^
server/draw.cpp:1555:81: note: Function 'DrawAreaShadeWindow' argument 6 names different: declaration 'yend' definition 'y2'.
void DrawAreaShadeWindow(Tscreen screen, Twindow w, dat x1, dat y1, dat x2, dat y2, ldat sh_left,
                                                                                ^
server/draw.cpp:1555:90: style:inconclusive: Function 'DrawAreaShadeWindow' argument 7 names different: declaration 'shleft' definition 'sh_left'. [funcArgNamesDifferent]
void DrawAreaShadeWindow(Tscreen screen, Twindow w, dat x1, dat y1, dat x2, dat y2, ldat sh_left,
                                                                                         ^
server/draw.h:44:31: note: Function 'DrawAreaShadeWindow' argument 7 names different: declaration 'shleft' definition 'sh_left'.
                         ldat shleft, ldat shup, ldat shrgt, ldat shdwn, byte internal);
                              ^
server/draw.cpp:1555:90: note: Function 'DrawAreaShadeWindow' argument 7 names different: declaration 'shleft' definition 'sh_left'.
void DrawAreaShadeWindow(Tscreen screen, Twindow w, dat x1, dat y1, dat x2, dat y2, ldat sh_left,
                                                                                         ^
server/draw.cpp:1556:31: style:inconclusive: Function 'DrawAreaShadeWindow' argument 8 names different: declaration 'shup' definition 'sh_up'. [funcArgNamesDifferent]
                         ldat sh_up, ldat sh_right, ldat sh_down, byte Internal) {
                              ^
server/draw.h:44:44: note: Function 'DrawAreaShadeWindow' argument 8 names different: declaration 'shup' definition 'sh_up'.
                         ldat shleft, ldat shup, ldat shrgt, ldat shdwn, byte internal);
                                           ^
server/draw.cpp:1556:31: note: Function 'DrawAreaShadeWindow' argument 8 names different: declaration 'shup' definition 'sh_up'.
                         ldat sh_up, ldat sh_right, ldat sh_down, byte Internal) {
                              ^
server/draw.cpp:1556:43: style:inconclusive: Function 'DrawAreaShadeWindow' argument 9 names different: declaration 'shrgt' definition 'sh_right'. [funcArgNamesDifferent]
                         ldat sh_up, ldat sh_right, ldat sh_down, byte Internal) {
                                          ^
server/draw.h:44:55: note: Function 'DrawAreaShadeWindow' argument 9 names different: declaration 'shrgt' definition 'sh_right'.
                         ldat shleft, ldat shup, ldat shrgt, ldat shdwn, byte internal);
                                                      ^
server/draw.cpp:1556:43: note: Function 'DrawAreaShadeWindow' argument 9 names different: declaration 'shrgt' definition 'sh_right'.
                         ldat sh_up, ldat sh_right, ldat sh_down, byte Internal) {
                                          ^
server/draw.cpp:1556:58: style:inconclusive: Function 'DrawAreaShadeWindow' argument 10 names different: declaration 'shdwn' definition 'sh_down'. [funcArgNamesDifferent]
                         ldat sh_up, ldat sh_right, ldat sh_down, byte Internal) {
                                                         ^
server/draw.h:44:67: note: Function 'DrawAreaShadeWindow' argument 10 names different: declaration 'shdwn' definition 'sh_down'.
                         ldat shleft, ldat shup, ldat shrgt, ldat shdwn, byte internal);
                                                                  ^
server/draw.cpp:1556:58: note: Function 'DrawAreaShadeWindow' argument 10 names different: declaration 'shdwn' definition 'sh_down'.
                         ldat sh_up, ldat sh_right, ldat sh_down, byte Internal) {
                                                         ^
server/draw.cpp:1556:72: style:inconclusive: Function 'DrawAreaShadeWindow' argument 11 names different: declaration 'internal' definition 'Internal'. [funcArgNamesDifferent]
                         ldat sh_up, ldat sh_right, ldat sh_down, byte Internal) {
                                                                       ^
server/draw.h:44:79: note: Function 'DrawAreaShadeWindow' argument 11 names different: declaration 'internal' definition 'Internal'.
                         ldat shleft, ldat shup, ldat shrgt, ldat shdwn, byte internal);
                                                                              ^
server/draw.cpp:1556:72: note: Function 'DrawAreaShadeWindow' argument 11 names different: declaration 'internal' definition 'Internal'.
                         ldat sh_up, ldat sh_right, ldat sh_down, byte Internal) {
                                                                       ^
server/draw.cpp:1620:37: style:inconclusive: Function 'DrawShadeWindow' argument 2 names different: declaration 'xstart' definition 'x1'. [funcArgNamesDifferent]
void DrawShadeWindow(Twindow w, dat x1, dat y1, dat x2, dat y2, byte internal) {
                                    ^
server/draw.h:42:37: note: Function 'DrawShadeWindow' argument 2 names different: declaration 'xstart' definition 'x1'.
void DrawShadeWindow(Twindow w, dat xstart, dat ystart, dat xend, dat yend, byte internal);
                                    ^
server/draw.cpp:1620:37: note: Function 'DrawShadeWindow' argument 2 names different: declaration 'xstart' definition 'x1'.
void DrawShadeWindow(Twindow w, dat x1, dat y1, dat x2, dat y2, byte internal) {
                                    ^
server/draw.cpp:1620:45: style:inconclusive: Function 'DrawShadeWindow' argument 3 names different: declaration 'ystart' definition 'y1'. [funcArgNamesDifferent]
void DrawShadeWindow(Twindow w, dat x1, dat y1, dat x2, dat y2, byte internal) {
                                            ^
server/draw.h:42:49: note: Function 'DrawShadeWindow' argument 3 names different: declaration 'ystart' definition 'y1'.
void DrawShadeWindow(Twindow w, dat xstart, dat ystart, dat xend, dat yend, byte internal);
                                                ^
server/draw.cpp:1620:45: note: Function 'DrawShadeWindow' argument 3 names different: declaration 'ystart' definition 'y1'.
void DrawShadeWindow(Twindow w, dat x1, dat y1, dat x2, dat y2, byte internal) {
                                            ^
server/draw.cpp:1620:53: style:inconclusive: Function 'DrawShadeWindow' argument 4 names different: declaration 'xend' definition 'x2'. [funcArgNamesDifferent]
void DrawShadeWindow(Twindow w, dat x1, dat y1, dat x2, dat y2, byte internal) {
                                                    ^
server/draw.h:42:61: note: Function 'DrawShadeWindow' argument 4 names different: declaration 'xend' definition 'x2'.
void DrawShadeWindow(Twindow w, dat xstart, dat ystart, dat xend, dat yend, byte internal);
                                                            ^
server/draw.cpp:1620:53: note: Function 'DrawShadeWindow' argument 4 names different: declaration 'xend' definition 'x2'.
void DrawShadeWindow(Twindow w, dat x1, dat y1, dat x2, dat y2, byte internal) {
                                                    ^
server/draw.cpp:1620:61: style:inconclusive: Function 'DrawShadeWindow' argument 5 names different: declaration 'yend' definition 'y2'. [funcArgNamesDifferent]
void DrawShadeWindow(Twindow w, dat x1, dat y1, dat x2, dat y2, byte internal) {
                                                            ^
server/draw.h:42:71: note: Function 'DrawShadeWindow' argument 5 names different: declaration 'yend' definition 'y2'.
void DrawShadeWindow(Twindow w, dat xstart, dat ystart, dat xend, dat yend, byte internal);
                                                                      ^
server/draw.cpp:1620:61: note: Function 'DrawShadeWindow' argument 5 names different: declaration 'yend' definition 'y2'.
void DrawShadeWindow(Twindow w, dat x1, dat y1, dat x2, dat y2, byte internal) {
                                                            ^
server/draw.cpp:1660:39: style:inconclusive: Function 'DrawPartialWidget' argument 2 names different: declaration 'x1' definition 'X1'. [funcArgNamesDifferent]
void DrawPartialWidget(Twidget w, dat X1, dat Y1, dat X2, dat Y2) {
                                      ^
server/draw.h:48:39: note: Function 'DrawPartialWidget' argument 2 names different: declaration 'x1' definition 'X1'.
void DrawPartialWidget(Twidget w, dat x1, dat y1, dat x2, dat y2);
                                      ^
server/draw.cpp:1660:39: note: Function 'DrawPartialWidget' argument 2 names different: declaration 'x1' definition 'X1'.
void DrawPartialWidget(Twidget w, dat X1, dat Y1, dat X2, dat Y2) {
                                      ^
server/draw.cpp:1660:47: style:inconclusive: Function 'DrawPartialWidget' argument 3 names different: declaration 'y1' definition 'Y1'. [funcArgNamesDifferent]
void DrawPartialWidget(Twidget w, dat X1, dat Y1, dat X2, dat Y2) {
                                              ^
server/draw.h:48:47: note: Function 'DrawPartialWidget' argument 3 names different: declaration 'y1' definition 'Y1'.
void DrawPartialWidget(Twidget w, dat x1, dat y1, dat x2, dat y2);
                                              ^
server/draw.cpp:1660:47: note: Function 'DrawPartialWidget' argument 3 names different: declaration 'y1' definition 'Y1'.
void DrawPartialWidget(Twidget w, dat X1, dat Y1, dat X2, dat Y2) {
                                              ^
server/draw.cpp:1660:55: style:inconclusive: Function 'DrawPartialWidget' argument 4 names different: declaration 'x2' definition 'X2'. [funcArgNamesDifferent]
void DrawPartialWidget(Twidget w, dat X1, dat Y1, dat X2, dat Y2) {
                                                      ^
server/draw.h:48:55: note: Function 'DrawPartialWidget' argument 4 names different: declaration 'x2' definition 'X2'.
void DrawPartialWidget(Twidget w, dat x1, dat y1, dat x2, dat y2);
                                                      ^
server/draw.cpp:1660:55: note: Function 'DrawPartialWidget' argument 4 names different: declaration 'x2' definition 'X2'.
void DrawPartialWidget(Twidget w, dat X1, dat Y1, dat X2, dat Y2) {
                                                      ^
server/draw.cpp:1660:63: style:inconclusive: Function 'DrawPartialWidget' argument 5 names different: declaration 'y2' definition 'Y2'. [funcArgNamesDifferent]
void DrawPartialWidget(Twidget w, dat X1, dat Y1, dat X2, dat Y2) {
                                                              ^
server/draw.h:48:63: note: Function 'DrawPartialWidget' argument 5 names different: declaration 'y2' definition 'Y2'.
void DrawPartialWidget(Twidget w, dat x1, dat y1, dat x2, dat y2);
                                                              ^
server/draw.cpp:1660:63: note: Function 'DrawPartialWidget' argument 5 names different: declaration 'y2' definition 'Y2'.
void DrawPartialWidget(Twidget w, dat X1, dat Y1, dat X2, dat Y2) {
                                                              ^
server/draw.cpp:1676:38: style:inconclusive: Function 'DrawLogicWidget' argument 2 names different: declaration 'x1' definition 'X1'. [funcArgNamesDifferent]
void DrawLogicWidget(Twidget w, ldat X1, ldat Y1, ldat X2, ldat Y2) {
                                     ^
server/draw.h:49:38: note: Function 'DrawLogicWidget' argument 2 names different: declaration 'x1' definition 'X1'.
void DrawLogicWidget(Twidget w, ldat x1, ldat y1, ldat x2, ldat y2);
                                     ^
server/draw.cpp:1676:38: note: Function 'DrawLogicWidget' argument 2 names different: declaration 'x1' definition 'X1'.
void DrawLogicWidget(Twidget w, ldat X1, ldat Y1, ldat X2, ldat Y2) {
                                     ^
server/draw.cpp:1676:47: style:inconclusive: Function 'DrawLogicWidget' argument 3 names different: declaration 'y1' definition 'Y1'. [funcArgNamesDifferent]
void DrawLogicWidget(Twidget w, ldat X1, ldat Y1, ldat X2, ldat Y2) {
                                              ^
server/draw.h:49:47: note: Function 'DrawLogicWidget' argument 3 names different: declaration 'y1' definition 'Y1'.
void DrawLogicWidget(Twidget w, ldat x1, ldat y1, ldat x2, ldat y2);
                                              ^
server/draw.cpp:1676:47: note: Function 'DrawLogicWidget' argument 3 names different: declaration 'y1' definition 'Y1'.
void DrawLogicWidget(Twidget w, ldat X1, ldat Y1, ldat X2, ldat Y2) {
                                              ^
server/draw.cpp:1676:56: style:inconclusive: Function 'DrawLogicWidget' argument 4 names different: declaration 'x2' definition 'X2'. [funcArgNamesDifferent]
void DrawLogicWidget(Twidget w, ldat X1, ldat Y1, ldat X2, ldat Y2) {
                                                       ^
server/draw.h:49:56: note: Function 'DrawLogicWidget' argument 4 names different: declaration 'x2' definition 'X2'.
void DrawLogicWidget(Twidget w, ldat x1, ldat y1, ldat x2, ldat y2);
                                                       ^
server/draw.cpp:1676:56: note: Function 'DrawLogicWidget' argument 4 names different: declaration 'x2' definition 'X2'.
void DrawLogicWidget(Twidget w, ldat X1, ldat Y1, ldat X2, ldat Y2) {
                                                       ^
server/draw.cpp:1676:65: style:inconclusive: Function 'DrawLogicWidget' argument 5 names different: declaration 'y2' definition 'Y2'. [funcArgNamesDifferent]
void DrawLogicWidget(Twidget w, ldat X1, ldat Y1, ldat X2, ldat Y2) {
                                                                ^
server/draw.h:49:65: note: Function 'DrawLogicWidget' argument 5 names different: declaration 'y2' definition 'Y2'.
void DrawLogicWidget(Twidget w, ldat x1, ldat y1, ldat x2, ldat y2);
                                                                ^
server/draw.cpp:1676:65: note: Function 'DrawLogicWidget' argument 5 names different: declaration 'y2' definition 'Y2'.
void DrawLogicWidget(Twidget w, ldat X1, ldat Y1, ldat X2, ldat Y2) {
                                                                ^
server/draw.cpp:1746:29: style:inconclusive: Function 'DrawMenuScreen' argument 1 names different: declaration 's' definition 'screen'. [funcArgNamesDifferent]
void DrawMenuScreen(Tscreen screen, dat Xstart, dat Xend) {
                            ^
server/draw.h:53:29: note: Function 'DrawMenuScreen' argument 1 names different: declaration 's' definition 'screen'.
void DrawMenuScreen(Tscreen s, dat xstart, dat xend);
                            ^
server/draw.cpp:1746:29: note: Function 'DrawMenuScreen' argument 1 names different: declaration 's' definition 'screen'.
void DrawMenuScreen(Tscreen screen, dat Xstart, dat Xend) {
                            ^
server/draw.cpp:1746:41: style:inconclusive: Function 'DrawMenuScreen' argument 2 names different: declaration 'xstart' definition 'Xstart'. [funcArgNamesDifferent]
void DrawMenuScreen(Tscreen screen, dat Xstart, dat Xend) {
                                        ^
server/draw.h:53:36: note: Function 'DrawMenuScreen' argument 2 names different: declaration 'xstart' definition 'Xstart'.
void DrawMenuScreen(Tscreen s, dat xstart, dat xend);
                                   ^
server/draw.cpp:1746:41: note: Function 'DrawMenuScreen' argument 2 names different: declaration 'xstart' definition 'Xstart'.
void DrawMenuScreen(Tscreen screen, dat Xstart, dat Xend) {
                                        ^
server/draw.cpp:1746:53: style:inconclusive: Function 'DrawMenuScreen' argument 3 names different: declaration 'xend' definition 'Xend'. [funcArgNamesDifferent]
void DrawMenuScreen(Tscreen screen, dat Xstart, dat Xend) {
                                                    ^
server/draw.h:53:48: note: Function 'DrawMenuScreen' argument 3 names different: declaration 'xend' definition 'Xend'.
void DrawMenuScreen(Tscreen s, dat xstart, dat xend);
                                               ^
server/draw.cpp:1746:53: note: Function 'DrawMenuScreen' argument 3 names different: declaration 'xend' definition 'Xend'.
void DrawMenuScreen(Tscreen screen, dat Xstart, dat Xend) {
                                                    ^
server/draw.cpp:1838:25: style:inconclusive: Function 'DrawScreen' argument 1 names different: declaration 's' definition 'screen'. [funcArgNamesDifferent]
void DrawScreen(Tscreen screen) {
                        ^
server/draw.h:33:25: note: Function 'DrawScreen' argument 1 names different: declaration 's' definition 'screen'.
void DrawScreen(Tscreen s);
                        ^
server/draw.cpp:1838:25: note: Function 'DrawScreen' argument 1 names different: declaration 's' definition 'screen'.
void DrawScreen(Tscreen screen) {
                        ^
server/draw.cpp:1857:35: style:inconclusive: Function 'StartHilight' argument 2 names different: declaration 'xsel' definition 'XSel'. [funcArgNamesDifferent]
void StartHilight(Twindow w, ldat XSel, ldat YSel) {
                                  ^
server/draw.h:56:35: note: Function 'StartHilight' argument 2 names different: declaration 'xsel' definition 'XSel'.
void StartHilight(Twindow w, ldat xsel, ldat ysel);
                                  ^
server/draw.cpp:1857:35: note: Function 'StartHilight' argument 2 names different: declaration 'xsel' definition 'XSel'.
void StartHilight(Twindow w, ldat XSel, ldat YSel) {
                                  ^
server/draw.cpp:1857:46: style:inconclusive: Function 'StartHilight' argument 3 names different: declaration 'ysel' definition 'YSel'. [funcArgNamesDifferent]
void StartHilight(Twindow w, ldat XSel, ldat YSel) {
                                             ^
server/draw.h:56:46: note: Function 'StartHilight' argument 3 names different: declaration 'ysel' definition 'YSel'.
void StartHilight(Twindow w, ldat xsel, ldat ysel);
                                             ^
server/draw.cpp:1857:46: note: Function 'StartHilight' argument 3 names different: declaration 'ysel' definition 'YSel'.
void StartHilight(Twindow w, ldat XSel, ldat YSel) {
                                             ^
server/draw.cpp:1867:36: style:inconclusive: Function 'ExtendHilight' argument 2 names different: declaration 'xsel' definition 'XSel'. [funcArgNamesDifferent]
void ExtendHilight(Twindow w, ldat XSel, ldat YSel) {
                                   ^
server/draw.h:57:36: note: Function 'ExtendHilight' argument 2 names different: declaration 'xsel' definition 'XSel'.
void ExtendHilight(Twindow w, ldat xsel, ldat ysel);
                                   ^
server/draw.cpp:1867:36: note: Function 'ExtendHilight' argument 2 names different: declaration 'xsel' definition 'XSel'.
void ExtendHilight(Twindow w, ldat XSel, ldat YSel) {
                                   ^
server/draw.cpp:1867:47: style:inconclusive: Function 'ExtendHilight' argument 3 names different: declaration 'ysel' definition 'YSel'. [funcArgNamesDifferent]
void ExtendHilight(Twindow w, ldat XSel, ldat YSel) {
                                              ^
server/draw.h:57:47: note: Function 'ExtendHilight' argument 3 names different: declaration 'ysel' definition 'YSel'.
void ExtendHilight(Twindow w, ldat xsel, ldat ysel);
                                              ^
server/draw.cpp:1867:47: note: Function 'ExtendHilight' argument 3 names different: declaration 'ysel' definition 'YSel'.
void ExtendHilight(Twindow w, ldat XSel, ldat YSel) {
                                              ^
server/draw.cpp:74:40: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
      color = Info->Flags & ROW_ACTIVE ? Menu->ColSelect : Menu->ColSelectDisabled;
                                       ^
server/hw.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 29 configurations. Use --force to check all configurations. [toomanyconfigs]

^
server/hw.cpp:467:20: style: Expression is always true because 'else if' condition is opposite to previous condition at line 448. [multiCondition]
  } else if (DstUp > Up) {
                   ^
server/hw.cpp:448:13: note: first condition
  if (DstUp <= Up) {
            ^
server/hw.cpp:467:20: note: else if condition is opposite to first condition
  } else if (DstUp > Up) {
                   ^
server/hw.cpp:309:13: style: Condition 's0!=-1' is always true [knownConditionTrueFalse]
    if ((s0 != -1 && Xstart >= s0 && Xend <= e0) || (s1 != -1 && Xstart >= s1 && Xend <= e1))
            ^
server/hw.cpp:302:12: note: Assuming that condition 's0==-1' is not redundant
    if (s0 == -1) {
           ^
server/hw.cpp:309:13: note: Condition 's0!=-1' is always true
    if ((s0 != -1 && Xstart >= s0 && Xend <= e0) || (s1 != -1 && Xstart >= s1 && Xend <= e1))
            ^
server/hw.cpp:422:19: style:inconclusive: Function 'DragArea' argument 1 names different: declaration 'Xstart' definition 'Left'. [funcArgNamesDifferent]
void DragArea(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                  ^
server/hw.h:45:19: note: Function 'DragArea' argument 1 names different: declaration 'Xstart' definition 'Left'.
void DragArea(dat Xstart, dat Ystart, dat Xend, dat Yend, dat DstXstart, dat DstYstart);
                  ^
server/hw.cpp:422:19: note: Function 'DragArea' argument 1 names different: declaration 'Xstart' definition 'Left'.
void DragArea(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                  ^
server/hw.cpp:422:29: style:inconclusive: Function 'DragArea' argument 2 names different: declaration 'Ystart' definition 'Up'. [funcArgNamesDifferent]
void DragArea(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                            ^
server/hw.h:45:31: note: Function 'DragArea' argument 2 names different: declaration 'Ystart' definition 'Up'.
void DragArea(dat Xstart, dat Ystart, dat Xend, dat Yend, dat DstXstart, dat DstYstart);
                              ^
server/hw.cpp:422:29: note: Function 'DragArea' argument 2 names different: declaration 'Ystart' definition 'Up'.
void DragArea(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                            ^
server/hw.cpp:422:37: style:inconclusive: Function 'DragArea' argument 3 names different: declaration 'Xend' definition 'Rgt'. [funcArgNamesDifferent]
void DragArea(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                                    ^
server/hw.h:45:43: note: Function 'DragArea' argument 3 names different: declaration 'Xend' definition 'Rgt'.
void DragArea(dat Xstart, dat Ystart, dat Xend, dat Yend, dat DstXstart, dat DstYstart);
                                          ^
server/hw.cpp:422:37: note: Function 'DragArea' argument 3 names different: declaration 'Xend' definition 'Rgt'.
void DragArea(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                                    ^
server/hw.cpp:422:46: style:inconclusive: Function 'DragArea' argument 4 names different: declaration 'Yend' definition 'Dwn'. [funcArgNamesDifferent]
void DragArea(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                                             ^
server/hw.h:45:53: note: Function 'DragArea' argument 4 names different: declaration 'Yend' definition 'Dwn'.
void DragArea(dat Xstart, dat Ystart, dat Xend, dat Yend, dat DstXstart, dat DstYstart);
                                                    ^
server/hw.cpp:422:46: note: Function 'DragArea' argument 4 names different: declaration 'Yend' definition 'Dwn'.
void DragArea(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                                             ^
server/hw.cpp:422:55: style:inconclusive: Function 'DragArea' argument 5 names different: declaration 'DstXstart' definition 'DstLeft'. [funcArgNamesDifferent]
void DragArea(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                                                      ^
server/hw.h:45:63: note: Function 'DragArea' argument 5 names different: declaration 'DstXstart' definition 'DstLeft'.
void DragArea(dat Xstart, dat Ystart, dat Xend, dat Yend, dat DstXstart, dat DstYstart);
                                                              ^
server/hw.cpp:422:55: note: Function 'DragArea' argument 5 names different: declaration 'DstXstart' definition 'DstLeft'.
void DragArea(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                                                      ^
server/hw.cpp:422:68: style:inconclusive: Function 'DragArea' argument 6 names different: declaration 'DstYstart' definition 'DstUp'. [funcArgNamesDifferent]
void DragArea(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                                                                   ^
server/hw.h:45:78: note: Function 'DragArea' argument 6 names different: declaration 'DstYstart' definition 'DstUp'.
void DragArea(dat Xstart, dat Ystart, dat Xend, dat Yend, dat DstXstart, dat DstYstart);
                                                                             ^
server/hw.cpp:422:68: note: Function 'DragArea' argument 6 names different: declaration 'DstYstart' definition 'DstUp'.
void DragArea(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                                                                   ^
server/hw.cpp:198:0: information: Skipping configuration 'SIGEMT' since the value of 'SIGEMT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    SIGEMT,
^
server/hw.cpp:198:0: information: Skipping configuration 'SIGEMT;SIGSTKFLT' since the value of 'SIGEMT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    SIGEMT,
^
server/hw.cpp:157:0: information: Skipping configuration 'SIGIO' since the value of 'SIGIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    SIGIO,
^
server/hw.cpp:157:0: information: Skipping configuration 'SIGIO;SIGLOST;SIGPWR' since the value of 'SIGIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    SIGIO,
^
server/hw.cpp:195:0: information: Skipping configuration 'SIGIO;SIGLOST;SIGPWR' since the value of 'SIGPWR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    SIGPWR,
^
server/hw.cpp:157:0: information: Skipping configuration 'SIGIO;SIGPOLL' since the value of 'SIGIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    SIGIO,
^
server/hw.cpp:167:0: information: Skipping configuration 'SIGPROF' since the value of 'SIGPROF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    SIGPROF,
^
server/hw.cpp:195:0: information: Skipping configuration 'SIGPWR' since the value of 'SIGPWR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    SIGPWR,
^
server/hw.cpp:170:0: information: Skipping configuration 'SIGSYS' since the value of 'SIGSYS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    SIGSYS,
^
server/hw.cpp:170:0: information: Skipping configuration 'SIGSYS;SIGUNUSED' since the value of 'SIGSYS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    SIGSYS,
^
server/hw.cpp:176:0: information: Skipping configuration 'SIGTRAP' since the value of 'SIGTRAP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    SIGTRAP,
^
server/hw.cpp:179:0: information: Skipping configuration 'SIGURG' since the value of 'SIGURG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    SIGURG,
^
server/hw/hw_x/common.h:169:23: style: C-style pointer casting [cstyleCast]
  if (!(HW->Private = (XSYM(data) *)AllocMem(sizeof(XSYM(data))))) {
                      ^
server/hw/hw_x/common.h:206:34: style: The scope of the variable 'n2' can be reduced. [variableScope]
        int n1 = atoi(arg += 9), n2 = 0;
                                 ^
server/hw/hw_x/util.h:351:45: style:inconclusive: Function 'x11_SelectionRequest_X11' argument 1 names different: declaration 'Requestor' definition 'requestor'. [funcArgNamesDifferent]
static void XSYM(SelectionRequest_X11)(Tobj requestor, uldat reqprivate) {
                                            ^
server/hw/hw_x/util_protos.h:20:45: note: Function 'x11_SelectionRequest_X11' argument 1 names different: declaration 'Requestor' definition 'requestor'.
static void XSYM(SelectionRequest_X11)(Tobj Requestor, uldat ReqPrivate);
                                            ^
server/hw/hw_x/util.h:351:45: note: Function 'x11_SelectionRequest_X11' argument 1 names different: declaration 'Requestor' definition 'requestor'.
static void XSYM(SelectionRequest_X11)(Tobj requestor, uldat reqprivate) {
                                            ^
server/hw/hw_x/util.h:351:62: style:inconclusive: Function 'x11_SelectionRequest_X11' argument 2 names different: declaration 'ReqPrivate' definition 'reqprivate'. [funcArgNamesDifferent]
static void XSYM(SelectionRequest_X11)(Tobj requestor, uldat reqprivate) {
                                                             ^
server/hw/hw_x/util_protos.h:20:62: note: Function 'x11_SelectionRequest_X11' argument 2 names different: declaration 'ReqPrivate' definition 'reqprivate'.
static void XSYM(SelectionRequest_X11)(Tobj Requestor, uldat ReqPrivate);
                                                             ^
server/hw/hw_x/util.h:351:62: note: Function 'x11_SelectionRequest_X11' argument 2 names different: declaration 'ReqPrivate' definition 'reqprivate'.
static void XSYM(SelectionRequest_X11)(Tobj requestor, uldat reqprivate) {
                                                             ^
server/hw/hw_x/common.h:486:34: style:inconclusive: Function 'InitModule' argument 1 names different: declaration 'Module' definition 'mod'. [funcArgNamesDifferent]
EXTERN_C byte InitModule(Tmodule mod) {
                                 ^
server/hw/hw_x/common_protos.h:15:34: note: Function 'InitModule' argument 1 names different: declaration 'Module' definition 'mod'.
EXTERN_C byte InitModule(Tmodule Module);
                                 ^
server/hw/hw_x/common.h:486:34: note: Function 'InitModule' argument 1 names different: declaration 'Module' definition 'mod'.
EXTERN_C byte InitModule(Tmodule mod) {
                                 ^
server/hw/hw_x/common.h:492:34: style:inconclusive: Function 'QuitModule' argument 1 names different: declaration 'Module' definition 'mod'. [funcArgNamesDifferent]
EXTERN_C void QuitModule(Tmodule mod) {
                                 ^
server/hw/hw_x/common_protos.h:16:34: note: Function 'QuitModule' argument 1 names different: declaration 'Module' definition 'mod'.
EXTERN_C void QuitModule(Tmodule Module);
                                 ^
server/hw/hw_x/common.h:492:34: note: Function 'QuitModule' argument 1 names different: declaration 'Module' definition 'mod'.
EXTERN_C void QuitModule(Tmodule mod) {
                                 ^
server/hw/hw_x/keyboard.h:315:30: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
      dy = (dx & Button1Mask ? HOLD_LEFT : 0) | (dx & Button2Mask ? HOLD_MIDDLE : 0) |
                             ^
server/hw/hw_x/keyboard.h:316:30: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
           (dx & Button3Mask ? HOLD_RIGHT : 0) |
                             ^
server/hw/hw_x/util.h:49:15: style: Variable 'extra' is assigned a value that is never used. [unreadVariable]
  tcell extra = 0;
              ^
server/hw/hw_x/util.h:462:14: style: Unused variable: fp [unusedVariable]
  XFontProp *fp;
             ^
server/hw/hw_x/keyboard.h:321:0: information: Skipping configuration 'HOLD_WHEEL_FWD' since the value of 'HOLD_WHEEL_FWD' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
           (dx & Button5Mask ? HOLD_WHEEL_FWD : 0) |
^
server/hw/hw_x/keyboard.h:344:0: information: Skipping configuration 'HOLD_WHEEL_FWD' since the value of 'HOLD_WHEEL_FWD' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            dx == Button5 ? HOLD_WHEEL_FWD
^
server/hw/hw_x/keyboard.h:318:0: information: Skipping configuration 'HOLD_WHEEL_REV' since the value of 'HOLD_WHEEL_REV' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
           (dx & Button4Mask ? HOLD_WHEEL_REV : 0) |
^
server/hw/hw_x/keyboard.h:340:0: information: Skipping configuration 'HOLD_WHEEL_REV' since the value of 'HOLD_WHEEL_REV' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            dx == Button4 ? HOLD_WHEEL_REV
^
server/hw/hw_x/common.h:332:0: information: Skipping configuration 'XIMPreeditNothing;XIMStatusNothing;XNInputStyle;XLookupBoth;XLookupChars;XLookupKeySym;XNClientWindow;XNFocusWindow' since the value of 'XIMPreeditNothing' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
          xic = XCreateIC(xim, XNInputStyle, XIMStatusNothing | XIMPreeditNothing, XNClientWindow,
^
server/hw/hw_x/common.h:332:0: information: Skipping configuration 'XIMPreeditNothing;XIMStatusNothing;XNInputStyle;XLookupBoth;XLookupChars;XLookupKeySym;XNClientWindow;XNFocusWindow' since the value of 'XIMStatusNothing' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
          xic = XCreateIC(xim, XNInputStyle, XIMStatusNothing | XIMPreeditNothing, XNClientWindow,
^
server/hw/hw_x/common.h:332:0: information: Skipping configuration 'XIMPreeditNothing;XIMStatusNothing;XNInputStyle;XLookupBoth;XLookupChars;XLookupKeySym;XNClientWindow;XNFocusWindow' since the value of 'XNInputStyle' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
          xic = XCreateIC(xim, XNInputStyle, XIMStatusNothing | XIMPreeditNothing, XNClientWindow,
^
server/hw/hw_x/keyboard.h:214:0: information: Skipping configuration 'XIMPreeditNothing;XIMStatusNothing;XNInputStyle;XLookupBoth;XLookupChars;XLookupKeySym;XNClientWindow;XNFocusWindow' since the value of 'XLookupBoth' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (status_return != XLookupBoth && status_return != XLookupChars &&
^
server/hw/hw_x/keyboard.h:214:0: information: Skipping configuration 'XIMPreeditNothing;XIMStatusNothing;XNInputStyle;XLookupBoth;XLookupChars;XLookupKeySym;XNClientWindow;XNFocusWindow' since the value of 'XLookupChars' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (status_return != XLookupBoth && status_return != XLookupChars &&
^
server/hw/hw_x/keyboard.h:215:0: information: Skipping configuration 'XIMPreeditNothing;XIMStatusNothing;XNInputStyle;XLookupBoth;XLookupChars;XLookupKeySym;XNClientWindow;XNFocusWindow' since the value of 'XLookupKeySym' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        status_return != XLookupKeySym) {
^
server/hw/hw_x/common.h:332:0: information: Skipping configuration 'XIMPreeditNothing;XIMStatusNothing;XNInputStyle;XLookupBoth;XLookupChars;XLookupKeySym;XNClientWindow;XNFocusWindow' since the value of 'XNClientWindow' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
          xic = XCreateIC(xim, XNInputStyle, XIMStatusNothing | XIMPreeditNothing, XNClientWindow,
^
server/hw/hw_x/common.h:333:0: information: Skipping configuration 'XIMPreeditNothing;XIMStatusNothing;XNInputStyle;XLookupBoth;XLookupChars;XLookupKeySym;XNClientWindow;XNFocusWindow' since the value of 'XNFocusWindow' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                          xwindow, XNFocusWindow, xwindow, NULL);
^
server/hw/hw_tty.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
server/hw/hw_tty.cpp:338:23: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
        try_stdout = !(autotry_video = arg0.view(7, comma) == Chars("=no")) << 1;
                      ^
server/hw/hw_tty.cpp:340:24: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
        try_termcap = !(autotry_video = arg0.view(8, comma) == Chars("=no")) << 1;
                       ^
server/hw/hw_tty.cpp:342:24: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
        try_lrawkbd = !(autotry_kbd = arg0.view(4, comma) == Chars("=no")) << 1;
                       ^
server/hw/hw_tty.cpp:400:28: style: Condition 'display_is_ctty=try_ctty&&(!DisplayHWCTTY||DisplayHWCTTY==HWCTTY_DETACHED)&&0' is always false [knownConditionTrueFalse]
      if ((display_is_ctty = try_ctty && (!DisplayHWCTTY || DisplayHWCTTY == HWCTTY_DETACHED) &&
                           ^
server/hw/hw_tty_common/kbd_stdin.h:16:10: style: The scope of the variable 'alarmReceived' can be reduced. [variableScope]
  int i, alarmReceived;
         ^
server/hw/hw_tty_linux/video_stdout.h:198:51: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 198. [shiftTooManyBitsSigned]
                       : (c < 32 && ((CTRL_ALWAYS >> c) & 1)) || c == 127 || c == 128 + 27) {
                                                  ^
server/hw/hw_tty_linux/video_stdout.h:198:29: note: Assuming that condition 'c<32' is not redundant
                       : (c < 32 && ((CTRL_ALWAYS >> c) & 1)) || c == 127 || c == 128 + 27) {
                            ^
server/hw/hw_tty_linux/video_stdout.h:198:51: note: Shift
                       : (c < 32 && ((CTRL_ALWAYS >> c) & 1)) || c == 127 || c == 128 + 27) {
                                                  ^
server/hw/hw_tty_linux/video_stdout.h:229:47: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 229. [shiftTooManyBitsSigned]
                   : (c < 32 && ((CTRL_ALWAYS >> c) & 1)) || c == 127 || c == 128 + 27) {
                                              ^
server/hw/hw_tty_linux/video_stdout.h:229:25: note: Assuming that condition 'c<32' is not redundant
                   : (c < 32 && ((CTRL_ALWAYS >> c) & 1)) || c == 127 || c == 128 + 27) {
                        ^
server/hw/hw_tty_linux/video_stdout.h:229:47: note: Shift
                   : (c < 32 && ((CTRL_ALWAYS >> c) & 1)) || c == 127 || c == 128 + 27) {
                                              ^
server/hw/hw_tty.cpp:276:63: style: Variable 'try_termcap' is assigned a value that is never used. [unreadVariable]
  byte autotry_video = MAYBE, try_stdout = MAYBE, try_termcap = MAYBE, autotry_kbd = MAYBE,
                                                              ^
server/hw/hw_tty.cpp:277:20: style: Variable 'try_lrawkbd' is assigned a value that is never used. [unreadVariable]
       try_lrawkbd = MAYBE, force_mouse = tfalse, tc_colorbug = tfalse,
                   ^
server/hw/hw_tty.cpp:277:63: style: Variable 'tc_colorbug' is assigned a value that is never used. [unreadVariable]
       try_lrawkbd = MAYBE, force_mouse = tfalse, tc_colorbug = tfalse,
                                                              ^
server/hw/hw_tty.cpp:340:21: style: Variable 'try_termcap' is assigned a value that is never used. [unreadVariable]
        try_termcap = !(autotry_video = arg0.view(8, comma) == Chars("=no")) << 1;
                    ^
server/hw/hw_tty.cpp:342:21: style: Variable 'try_lrawkbd' is assigned a value that is never used. [unreadVariable]
        try_lrawkbd = !(autotry_kbd = arg0.view(4, comma) == Chars("=no")) << 1;
                    ^
server/hw/hw_tty.cpp:346:21: style: Variable 'tc_colorbug' is assigned a value that is never used. [unreadVariable]
        tc_colorbug = ttrue;
                    ^
server/hw/hw_tty_linux/mouse_gpm.h:160:40: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
    Buttons |= (IdButtons & GPM_B_LEFT ? HOLD_LEFT : 0) |
                                       ^
server/hw/hw_tty_linux/mouse_gpm.h:161:42: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
               (IdButtons & GPM_B_MIDDLE ? HOLD_MIDDLE : 0) |
                                         ^
server/hw/hw_tty_linux/mouse_gpm.h:162:41: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
               (IdButtons & GPM_B_RIGHT ? HOLD_RIGHT : 0) |
                                        ^
server/hw/hw_tty_linux/kbd_raw1.h:796:9: style: The scope of the variable 'keymap' can be reduced. [variableScope]
  udat *keymap;
        ^
server/hw/hw_tty_linux/kbd_raw1.h:354:56: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
      value |= shifts & (KBD_SHIFT_FL | KBD_CAPS_LOCK) ? 0x40 : 0x60;
                                                       ^
server/hw/hw_tty_linux/kbd_raw1.h:629:82: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  return (lrawkbd_shiftstate & (1 << KG_SHIFT | 1 << KG_SHIFTL | 1 << KG_SHIFTR) ? KBD_SHIFT_FL
                                                                                 ^
server/hw/hw_tty_linux/kbd_raw1.h:631:79: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
         (lrawkbd_shiftstate & (1 << KG_CTRL | 1 << KG_CTRLL | 1 << KG_CTRLR) ? KBD_CTRL_FL : 0) |
                                                                              ^
server/hw/hw_tty_linux/kbd_raw1.h:632:62: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
         (lrawkbd_shiftstate & (1 << KG_ALT | 1 << KG_ALTGR) ? KBD_ALT_FL : 0) |
                                                             ^
server/hw/hw_tty_linux/kbd_raw1.h:633:43: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
         (lrawkbd_leds & 1 << VC_CAPSLOCK ? KBD_CAPS_LOCK : 0) |
                                          ^
server/hw/hw_tty_linux/kbd_raw1.h:634:42: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
         (lrawkbd_leds & 1 << VC_NUMLOCK ? KBD_NUM_LOCK : 0);
                                         ^
server/hw/hw_tty_linux/kbd_raw.h:177:8: style: Variable 'buf' is not assigned a value. [unassignedVariable]
  char buf[16], *s, *ret;
       ^
server/hw/hw_tty_common/driver_termcap.h:36:10: style: The scope of the variable 'key' can be reduced. [variableScope]
  char **key;
         ^
server/hw/hw_tty.cpp:276:42: style: Variable 'try_stdout' is assigned a value that is never used. [unreadVariable]
  byte autotry_video = MAYBE, try_stdout = MAYBE, try_termcap = MAYBE, autotry_kbd = MAYBE,
                                         ^
server/hw/hw_tty.cpp:338:20: style: Variable 'try_stdout' is assigned a value that is never used. [unreadVariable]
        try_stdout = !(autotry_video = arg0.view(7, comma) == Chars("=no")) << 1;
                   ^
server/hw/hw_tty.cpp:402:0: information: Skipping configuration 'TIOCSCTTY' since the value of 'TIOCSCTTY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                             ioctl(tty_fd, TIOCSCTTY, 1) >= 0
^
server/hw/hw_twin.cpp:63:25: style: C-style pointer casting [cstyleCast]
  Tw_WriteCharsetWindow(Td, Twin, 1, "\007");
                        ^
server/hw/hw_twin.cpp:70:27: style: C-style pointer casting [cstyleCast]
    Tw_WriteCharsetWindow(Td, Twin, 2, todefault || !value ? "\033>" : "\033=");
                          ^
server/hw/hw_twin.cpp:74:27: style: C-style pointer casting [cstyleCast]
    Tw_WriteCharsetWindow(Td, Twin, 5, todefault || !value ? "\033[?1l" : "\033[?1h");
                          ^
server/hw/hw_twin.cpp:79:29: style: C-style pointer casting [cstyleCast]
      Tw_WriteCharsetWindow(Td, Twin, 5, "\033[10]");
                            ^
server/hw/hw_twin.cpp:83:29: style: C-style pointer casting [cstyleCast]
      Tw_WriteCharsetWindow(Td, Twin, strlen(buf), buf);
                            ^
server/hw/hw_twin.cpp:89:29: style: C-style pointer casting [cstyleCast]
      Tw_WriteCharsetWindow(Td, Twin, 5, "\033[11]");
                            ^
server/hw/hw_twin.cpp:93:29: style: C-style pointer casting [cstyleCast]
      Tw_WriteCharsetWindow(Td, Twin, strlen(buf), buf);
                            ^
server/hw/hw_twin.cpp:100:20: style: C-style pointer casting [cstyleCast]
    Tw_ChangeField(Td, Twin, TWS_window_Attr, TW_WINDOW_WANT_MOUSE_MOTION,
                   ^
server/hw/hw_twin.cpp:135:31: style: C-style pointer casting [cstyleCast]
  if (event->EventCommon.W == Twin) {
                              ^
server/hw/hw_twin.cpp:182:38: style: C-style pointer casting [cstyleCast]
  while ((firstloop || Tw_PendingMsg(Td)) && (msg = Tw_ReadMsg(Td, tfalse))) {
                                     ^
server/hw/hw_twin.cpp:187:18: style: C-style pointer casting [cstyleCast]
  if (Tw_InPanic(Td))
                 ^
server/hw/hw_twin.cpp:203:27: style: C-style pointer casting [cstyleCast]
      Tw_WriteTCellWindow(Td, Twin, xbegin, ybegin, buflen, buf);
                          ^
server/hw/hw_twin.cpp:215:25: style: C-style pointer casting [cstyleCast]
    Tw_WriteTCellWindow(Td, Twin, xbegin, ybegin, buflen, buf);
                        ^
server/hw/hw_twin.cpp:237:21: style: C-style pointer casting [cstyleCast]
    Tw_GotoXYWindow(Td, Twin, HW->XY[0] = CursorX, HW->XY[1] = CursorY);
                    ^
server/hw/hw_twin.cpp:245:27: style: C-style pointer casting [cstyleCast]
    Tw_WriteCharsetWindow(Td, Twin, strlen(buff), buff);
                          ^
server/hw/hw_twin.cpp:255:28: style: C-style pointer casting [cstyleCast]
  byte ret = Tw_TimidFlush(Td);
                           ^
server/hw/hw_twin.cpp:282:21: style: C-style pointer casting [cstyleCast]
    Tw_ResizeWindow(Td, Twin, HW->X = x, HW->Y = y);
                    ^
server/hw/hw_twin.cpp:313:30: style: C-style pointer casting [cstyleCast]
    HW->HWSelectionPrivate = Tmsgport;
                             ^
server/hw/hw_twin.cpp:314:26: style: C-style pointer casting [cstyleCast]
    Tw_SetOwnerSelection(Td, SEL_CURRENTTIME, SEL_CURRENTTIME);
                         ^
server/hw/hw_twin.cpp:324:9: style: C-style pointer casting [cstyleCast]
    if (TSelCount < TSELMAX) {
        ^
server/hw/hw_twin.cpp:331:7: style: C-style pointer casting [cstyleCast]
      TSelReq[TSelCount].Requestor = (topaque)requestor;
      ^
server/hw/hw_twin.cpp:332:7: style: C-style pointer casting [cstyleCast]
      TSelReq[TSelCount].ReqPrivate = reqprivate;
      ^
server/hw/hw_twin.cpp:333:27: style: C-style pointer casting [cstyleCast]
      Tw_RequestSelection(Td, Tw_GetOwnerSelection(Td), TSelCount++);
                          ^
server/hw/hw_twin.cpp:338:7: style: C-style pointer casting [cstyleCast]
      TSelCount = 0;
      ^
server/hw/hw_twin.cpp:350:7: style: C-style pointer casting [cstyleCast]
  if (SelCount < TSELMAX) {
      ^
server/hw/hw_twin.cpp:357:5: style: C-style pointer casting [cstyleCast]
    SelReq[SelCount].Requestor = requestor;
    ^
server/hw/hw_twin.cpp:358:5: style: C-style pointer casting [cstyleCast]
    SelReq[SelCount].ReqPrivate = reqprivate;
    ^
server/hw/hw_twin.cpp:359:36: style: C-style pointer casting [cstyleCast]
    TwinSelectionRequest((Tobj)HW, SelCount++, TwinSelectionGetOwner());
                                   ^
server/hw/hw_twin.cpp:363:5: style: C-style pointer casting [cstyleCast]
    SelCount = 0;
    ^
server/hw/hw_twin.cpp:376:25: style: C-style pointer casting [cstyleCast]
  if (reqprivate + 1 != SelCount) {
                        ^
server/hw/hw_twin.cpp:379:3: style: C-style pointer casting [cstyleCast]
  SelCount--;
  ^
server/hw/hw_twin.cpp:382:22: style: C-style pointer casting [cstyleCast]
  Tw_NotifySelection(Td, SelReq[SelCount].Requestor, SelReq[SelCount].ReqPrivate, magic, mimeBuf,
                     ^
server/hw/hw_twin.cpp:394:25: style: C-style pointer casting [cstyleCast]
  if (reqprivate + 1 == TSelCount) {
                        ^
server/hw/hw_twin.cpp:395:5: style: C-style pointer casting [cstyleCast]
    TSelCount--;
    ^
server/hw/hw_twin.cpp:396:40: style: C-style pointer casting [cstyleCast]
    TwinSelectionNotify((Tobj)(topaque)TSelReq[TSelCount].Requestor, TSelReq[TSelCount].ReqPrivate,
                                       ^
server/hw/hw_twin.cpp:408:12: style: C-style pointer casting [cstyleCast]
  Tw_Close(Td);
           ^
server/hw/hw_twin.cpp:475:23: style: C-style pointer casting [cstyleCast]
  if (!(HW->Private = (tw_data *)AllocMem(sizeof(tw_data)))) {
                      ^
server/hw/hw_twin.cpp:484:3: style: C-style pointer casting [cstyleCast]
  Td = NULL;
  ^
server/hw/hw_twin.cpp:486:40: style: C-style pointer casting [cstyleCast]
  if (Tw_CheckMagic(hw_twin_magic) && (Td = Tw_Open(arg.data())) &&
                                       ^
server/hw/hw_twin.cpp:492:24: style: C-style pointer casting [cstyleCast]
      Tw_FindLFunction(Td, Tw_MapWidget, Tw_WriteCharsetWindow, Tw_WriteTCellWindow,
                       ^
server/hw/hw_twin.cpp:496:35: style: C-style pointer casting [cstyleCast]
      (tw_screen = Tw_FirstScreen(Td)) && (Tmsgport = Tw_CreateMsgPort(Td, 12, "Twin on Twin")) &&
                                  ^
server/hw/hw_twin.cpp:497:32: style: C-style pointer casting [cstyleCast]
      (tw_menu = Tw_CreateMenu(Td, TCOL(tblack, twhite), TCOL(tblack, tgreen),
                               ^
server/hw/hw_twin.cpp:500:26: style: C-style pointer casting [cstyleCast]
      Tw_Item4MenuCommon(Td, tw_menu)) {
                         ^
server/hw/hw_twin.cpp:503:20: style: C-style pointer casting [cstyleCast]
      Tw_Info4Menu(Td, tw_menu, TW_ROW_ACTIVE, (uldat)14, " Twin on Twin ",
                   ^
server/hw/hw_twin.cpp:509:7: style: C-style pointer casting [cstyleCast]
      Twin = Tw_CreateWindow(Td, len, name, NULL, tw_menu, TCOL(twhite, tblack), TW_LINECURSOR,
      ^
server/hw/hw_twin.cpp:515:12: style: C-style pointer casting [cstyleCast]
      if (!Twin)
           ^
server/hw/hw_twin.cpp:518:26: style: C-style pointer casting [cstyleCast]
      Tw_SetColorsWindow(Td, Twin, 0x1FF, TCOL(thigh | tyellow, tcyan),
                         ^
server/hw/hw_twin.cpp:523:20: style: C-style pointer casting [cstyleCast]
      Tw_MapWidget(Td, Twin, tw_screen);
                   ^
server/hw/hw_twin.cpp:529:16: style: C-style pointer casting [cstyleCast]
      Tw_Flush(Td);
               ^
server/hw/hw_twin.cpp:531:7: style: C-style pointer casting [cstyleCast]
      TSelCount = SelCount = 0;
      ^
server/hw/hw_twin.cpp:535:42: style: C-style pointer casting [cstyleCast]
          RegisterRemote(Tw_ConnectionFd(Td), (Tobj)HW, (void (*)(int, Tobj))TW_KeyboardEvent);
                                         ^
server/hw/hw_twin.cpp:598:25: style: C-style pointer casting [cstyleCast]
    if ((len = Tw_Errno(Td)))
                        ^
server/hw/hw_twin.cpp:599:79: style: C-style pointer casting [cstyleCast]
      log(ERROR) << "      TW_InitHW() failed: " << Chars::from_c(Tw_StrError(Td, len)) << " "
                                                                              ^
server/hw/hw_twin.cpp:600:53: style: C-style pointer casting [cstyleCast]
                 << Chars::from_c(Tw_StrErrorDetail(Td, len, Tw_ErrnoDetail(Td))) << "\n";
                                                    ^
server/hw/hw_twin.cpp:605:7: style: C-style pointer casting [cstyleCast]
  if (Td && Tw_ConnectionFd(Td) >= 0)
      ^
server/hw/hw_twin.cpp:326:63: style: C-style pointer casting [cstyleCast]
      printf("requesting selection (%d) from libtw server\n", TSelCount);
                                                              ^
server/hw/hw_twin.cpp:352:58: style: C-style pointer casting [cstyleCast]
    printf("requesting selection (%d) from twin core\n", SelCount);
                                                         ^
server/hw/hw_twin.cpp:374:71: style: C-style pointer casting [cstyleCast]
  printf("notifying selection (%d/%d) to libtw server\n", reqprivate, SelCount - 1);
                                                                      ^
server/hw/hw_twin.cpp:392:68: style: C-style pointer casting [cstyleCast]
  printf("notifying selection (%d/%d) to twin core\n", reqprivate, TSelCount - 1);
                                                                   ^
server/hw/hw_xft.cpp:236:7: style: The scope of the variable 'xscreen' can be reduced. [variableScope]
  int xscreen;
      ^
server/hw/hw_x/util.h:351:45: style:inconclusive: Function 'xft_SelectionRequest_X11' argument 1 names different: declaration 'Requestor' definition 'requestor'. [funcArgNamesDifferent]
static void XSYM(SelectionRequest_X11)(Tobj requestor, uldat reqprivate) {
                                            ^
server/hw/hw_x/util_protos.h:20:45: note: Function 'xft_SelectionRequest_X11' argument 1 names different: declaration 'Requestor' definition 'requestor'.
static void XSYM(SelectionRequest_X11)(Tobj Requestor, uldat ReqPrivate);
                                            ^
server/hw/hw_x/util.h:351:45: note: Function 'xft_SelectionRequest_X11' argument 1 names different: declaration 'Requestor' definition 'requestor'.
static void XSYM(SelectionRequest_X11)(Tobj requestor, uldat reqprivate) {
                                            ^
server/hw/hw_x/util.h:351:62: style:inconclusive: Function 'xft_SelectionRequest_X11' argument 2 names different: declaration 'ReqPrivate' definition 'reqprivate'. [funcArgNamesDifferent]
static void XSYM(SelectionRequest_X11)(Tobj requestor, uldat reqprivate) {
                                                             ^
server/hw/hw_x/util_protos.h:20:62: note: Function 'xft_SelectionRequest_X11' argument 2 names different: declaration 'ReqPrivate' definition 'reqprivate'.
static void XSYM(SelectionRequest_X11)(Tobj Requestor, uldat ReqPrivate);
                                                             ^
server/hw/hw_x/util.h:351:62: note: Function 'xft_SelectionRequest_X11' argument 2 names different: declaration 'ReqPrivate' definition 'reqprivate'.
static void XSYM(SelectionRequest_X11)(Tobj requestor, uldat reqprivate) {
                                                             ^
server/hw/hw_x/common.h:56:12: style: Variable 'buflen' is assigned a value that is never used. [unreadVariable]
    buflen = 0;
           ^
server/hw_multi.cpp:157:11: error: Invalid log() argument nr 1. The value is 0 but the valid values are '4.94066e-324:'. [invalidFunctionArg]
      log(INFO) << "twin: starting display driver module `" << name << "'...\n";
          ^
server/hw_multi.cpp:160:13: error: Invalid log() argument nr 1. The value is 0 but the valid values are '4.94066e-324:'. [invalidFunctionArg]
        log(INFO) << "twin: ...module `" << name << "' successfully started.\n";
            ^
server/hw_multi.cpp:455:9: error: Invalid log() argument nr 1. The value is 0 but the valid values are '4.94066e-324:'. [invalidFunctionArg]
    log(INFO) << "twin: RestartHW(): All display drivers removed by SuspendHW().\n"
        ^
server/hw_multi.cpp:471:9: error: Invalid log() argument nr 1. The value is 0 but the valid values are '4.94066e-324:'. [invalidFunctionArg]
    log(INFO) << "twin: SuspendHW(): All display drivers had to be removed\n"
        ^
server/hw_multi.cpp:119:11: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
          printf("twin: starting in background as %s (pid %d)\n", TWDisplay, (unsigned)child);
          ^
server/hw_multi.cpp:121:9: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
        fprintf(stderr, "twin: starting in background as %s (pid %d)\n", TWDisplay,
        ^
server/hw_multi.cpp:373:16: style: Redundant initialization for 'arglist'. The initialized value is overwritten before it is read. [redundantInitialization]
  for (arglist = orig_argv; (arg = *arglist); arglist++) {
               ^
server/hw_multi.cpp:365:18: note: arglist is initialized
  char **arglist = orig_argv;
                 ^
server/hw_multi.cpp:373:16: note: arglist is overwritten
  for (arglist = orig_argv; (arg = *arglist); arglist++) {
               ^
server/hw_multi.cpp:245:12: style: The scope of the variable 'msgport' can be reduced. [variableScope]
  Tmsgport msgport;
           ^
server/hw_multi.cpp:346:12: style: The scope of the variable 's_HW' can be reduced. [variableScope]
  Tdisplay s_HW;
           ^
server/hw_multi.cpp:436:12: style: The scope of the variable 's_HW' can be reduced. [variableScope]
  Tdisplay s_HW;
           ^
server/hw_multi.cpp:478:12: style: The scope of the variable 's_HW' can be reduced. [variableScope]
  Tdisplay s_HW;
           ^
server/hw_multi.cpp:715:18: style: The scope of the variable 'event' can be reduced. [variableScope]
      event_any *event;
                 ^
server/hw_multi.cpp:929:19: style: The scope of the variable 'event' can be reduced. [variableScope]
  event_keyboard *event;
                  ^
server/hw_multi.cpp:1165:19: style: The scope of the variable 'event' can be reduced. [variableScope]
  event_keyboard *event;
                  ^
server/hw_multi.cpp:670:31: style:inconclusive: Function 'TwinSelectionNotify' argument 1 names different: declaration 'Requestor' definition 'requestor'. [funcArgNamesDifferent]
void TwinSelectionNotify(Tobj requestor, uldat reqprivate, e_id magic, Chars mime, Chars data) {
                              ^
server/common.h:37:31: note: Function 'TwinSelectionNotify' argument 1 names different: declaration 'Requestor' definition 'requestor'.
void TwinSelectionNotify(Tobj Requestor, uldat ReqPrivate, e_id Magic, Chars mime, Chars data);
                              ^
server/hw_multi.cpp:670:31: note: Function 'TwinSelectionNotify' argument 1 names different: declaration 'Requestor' definition 'requestor'.
void TwinSelectionNotify(Tobj requestor, uldat reqprivate, e_id magic, Chars mime, Chars data) {
                              ^
server/hw_multi.cpp:670:48: style:inconclusive: Function 'TwinSelectionNotify' argument 2 names different: declaration 'ReqPrivate' definition 'reqprivate'. [funcArgNamesDifferent]
void TwinSelectionNotify(Tobj requestor, uldat reqprivate, e_id magic, Chars mime, Chars data) {
                                               ^
server/common.h:37:48: note: Function 'TwinSelectionNotify' argument 2 names different: declaration 'ReqPrivate' definition 'reqprivate'.
void TwinSelectionNotify(Tobj Requestor, uldat ReqPrivate, e_id Magic, Chars mime, Chars data);
                                               ^
server/hw_multi.cpp:670:48: note: Function 'TwinSelectionNotify' argument 2 names different: declaration 'ReqPrivate' definition 'reqprivate'.
void TwinSelectionNotify(Tobj requestor, uldat reqprivate, e_id magic, Chars mime, Chars data) {
                                               ^
server/hw_multi.cpp:670:65: style:inconclusive: Function 'TwinSelectionNotify' argument 3 names different: declaration 'Magic' definition 'magic'. [funcArgNamesDifferent]
void TwinSelectionNotify(Tobj requestor, uldat reqprivate, e_id magic, Chars mime, Chars data) {
                                                                ^
server/common.h:37:65: note: Function 'TwinSelectionNotify' argument 3 names different: declaration 'Magic' definition 'magic'.
void TwinSelectionNotify(Tobj Requestor, uldat ReqPrivate, e_id Magic, Chars mime, Chars data);
                                                                ^
server/hw_multi.cpp:670:65: note: Function 'TwinSelectionNotify' argument 3 names different: declaration 'Magic' definition 'magic'.
void TwinSelectionNotify(Tobj requestor, uldat reqprivate, e_id magic, Chars mime, Chars data) {
                                                                ^
server/hw_multi.cpp:707:32: style:inconclusive: Function 'TwinSelectionRequest' argument 1 names different: declaration 'Requestor' definition 'requestor'. [funcArgNamesDifferent]
void TwinSelectionRequest(Tobj requestor, uldat reqprivate, Tobj Owner) {
                               ^
server/common.h:38:32: note: Function 'TwinSelectionRequest' argument 1 names different: declaration 'Requestor' definition 'requestor'.
void TwinSelectionRequest(Tobj Requestor, uldat ReqPrivate, Tobj Owner);
                               ^
server/hw_multi.cpp:707:32: note: Function 'TwinSelectionRequest' argument 1 names different: declaration 'Requestor' definition 'requestor'.
void TwinSelectionRequest(Tobj requestor, uldat reqprivate, Tobj Owner) {
                               ^
server/hw_multi.cpp:707:49: style:inconclusive: Function 'TwinSelectionRequest' argument 2 names different: declaration 'ReqPrivate' definition 'reqprivate'. [funcArgNamesDifferent]
void TwinSelectionRequest(Tobj requestor, uldat reqprivate, Tobj Owner) {
                                                ^
server/common.h:38:49: note: Function 'TwinSelectionRequest' argument 2 names different: declaration 'ReqPrivate' definition 'reqprivate'.
void TwinSelectionRequest(Tobj Requestor, uldat ReqPrivate, Tobj Owner);
                                                ^
server/hw_multi.cpp:707:49: note: Function 'TwinSelectionRequest' argument 2 names different: declaration 'ReqPrivate' definition 'reqprivate'.
void TwinSelectionRequest(Tobj requestor, uldat reqprivate, Tobj Owner) {
                                                ^
server/hw_multi.cpp:928:27: style:inconclusive: Function 'SyntheticKey' argument 1 names different: declaration 'widget' definition 'w'. [funcArgNamesDifferent]
void SyntheticKey(Twidget w, udat Code, udat ShiftFlags, byte Len, const char *Seq) {
                          ^
server/hw_multi.h:47:27: note: Function 'SyntheticKey' argument 1 names different: declaration 'widget' definition 'w'.
void SyntheticKey(Twidget widget, udat Code, udat ShiftFlags, byte Len, const char *Seq);
                          ^
server/hw_multi.cpp:928:27: note: Function 'SyntheticKey' argument 1 names different: declaration 'widget' definition 'w'.
void SyntheticKey(Twidget w, udat Code, udat ShiftFlags, byte Len, const char *Seq) {
                          ^
server/hw_multi.cpp:1079:21: style:inconclusive: Function 'DragAreaHW' argument 1 names different: declaration 'Xstart' definition 'Left'. [funcArgNamesDifferent]
void DragAreaHW(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                    ^
server/common.h:23:21: note: Function 'DragAreaHW' argument 1 names different: declaration 'Xstart' definition 'Left'.
void DragAreaHW(dat Xstart, dat Ystart, dat Xend, dat Yend, dat DstXstart, dat DstYstart);
                    ^
server/hw_multi.cpp:1079:21: note: Function 'DragAreaHW' argument 1 names different: declaration 'Xstart' definition 'Left'.
void DragAreaHW(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                    ^
server/hw_multi.cpp:1079:31: style:inconclusive: Function 'DragAreaHW' argument 2 names different: declaration 'Ystart' definition 'Up'. [funcArgNamesDifferent]
void DragAreaHW(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                              ^
server/common.h:23:33: note: Function 'DragAreaHW' argument 2 names different: declaration 'Ystart' definition 'Up'.
void DragAreaHW(dat Xstart, dat Ystart, dat Xend, dat Yend, dat DstXstart, dat DstYstart);
                                ^
server/hw_multi.cpp:1079:31: note: Function 'DragAreaHW' argument 2 names different: declaration 'Ystart' definition 'Up'.
void DragAreaHW(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                              ^
server/hw_multi.cpp:1079:39: style:inconclusive: Function 'DragAreaHW' argument 3 names different: declaration 'Xend' definition 'Rgt'. [funcArgNamesDifferent]
void DragAreaHW(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                                      ^
server/common.h:23:45: note: Function 'DragAreaHW' argument 3 names different: declaration 'Xend' definition 'Rgt'.
void DragAreaHW(dat Xstart, dat Ystart, dat Xend, dat Yend, dat DstXstart, dat DstYstart);
                                            ^
server/hw_multi.cpp:1079:39: note: Function 'DragAreaHW' argument 3 names different: declaration 'Xend' definition 'Rgt'.
void DragAreaHW(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                                      ^
server/hw_multi.cpp:1079:48: style:inconclusive: Function 'DragAreaHW' argument 4 names different: declaration 'Yend' definition 'Dwn'. [funcArgNamesDifferent]
void DragAreaHW(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                                               ^
server/common.h:23:55: note: Function 'DragAreaHW' argument 4 names different: declaration 'Yend' definition 'Dwn'.
void DragAreaHW(dat Xstart, dat Ystart, dat Xend, dat Yend, dat DstXstart, dat DstYstart);
                                                      ^
server/hw_multi.cpp:1079:48: note: Function 'DragAreaHW' argument 4 names different: declaration 'Yend' definition 'Dwn'.
void DragAreaHW(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                                               ^
server/hw_multi.cpp:1079:57: style:inconclusive: Function 'DragAreaHW' argument 5 names different: declaration 'DstXstart' definition 'DstLeft'. [funcArgNamesDifferent]
void DragAreaHW(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                                                        ^
server/common.h:23:65: note: Function 'DragAreaHW' argument 5 names different: declaration 'DstXstart' definition 'DstLeft'.
void DragAreaHW(dat Xstart, dat Ystart, dat Xend, dat Yend, dat DstXstart, dat DstYstart);
                                                                ^
server/hw_multi.cpp:1079:57: note: Function 'DragAreaHW' argument 5 names different: declaration 'DstXstart' definition 'DstLeft'.
void DragAreaHW(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                                                        ^
server/hw_multi.cpp:1079:70: style:inconclusive: Function 'DragAreaHW' argument 6 names different: declaration 'DstYstart' definition 'DstUp'. [funcArgNamesDifferent]
void DragAreaHW(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                                                                     ^
server/common.h:23:80: note: Function 'DragAreaHW' argument 6 names different: declaration 'DstYstart' definition 'DstUp'.
void DragAreaHW(dat Xstart, dat Ystart, dat Xend, dat Yend, dat DstXstart, dat DstYstart);
                                                                               ^
server/hw_multi.cpp:1079:70: note: Function 'DragAreaHW' argument 6 names different: declaration 'DstYstart' definition 'DstUp'.
void DragAreaHW(dat Left, dat Up, dat Rgt, dat Dwn, dat DstLeft, dat DstUp) {
                                                                     ^
server/hw_multi.cpp:1089:58: style:inconclusive: Function 'MouseEventCommon' argument 5 names different: declaration 'IdButtons' definition 'Buttons'. [funcArgNamesDifferent]
byte MouseEventCommon(dat x, dat y, dat dx, dat dy, udat Buttons) {
                                                         ^
server/common.h:48:58: note: Function 'MouseEventCommon' argument 5 names different: declaration 'IdButtons' definition 'Buttons'.
byte MouseEventCommon(dat x, dat y, dat dx, dat dy, udat IdButtons);
                                                         ^
server/hw_multi.cpp:1089:58: note: Function 'MouseEventCommon' argument 5 names different: declaration 'IdButtons' definition 'Buttons'.
byte MouseEventCommon(dat x, dat y, dat dx, dat dy, udat Buttons) {
                                                         ^
server/hw_multi.cpp:1128:42: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
        result = (Buttons & HOLD_CODE(i) ? PRESS_CODE(i) : RELEASE_CODE(i)) |
                                         ^
server/hw_multi.cpp:178:55: performance:inconclusive: Function parameter 'name' should be passed by const reference. [passedByValue]
static byte set_hw_name(Tdisplay display, const Chars name) {
                                                      ^
server/main.cpp:232:9: style: The scope of the variable 'S' can be reduced. [variableScope]
  char *S;
        ^
server/methods.cpp:41:39: style:inconclusive: Function 'OverrideMth' argument 2 names different: declaration 'OldMethod' definition 'OrigMth'. [funcArgNamesDifferent]
void *OverrideMth(void **where, void *OrigMth, void *NewMth) {
                                      ^
server/methods.h:71:39: note: Function 'OverrideMth' argument 2 names different: declaration 'OldMethod' definition 'OrigMth'.
void *OverrideMth(void **where, void *OldMethod, void *NewMethod);
                                      ^
server/methods.cpp:41:39: note: Function 'OverrideMth' argument 2 names different: declaration 'OldMethod' definition 'OrigMth'.
void *OverrideMth(void **where, void *OrigMth, void *NewMth) {
                                      ^
server/methods.cpp:41:54: style:inconclusive: Function 'OverrideMth' argument 3 names different: declaration 'NewMethod' definition 'NewMth'. [funcArgNamesDifferent]
void *OverrideMth(void **where, void *OrigMth, void *NewMth) {
                                                     ^
server/methods.h:71:56: note: Function 'OverrideMth' argument 3 names different: declaration 'NewMethod' definition 'NewMth'.
void *OverrideMth(void **where, void *OldMethod, void *NewMethod);
                                                       ^
server/methods.cpp:41:54: note: Function 'OverrideMth' argument 3 names different: declaration 'NewMethod' definition 'NewMth'.
void *OverrideMth(void **where, void *OrigMth, void *NewMth) {
                                                     ^
server/methods.cpp:145:45: style:inconclusive: Function 'FakeWriteCharset' argument 2 names different: declaration 'len' definition 'Len'. [funcArgNamesDifferent]
bool FakeWriteCharset(Twindow window, uldat Len, const char *charset_bytes) {
                                            ^
server/methods.h:18:45: note: Function 'FakeWriteCharset' argument 2 names different: declaration 'len' definition 'Len'.
bool FakeWriteCharset(Twindow window, uldat len, const char *charset_bytes);
                                            ^
server/methods.cpp:145:45: note: Function 'FakeWriteCharset' argument 2 names different: declaration 'len' definition 'Len'.
bool FakeWriteCharset(Twindow window, uldat Len, const char *charset_bytes) {
                                            ^
server/methods.cpp:151:42: style:inconclusive: Function 'FakeWriteUtf8' argument 2 names different: declaration 'len' definition 'Len'. [funcArgNamesDifferent]
bool FakeWriteUtf8(Twindow window, uldat Len, const char *utf8_bytes) {
                                         ^
server/methods.h:19:42: note: Function 'FakeWriteUtf8' argument 2 names different: declaration 'len' definition 'Len'.
bool FakeWriteUtf8(Twindow window, uldat len, const char *utf8_bytes);
                                         ^
server/methods.cpp:151:42: note: Function 'FakeWriteUtf8' argument 2 names different: declaration 'len' definition 'Len'.
bool FakeWriteUtf8(Twindow window, uldat Len, const char *utf8_bytes) {
                                         ^
server/methods.cpp:157:43: style:inconclusive: Function 'FakeWriteTRune' argument 2 names different: declaration 'len' definition 'Len'. [funcArgNamesDifferent]
bool FakeWriteTRune(Twindow window, uldat Len, const trune *runes) {
                                          ^
server/methods.h:20:43: note: Function 'FakeWriteTRune' argument 2 names different: declaration 'len' definition 'Len'.
bool FakeWriteTRune(Twindow window, uldat len, const trune *runes);
                                          ^
server/methods.cpp:157:43: note: Function 'FakeWriteTRune' argument 2 names different: declaration 'len' definition 'Len'.
bool FakeWriteTRune(Twindow window, uldat Len, const trune *runes) {
                                          ^
server/methods.cpp:163:57: style:inconclusive: Function 'FakeWriteTCell' argument 4 names different: declaration 'len' definition 'Len'. [funcArgNamesDifferent]
bool FakeWriteTCell(Twindow window, dat x, dat y, uldat Len, const tcell *cells) {
                                                        ^
server/methods.h:21:57: note: Function 'FakeWriteTCell' argument 4 names different: declaration 'len' definition 'Len'.
bool FakeWriteTCell(Twindow window, dat x, dat y, uldat len, const tcell *cells);
                                                        ^
server/methods.cpp:163:57: note: Function 'FakeWriteTCell' argument 4 names different: declaration 'len' definition 'Len'.
bool FakeWriteTCell(Twindow window, dat x, dat y, uldat Len, const tcell *cells) {
                                                        ^
server/methods.cpp:175:57: style:inconclusive: Function 'FakeFindBorderWindow' argument 4 names different: declaration 'border' definition 'Border'. [funcArgNamesDifferent]
tpos FakeFindBorderWindow(Twindow w, dat u, dat v, byte Border, tcell *PtrAttr) {
                                                        ^
server/methods.h:22:57: note: Function 'FakeFindBorderWindow' argument 4 names different: declaration 'border' definition 'Border'.
tpos FakeFindBorderWindow(Twindow w, dat u, dat v, byte border, tcell *ptr_cell);
                                                        ^
server/methods.cpp:175:57: note: Function 'FakeFindBorderWindow' argument 4 names different: declaration 'border' definition 'Border'.
tpos FakeFindBorderWindow(Twindow w, dat u, dat v, byte Border, tcell *PtrAttr) {
                                                        ^
server/methods.cpp:175:72: style:inconclusive: Function 'FakeFindBorderWindow' argument 5 names different: declaration 'ptr_cell' definition 'PtrAttr'. [funcArgNamesDifferent]
tpos FakeFindBorderWindow(Twindow w, dat u, dat v, byte Border, tcell *PtrAttr) {
                                                                       ^
server/methods.h:22:72: note: Function 'FakeFindBorderWindow' argument 5 names different: declaration 'ptr_cell' definition 'PtrAttr'.
tpos FakeFindBorderWindow(Twindow w, dat u, dat v, byte border, tcell *ptr_cell);
                                                                       ^
server/methods.cpp:175:72: note: Function 'FakeFindBorderWindow' argument 5 names different: declaration 'ptr_cell' definition 'PtrAttr'.
tpos FakeFindBorderWindow(Twindow w, dat u, dat v, byte Border, tcell *PtrAttr) {
                                                                       ^
server/missing.cpp:54:3: portability: Returning an address value in a function with integer return type is not portable. [CastAddressToIntegerAtReturn]
  return s;
  ^
server/missing.cpp:34:9: style: The scope of the variable 'q' can be reduced. [variableScope]
  char *q;
        ^
server/missing.cpp:35:10: style: The scope of the variable 'len' can be reduced. [variableScope]
  size_t len;
         ^
server/obj/group.cpp:106:10: style: Redundant condition: g. '!g || (g && g->Group==group)' is equivalent to '!g || g->Group==group' [redundantCondition]
  if (!g || (g && g->Group == group)) {
         ^
server/obj/mutex.cpp:36:39: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
      mask &= curr->Perm & PERM_WRITE ? PERM_NONE : curr->Perm & PERM_READ ? PERM_READ : ~(byte)0;
                                      ^
server/pty.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 44 configurations. Use --force to check all configurations. [toomanyconfigs]

^
server/pty.cpp:246:16: style: The scope of the variable 'data' can be reduced. [variableScope]
  Tremotedata *data;
               ^
server/pty.cpp:200:25: style: Local variable 'ttysave' shadows outer variable [shadowVariable]
  extern struct termios ttysave;
                        ^
server/hw.cpp:71:16: note: Shadowed declaration
struct termios ttysave;
               ^
server/pty.cpp:200:25: note: Shadow variable
  extern struct termios ttysave;
                        ^
server/pty.cpp:96:10: style: Variable 'fd' is assigned a value that is never used. [unreadVariable]
  int fd = -1, sfd = -1;
         ^
server/pty.cpp:96:20: style: Variable 'sfd' is assigned a value that is never used. [unreadVariable]
  int fd = -1, sfd = -1;
                   ^
rcparse.l:294:5: error: Resource leak: f [resourceLeak]

    ^
rcparse_lex.cpp:2284:2: warning: Possible null pointer dereference: b [nullPointer]

 ^
rcparse_lex.cpp:2177:18: note: Calling function 'yy_init_buffer', 1st argument '(yy_buffer_stack)?(yy_buffer_stack)[yy_buffer_stack_top]:NULL' value is 0

                 ^
rcparse_lex.cpp:2284:2: note: Null pointer dereference

 ^
rcparse_lex.cpp:2285:2: warning: Possible null pointer dereference: b [nullPointer]

 ^
rcparse_lex.cpp:2177:18: note: Calling function 'yy_init_buffer', 1st argument '(yy_buffer_stack)?(yy_buffer_stack)[yy_buffer_stack_top]:NULL' value is 0

                 ^
rcparse_lex.cpp:2285:2: note: Null pointer dereference

 ^
rcparse_lex.cpp:1946:3: style: Redundant initialization for 'c'. The initialized value is overwritten before it is read. [redundantInitialization]

  ^
rcparse_lex.cpp:1946:3: note: c is initialized

  ^
rcparse_lex.cpp:1946:3: note: c is overwritten

  ^
rcparse_lex.cpp:2025:59: style:inconclusive: Function 'yy_try_NUL_trans' argument 1 names different: declaration 'current_state' definition 'yy_current_state'. [funcArgNamesDifferent]

                                                          ^
rcparse_lex.cpp:342:55: note: Function 'yy_try_NUL_trans' argument 1 names different: declaration 'current_state' definition 'yy_current_state'.

                                                      ^
rcparse_lex.cpp:2025:59: note: Function 'yy_try_NUL_trans' argument 1 names different: declaration 'current_state' definition 'yy_current_state'.

                                                          ^
rcparse_lex.cpp:2469:46: style:inconclusive: Function 'yy_scan_string' argument 1 names different: declaration 'yy_str' definition 'yystr'. [funcArgNamesDifferent]

                                             ^
rcparse_lex.cpp:297:46: note: Function 'yy_scan_string' argument 1 names different: declaration 'yy_str' definition 'yystr'.

                                             ^
rcparse_lex.cpp:2469:46: note: Function 'yy_scan_string' argument 1 names different: declaration 'yy_str' definition 'yystr'.

                                             ^
rcparse_lex.cpp:2482:46: style:inconclusive: Function 'yy_scan_bytes' argument 1 names different: declaration 'bytes' definition 'yybytes'. [funcArgNamesDifferent]

                                             ^
rcparse_lex.cpp:298:45: note: Function 'yy_scan_bytes' argument 1 names different: declaration 'bytes' definition 'yybytes'.

                                            ^
rcparse_lex.cpp:2482:46: note: Function 'yy_scan_bytes' argument 1 names different: declaration 'bytes' definition 'yybytes'.

                                             ^
rcparse_lex.cpp:2482:60: style:inconclusive: Function 'yy_scan_bytes' argument 2 names different: declaration 'len' definition '_yybytes_len'. [funcArgNamesDifferent]

                                                           ^
rcparse_lex.cpp:298:56: note: Function 'yy_scan_bytes' argument 2 names different: declaration 'len' definition '_yybytes_len'.

                                                       ^
rcparse_lex.cpp:2482:60: note: Function 'yy_scan_bytes' argument 2 names different: declaration 'len' definition '_yybytes_len'.

                                                           ^
rcparse_lex.cpp:2614:24: style:inconclusive: Function 'yyset_debug' argument 1 names different: declaration 'debug_flag' definition '_bdebug'. [funcArgNamesDifferent]

                       ^
rcparse_lex.cpp:909:24: note: Function 'yyset_debug' argument 1 names different: declaration 'debug_flag' definition '_bdebug'.

                       ^
rcparse_lex.cpp:2614:24: note: Function 'yyset_debug' argument 1 names different: declaration 'debug_flag' definition '_bdebug'.

                       ^
rcparse_lex.cpp:1079:0: information: Skipping configuration 'YY_USER_INIT' since the value of 'YY_USER_INIT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]

^
server/rcparse_tab.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 38 configurations. Use --force to check all configurations. [toomanyconfigs]

^
server/rcparse_tab.cpp:1018:5: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
    yymsg = "Deleting";
    ^
server/rcparse_tab.cpp:1092:3: style: The comparison '0 <= yystate' is always true. [knownConditionTrueFalse]
  YY_ASSERT(0 <= yystate && yystate < YYNSTATES);
  ^
server/rcparse_tab.cpp:1039:29: note: 'yystate' is assigned value '0' here.
  yy_state_fast_t yystate = 0;
                            ^
server/rcparse_tab.cpp:1092:3: note: The comparison '0 <= yystate' is always true.
  YY_ASSERT(0 <= yystate && yystate < YYNSTATES);
  ^
server/rcparse.h:292:8: style: The scope of the variable 'n' can be reduced. [variableScope]
  node n;
       ^
server/rcparse.h:554:8: style: The scope of the variable 'n' can be reduced. [variableScope]
  node n;
       ^
server/rcparse.h:1212:25: style: The scope of the variable 'orig' can be reduced. [variableScope]
  Tscreen screen, next, orig;
                        ^
server/rcparse.h:1262:13: style: The scope of the variable 'item' can be reduced. [variableScope]
  Tmenuitem item;
            ^
server/rcparse.h:1263:11: style: The scope of the variable 'w' can be reduced. [variableScope]
  Twindow w;
          ^
server/rcparse.h:1437:33: warning:inconclusive: Division of result of sizeof() on pointer type. [divideSizeof]
  len = Max2(len, TW_BIGBUFF) * sizeof(node) / 4;
                                ^
server/rcparse.h:1117:5: style: Variable 'm' is assigned a value that is never used. [unreadVariable]
  m += sizeof(GlobalShadows);
    ^
server/rcparse.h:1398:5: style: Variable 'm' is assigned a value that is never used. [unreadVariable]
  m += sizeof(GlobalShadows);
    ^
server/rcparse_tab.cpp:1018:11: style: Variable 'yymsg' is assigned a value that is never used. [unreadVariable]
    yymsg = "Deleting";
          ^
server/rcparse_tab.cpp:1118:0: information: Skipping configuration 'EXIT_SUCCESS;_ALLOCA_H;YYSTACK_USE_ALLOCA;yyoverflow' since the value of 'yyoverflow' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      yyoverflow(YY_("memory exhausted"), &yyss1, yysize * YYSIZEOF(*yyssp), &yyvs1,
^
server/rcrun.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
server/rcrun.cpp:570:15: error: Invalid log() argument nr 1. The value is 0 but the valid values are '4.94066e-324:'. [invalidFunctionArg]
          log(INFO) << Chars::from_c(*argv++) << " ";
              ^
server/rcrun.cpp:572:13: error: Invalid log() argument nr 1. The value is 0 but the valid values are '4.94066e-324:'. [invalidFunctionArg]
        log(INFO) << "\n";
            ^
server/rcrun.cpp:307:12: style: C-style pointer casting [cstyleCast]
  if ((r = (run *)AllocMem(sizeof(run)))) {
           ^
server/rcrun.cpp:1368:27: style: Variable 'All->SetUp->DeltaXShade' is reassigned a value before the old one has been used. [redundantAssignment]
  All->SetUp->DeltaXShade = 2;
                          ^
server/rcrun.cpp:1367:27: note: All->SetUp->DeltaXShade is assigned
  All->SetUp->DeltaXShade = 3;
                          ^
server/rcrun.cpp:1368:27: note: All->SetUp->DeltaXShade is overwritten
  All->SetUp->DeltaXShade = 2;
                          ^
server/rcrun.cpp:354:11: style: The scope of the variable 'w' can be reduced. [variableScope]
  Twindow w;
          ^
server/remote.cpp:50:21: style: C-style pointer casting [cstyleCast]
  if (!(newFdList = (fdlist *)ReAllocMem0(FdList,                   //
                    ^
server/remote.cpp:69:37: style: C-style pointer casting [cstyleCast]
  if (size < FdSize && (newFdList = (fdlist *)ReAllocMem0(FdList,                  //
                                    ^
server/remote.cpp:215:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
server/remote.cpp:269:12: style: The scope of the variable 'D_HW' can be reduced. [variableScope]
  Tdisplay D_HW;
           ^
server/remote.cpp:325:7: style: The scope of the variable 'fd' can be reduced. [variableScope]
  int fd;
      ^
server/remote.cpp:323:22: style:inconclusive: Function 'RemoteEvent' argument 1 names different: declaration 'FdNum' definition 'FdCount'. [funcArgNamesDifferent]
void RemoteEvent(int FdCount, fd_set *FdSet) {
                     ^
server/remote.h:30:22: note: Function 'RemoteEvent' argument 1 names different: declaration 'FdNum' definition 'FdCount'.
void RemoteEvent(int FdNum, fd_set *FdSet);
                     ^
server/remote.cpp:323:22: note: Function 'RemoteEvent' argument 1 names different: declaration 'FdNum' definition 'FdCount'.
void RemoteEvent(int FdCount, fd_set *FdSet) {
                     ^
server/resize.cpp:644:21: style: Expression is always true because 'else if' condition is opposite to previous condition at line 641. [multiCondition]
    else if (DeltaX > 0)
                    ^
server/resize.cpp:641:16: note: first condition
    if (DeltaX <= 0)
               ^
server/resize.cpp:644:21: note: else if condition is opposite to first condition
    else if (DeltaX > 0)
                    ^
server/resize.cpp:653:21: style: Condition 'DeltaX>=0' is always true [knownConditionTrueFalse]
    else if (DeltaX >= 0)
                    ^
server/resize.cpp:650:16: note: Assuming that condition 'DeltaX<=0' is not redundant
    if (DeltaX <= 0)
               ^
server/resize.cpp:653:21: note: Condition 'DeltaX>=0' is always true
    else if (DeltaX >= 0)
                    ^
server/resize.cpp:116:44: style: The scope of the variable 'max' can be reduced. [variableScope]
  tcell *NewCont, *saveNewCont, *OldCont, *max, h;
                                           ^
server/resize.cpp:353:16: style: The scope of the variable 'text' can be reduced. [variableScope]
  const trune *text;
               ^
server/resize.cpp:1113:11: style: The scope of the variable 'SetUp' can be reduced. [variableScope]
  Ssetup *SetUp;
          ^
server/resize.cpp:1669:13: style: The scope of the variable 'item' can be reduced. [variableScope]
  Tmenuitem item;
            ^
server/resize.cpp:1670:11: style: The scope of the variable 'w' can be reduced. [variableScope]
  Twindow w;
          ^
server/resize.cpp:1778:11: style: The scope of the variable 'oldw' can be reduced. [variableScope]
  Twidget oldw;
          ^
server/resize.cpp:1805:11: style: The scope of the variable 'FW' can be reduced. [variableScope]
  Twidget FW, CW;
          ^
server/resize.cpp:1833:8: style: The scope of the variable 'FR' can be reduced. [variableScope]
  Trow FR, CR;
       ^
server/resize.cpp:1865:17: style: The scope of the variable 'Event' can be reduced. [variableScope]
  event_gadget *Event;
                ^
server/resize.cpp:107:40: style:inconclusive: Function 'CheckResizeWindowContents' argument 1 names different: declaration 'window' definition 'w'. [funcArgNamesDifferent]
bool CheckResizeWindowContents(Twindow w) {
                                       ^
server/resize.h:28:40: note: Function 'CheckResizeWindowContents' argument 1 names different: declaration 'window' definition 'w'.
bool CheckResizeWindowContents(Twindow window);
                                       ^
server/resize.cpp:107:40: note: Function 'CheckResizeWindowContents' argument 1 names different: declaration 'window' definition 'w'.
bool CheckResizeWindowContents(Twindow w) {
                                       ^
server/resize.cpp:115:35: style:inconclusive: Function 'ResizeWindowContents' argument 1 names different: declaration 'window' definition 'w'. [funcArgNamesDifferent]
bool ResizeWindowContents(Twindow w) {
                                  ^
server/resize.h:29:35: note: Function 'ResizeWindowContents' argument 1 names different: declaration 'window' definition 'w'.
bool ResizeWindowContents(Twindow window);
                                  ^
server/resize.cpp:115:35: note: Function 'ResizeWindowContents' argument 1 names different: declaration 'window' definition 'w'.
bool ResizeWindowContents(Twindow w) {
                                  ^
server/resize.cpp:224:24: style:inconclusive: Function 'EnsureLenRow' argument 1 names different: declaration 'r' definition 'row'. [funcArgNamesDifferent]
bool EnsureLenRow(Trow row, uldat len, bool default_color) {
                       ^
server/resize.h:12:24: note: Function 'EnsureLenRow' argument 1 names different: declaration 'r' definition 'row'.
bool EnsureLenRow(Trow r, uldat len, bool default_color);
                       ^
server/resize.cpp:224:24: note: Function 'EnsureLenRow' argument 1 names different: declaration 'r' definition 'row'.
bool EnsureLenRow(Trow row, uldat len, bool default_color) {
                       ^
server/resize.cpp:246:36: style:inconclusive: Function 'RowWriteCharsetWindow' argument 1 names different: declaration 'window' definition 'w'. [funcArgNamesDifferent]
bool RowWriteCharsetWindow(Twindow w, uldat len, const char *charset_bytes) {
                                   ^
server/resize.h:13:36: note: Function 'RowWriteCharsetWindow' argument 1 names different: declaration 'window' definition 'w'.
bool RowWriteCharsetWindow(Twindow window, uldat Len, const char *charset_bytes);
                                   ^
server/resize.cpp:246:36: note: Function 'RowWriteCharsetWindow' argument 1 names different: declaration 'window' definition 'w'.
bool RowWriteCharsetWindow(Twindow w, uldat len, const char *charset_bytes) {
                                   ^
server/resize.cpp:246:45: style:inconclusive: Function 'RowWriteCharsetWindow' argument 2 names different: declaration 'Len' definition 'len'. [funcArgNamesDifferent]
bool RowWriteCharsetWindow(Twindow w, uldat len, const char *charset_bytes) {
                                            ^
server/resize.h:13:50: note: Function 'RowWriteCharsetWindow' argument 2 names different: declaration 'Len' definition 'len'.
bool RowWriteCharsetWindow(Twindow window, uldat Len, const char *charset_bytes);
                                                 ^
server/resize.cpp:246:45: note: Function 'RowWriteCharsetWindow' argument 2 names different: declaration 'Len' definition 'len'.
bool RowWriteCharsetWindow(Twindow w, uldat len, const char *charset_bytes) {
                                            ^
server/resize.cpp:331:33: style:inconclusive: Function 'RowWriteUtf8Window' argument 1 names different: declaration 'window' definition 'w'. [funcArgNamesDifferent]
bool RowWriteUtf8Window(Twindow w, uldat len, const char *utf8_bytes) {
                                ^
server/resize.h:14:33: note: Function 'RowWriteUtf8Window' argument 1 names different: declaration 'window' definition 'w'.
bool RowWriteUtf8Window(Twindow window, uldat len, const char *utf8_bytes);
                                ^
server/resize.cpp:331:33: note: Function 'RowWriteUtf8Window' argument 1 names different: declaration 'window' definition 'w'.
bool RowWriteUtf8Window(Twindow w, uldat len, const char *utf8_bytes) {
                                ^
server/resize.cpp:347:34: style:inconclusive: Function 'RowWriteTRuneWindow' argument 1 names different: declaration 'window' definition 'w'. [funcArgNamesDifferent]
bool RowWriteTRuneWindow(Twindow w, uldat len, const trune *runes) {
                                 ^
server/resize.h:15:34: note: Function 'RowWriteTRuneWindow' argument 1 names different: declaration 'window' definition 'w'.
bool RowWriteTRuneWindow(Twindow window, uldat len, const trune *runes);
                                 ^
server/resize.cpp:347:34: note: Function 'RowWriteTRuneWindow' argument 1 names different: declaration 'window' definition 'w'.
bool RowWriteTRuneWindow(Twindow w, uldat len, const trune *runes) {
                                 ^
server/resize.cpp:438:34: style:inconclusive: Function 'RowWriteTCellWindow' argument 1 names different: declaration 'window' definition 'w'. [funcArgNamesDifferent]
bool RowWriteTCellWindow(Twindow w, dat x, dat y, uldat len, const tcell *cells) {
                                 ^
server/resize.h:17:34: note: Function 'RowWriteTCellWindow' argument 1 names different: declaration 'window' definition 'w'.
bool RowWriteTCellWindow(Twindow window, dat x, dat y, uldat len, const tcell *cells);
                                 ^
server/resize.cpp:438:34: note: Function 'RowWriteTCellWindow' argument 1 names different: declaration 'window' definition 'w'.
bool RowWriteTCellWindow(Twindow w, dat x, dat y, uldat len, const tcell *cells) {
                                 ^
server/resize.cpp:480:28: style:inconclusive: Function 'ExposeWindow2' argument 1 names different: declaration 'window' definition 'w'. [funcArgNamesDifferent]
void ExposeWindow2(Twindow w, dat XWidth, dat YWidth, dat Left, dat Up, dat Pitch,
                           ^
server/resize.h:21:28: note: Function 'ExposeWindow2' argument 1 names different: declaration 'window' definition 'w'.
void ExposeWindow2(Twindow window, dat XWidth, dat YWidth, dat Left, dat Up, dat Pitch,
                           ^
server/resize.cpp:480:28: note: Function 'ExposeWindow2' argument 1 names different: declaration 'window' definition 'w'.
void ExposeWindow2(Twindow w, dat XWidth, dat YWidth, dat Left, dat Up, dat Pitch,
                           ^
server/resize.cpp:696:27: style:inconclusive: Function 'CenterWindow' argument 1 names different: declaration 'window' definition 'w'. [funcArgNamesDifferent]
void CenterWindow(Twindow w) {
                          ^
server/resize.h:51:27: note: Function 'CenterWindow' argument 1 names different: declaration 'window' definition 'w'.
void CenterWindow(Twindow window);
                          ^
server/resize.cpp:696:27: note: Function 'CenterWindow' argument 1 names different: declaration 'window' definition 'w'.
void CenterWindow(Twindow w) {
                          ^
server/resize.cpp:898:25: style:inconclusive: Function 'DragWindow' argument 1 names different: declaration 'window' definition 'w'. [funcArgNamesDifferent]
void DragWindow(Twindow w, dat i, dat j) {
                        ^
server/resize.h:48:25: note: Function 'DragWindow' argument 1 names different: declaration 'window' definition 'w'.
void DragWindow(Twindow window, dat i, dat j);
                        ^
server/resize.cpp:898:25: note: Function 'DragWindow' argument 1 names different: declaration 'window' definition 'w'.
void DragWindow(Twindow w, dat i, dat j) {
                        ^
server/resize.cpp:1110:30: style:inconclusive: Function 'ResizeRelWindow' argument 1 names different: declaration 'window' definition 'w'. [funcArgNamesDifferent]
void ResizeRelWindow(Twindow w, dat i, dat j) {
                             ^
server/resize.h:50:30: note: Function 'ResizeRelWindow' argument 1 names different: declaration 'window' definition 'w'.
void ResizeRelWindow(Twindow window, dat i, dat j);
                             ^
server/resize.cpp:1110:30: note: Function 'ResizeRelWindow' argument 1 names different: declaration 'window' definition 'w'.
void ResizeRelWindow(Twindow w, dat i, dat j) {
                             ^
server/resize.cpp:1327:27: style:inconclusive: Function 'ScrollWindow' argument 1 names different: declaration 'window' definition 'w'. [funcArgNamesDifferent]
void ScrollWindow(Twindow w, ldat DeltaX, ldat DeltaY) {
                          ^
server/resize.h:56:27: note: Function 'ScrollWindow' argument 1 names different: declaration 'window' definition 'w'.
void ScrollWindow(Twindow window, ldat DeltaX, ldat DeltaY);
                          ^
server/resize.cpp:1327:27: note: Function 'ScrollWindow' argument 1 names different: declaration 'window' definition 'w'.
void ScrollWindow(Twindow w, ldat DeltaX, ldat DeltaY) {
                          ^
server/resize.cpp:1716:27: style:inconclusive: Function 'RollUpWindow' argument 1 names different: declaration 'window' definition 'w'. [funcArgNamesDifferent]
void RollUpWindow(Twindow w, byte on_off) {
                          ^
server/resize.h:60:27: note: Function 'RollUpWindow' argument 1 names different: declaration 'window' definition 'w'.
void RollUpWindow(Twindow window, byte on_off);
                          ^
server/resize.cpp:1716:27: note: Function 'RollUpWindow' argument 1 names different: declaration 'window' definition 'w'.
void RollUpWindow(Twindow w, byte on_off) {
                          ^
server/resize.cpp:1776:34: style:inconclusive: Function 'LowerWidget' argument 2 names different: declaration 'alsoDeFocus' definition 'alsoUnFocus'. [funcArgNamesDifferent]
void LowerWidget(Twidget w, bool alsoUnFocus) {
                                 ^
server/resize.h:65:34: note: Function 'LowerWidget' argument 2 names different: declaration 'alsoDeFocus' definition 'alsoUnFocus'.
void LowerWidget(Twidget w, bool alsoDeFocus);
                                 ^
server/resize.cpp:1776:34: note: Function 'LowerWidget' argument 2 names different: declaration 'alsoDeFocus' definition 'alsoUnFocus'.
void LowerWidget(Twidget w, bool alsoUnFocus) {
                                 ^
server/resize.cpp:1804:29: style:inconclusive: Function 'RestackWidgets' argument 1 names different: declaration 'P' definition 'w'. [funcArgNamesDifferent]
void RestackWidgets(Twidget w, uldat N, const Twidget *arrayW) {
                            ^
server/resize.h:66:29: note: Function 'RestackWidgets' argument 1 names different: declaration 'P' definition 'w'.
void RestackWidgets(Twidget P, uldat N, const Twidget *arrayW);
                            ^
server/resize.cpp:1804:29: note: Function 'RestackWidgets' argument 1 names different: declaration 'P' definition 'w'.
void RestackWidgets(Twidget w, uldat N, const Twidget *arrayW) {
                            ^
server/resize.cpp:1919:43: style:inconclusive: Function 'WriteTexts' argument 2 names different: declaration 'xwidth' definition 't_width'. [funcArgNamesDifferent]
void Sgadget::WriteTexts(byte bitmap, dat t_width, dat t_height, const char *charset_bytes,
                                          ^
server/obj/gadget.h:49:36: note: Function 'WriteTexts' argument 2 names different: declaration 'xwidth' definition 't_width'.
  void WriteTexts(byte bitmap, dat xwidth, dat ywidth, const char *text, dat left, dat up);
                                   ^
server/resize.cpp:1919:43: note: Function 'WriteTexts' argument 2 names different: declaration 'xwidth' definition 't_width'.
void Sgadget::WriteTexts(byte bitmap, dat t_width, dat t_height, const char *charset_bytes,
                                          ^
server/resize.cpp:1919:56: style:inconclusive: Function 'WriteTexts' argument 3 names different: declaration 'ywidth' definition 't_height'. [funcArgNamesDifferent]
void Sgadget::WriteTexts(byte bitmap, dat t_width, dat t_height, const char *charset_bytes,
                                                       ^
server/obj/gadget.h:49:48: note: Function 'WriteTexts' argument 3 names different: declaration 'ywidth' definition 't_height'.
  void WriteTexts(byte bitmap, dat xwidth, dat ywidth, const char *text, dat left, dat up);
                                               ^
server/resize.cpp:1919:56: note: Function 'WriteTexts' argument 3 names different: declaration 'ywidth' definition 't_height'.
void Sgadget::WriteTexts(byte bitmap, dat t_width, dat t_height, const char *charset_bytes,
                                                       ^
server/resize.cpp:1919:78: style:inconclusive: Function 'WriteTexts' argument 4 names different: declaration 'text' definition 'charset_bytes'. [funcArgNamesDifferent]
void Sgadget::WriteTexts(byte bitmap, dat t_width, dat t_height, const char *charset_bytes,
                                                                             ^
server/obj/gadget.h:49:68: note: Function 'WriteTexts' argument 4 names different: declaration 'text' definition 'charset_bytes'.
  void WriteTexts(byte bitmap, dat xwidth, dat ywidth, const char *text, dat left, dat up);
                                                                   ^
server/resize.cpp:1919:78: note: Function 'WriteTexts' argument 4 names different: declaration 'text' definition 'charset_bytes'.
void Sgadget::WriteTexts(byte bitmap, dat t_width, dat t_height, const char *charset_bytes,
                                                                             ^
server/resize.cpp:1986:44: style:inconclusive: Function 'WriteTRunes' argument 2 names different: declaration 'xwidth' definition 't_width'. [funcArgNamesDifferent]
void Sgadget::WriteTRunes(byte bitmap, dat t_width, dat t_height, //
                                           ^
server/obj/gadget.h:51:37: note: Function 'WriteTRunes' argument 2 names different: declaration 'xwidth' definition 't_width'.
  void WriteTRunes(byte bitmap, dat xwidth, dat ywidth, const trune *runes, dat left, dat up);
                                    ^
server/resize.cpp:1986:44: note: Function 'WriteTRunes' argument 2 names different: declaration 'xwidth' definition 't_width'.
void Sgadget::WriteTRunes(byte bitmap, dat t_width, dat t_height, //
                                           ^
server/resize.cpp:1986:57: style:inconclusive: Function 'WriteTRunes' argument 3 names different: declaration 'ywidth' definition 't_height'. [funcArgNamesDifferent]
void Sgadget::WriteTRunes(byte bitmap, dat t_width, dat t_height, //
                                                        ^
server/obj/gadget.h:51:49: note: Function 'WriteTRunes' argument 3 names different: declaration 'ywidth' definition 't_height'.
  void WriteTRunes(byte bitmap, dat xwidth, dat ywidth, const trune *runes, dat left, dat up);
                                                ^
server/resize.cpp:1986:57: note: Function 'WriteTRunes' argument 3 names different: declaration 'ywidth' definition 't_height'.
void Sgadget::WriteTRunes(byte bitmap, dat t_width, dat t_height, //
                                                        ^
server/resize.cpp:1016:12: style: Variable 'XWidth' is assigned a value that is never used. [unreadVariable]
    XWidth = w->XWidth -= DeltaX;
           ^
server/resize.cpp:1036:12: style: Variable 'XWidth' is assigned a value that is never used. [unreadVariable]
    XWidth = w->XWidth += DeltaX;
           ^
server/resize.cpp:1058:12: style: Variable 'YWidth' is assigned a value that is never used. [unreadVariable]
    YWidth = w->YWidth -= DeltaY;
           ^
server/resize.cpp:1075:9: style: Variable 'Dwn' is assigned a value that is never used. [unreadVariable]
    Dwn -= DeltaY;
        ^
server/resize.cpp:1079:12: style: Variable 'YWidth' is assigned a value that is never used. [unreadVariable]
    YWidth = w->YWidth += DeltaY;
           ^
server/resize.cpp:1094:9: style: Variable 'Dwn' is assigned a value that is never used. [unreadVariable]
    Dwn += DeltaY;
        ^
server/resize.cpp:1152:12: style: Variable 'XWidth' is assigned a value that is never used. [unreadVariable]
    XWidth = w->XWidth -= DeltaX;
           ^
server/resize.cpp:1156:12: style: Variable 'XWidth' is assigned a value that is never used. [unreadVariable]
    XWidth = w->XWidth += DeltaX;
           ^
server/resize.cpp:1162:12: style: Variable 'YWidth' is assigned a value that is never used. [unreadVariable]
    YWidth = w->YWidth -= DeltaY;
           ^
server/resize.cpp:1166:12: style: Variable 'YWidth' is assigned a value that is never used. [unreadVariable]
    YWidth = w->YWidth += DeltaY;
           ^
server/resize.cpp:1954:13: style: Variable 'g_height' is assigned a value that is never used. [unreadVariable]
    g_height++;
            ^
server/resize.cpp:2023:13: style: Variable 'g_height' is assigned a value that is never used. [unreadVariable]
    g_height++;
            ^
server/scroller.cpp:129:7: style: Condition 'FlagDeskScroll' is always true [knownConditionTrueFalse]
  if (FlagDeskScroll) {
      ^
server/scroller.cpp:122:7: note: Assuming that condition '!FlagDeskScroll' is not redundant
  if (!FlagDeskScroll) {
      ^
server/scroller.cpp:129:7: note: Condition 'FlagDeskScroll' is always true
  if (FlagDeskScroll) {
      ^
server/shm.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
server/shm.cpp:315:10: style: The scope of the variable 'len' can be reduced. [variableScope]
  size_t len, first = full_read(fd, data, sizeof(size_t));
         ^
server/shm.cpp:381:32: style:inconclusive: Function 'shm_malloc_or_die' argument 1 names different: declaration 'size' definition 'len'. [funcArgNamesDifferent]
void *shm_malloc_or_die(size_t len) {
                               ^
server/rctypes.h:79:32: note: Function 'shm_malloc_or_die' argument 1 names different: declaration 'size' definition 'len'.
void *shm_malloc_or_die(size_t size);
                               ^
server/shm.cpp:381:32: note: Function 'shm_malloc_or_die' argument 1 names different: declaration 'size' definition 'len'.
void *shm_malloc_or_die(size_t len) {
                               ^
server/shm.cpp:123:11: style: Variable 'pathlen' is assigned a value that is never used. [unreadVariable]
  pathlen = CopyToSockaddrUn(TWDisplay, &addr, pathlen);
          ^
server/socketalien.h:644:35: style: Condition 'len' is always true [knownConditionTrueFalse]
  if ((len = read(Fd, t, tot)) && len && len != (uldat)-1) {
                                  ^
server/socketalien.h:644:12: note: Assuming that condition 'len=read(Fd,t,tot)' is not redundant
  if ((len = read(Fd, t, tot)) && len && len != (uldat)-1) {
           ^
server/socketalien.h:644:35: note: Condition 'len' is always true
  if ((len = read(Fd, t, tot)) && len && len != (uldat)-1) {
                                  ^
server/socket.cpp:2333:35: style: Condition 'len' is always true [knownConditionTrueFalse]
  if ((len = read(Fd, t, tot)) && len && len != (uldat)-1) {
                                  ^
server/socket.cpp:2333:12: note: Assuming that condition 'len=read(Fd,t,tot)' is not redundant
  if ((len = read(Fd, t, tot)) && len && len != (uldat)-1) {
           ^
server/socket.cpp:2333:35: note: Condition 'len' is always true
  if ((len = read(Fd, t, tot)) && len && len != (uldat)-1) {
                                  ^
server/socket.cpp:586:15: style: The scope of the variable 'S' can be reduced. [variableScope]
  const byte *S;
              ^
server/socket.cpp:1866:11: style: The scope of the variable 't' can be reduced. [variableScope]
    byte *t, AlienSizeofUldat = AlienSizeof(uldat, Slot);
          ^
server/socket.cpp:1892:17: style: The scope of the variable 'res' can be reduced. [variableScope]
  unsigned long res;
                ^
server/socket.cpp:1926:11: style: The scope of the variable 'got' can be reduced. [variableScope]
  int fd, got = -1;
          ^
server/socket.cpp:2019:7: style: The scope of the variable 'got' can be reduced. [variableScope]
  int got;
      ^
server/socket.cpp:2037:7: style: The scope of the variable 'got' can be reduced. [variableScope]
  int got;
      ^
server/socket.cpp:2400:11: style: The scope of the variable 'w' can be reduced. [variableScope]
  Twidget w;
          ^
server/socket.cpp:895:53: style:inconclusive: Function 'sockFindFunction' argument 2 names different: declaration 'name' definition 'Name'. [funcArgNamesDifferent]
static uldat sockFindFunction(byte len, const char *Name, byte FormatLen, const char *Format) {
                                                    ^
server/socket.cpp:345:53: note: Function 'sockFindFunction' argument 2 names different: declaration 'name' definition 'Name'.
static uldat sockFindFunction(byte len, const char *name, byte ProtoLen, const char *Proto);
                                                    ^
server/socket.cpp:895:53: note: Function 'sockFindFunction' argument 2 names different: declaration 'name' definition 'Name'.
static uldat sockFindFunction(byte len, const char *Name, byte FormatLen, const char *Format) {
                                                    ^
server/socket.cpp:895:64: style:inconclusive: Function 'sockFindFunction' argument 3 names different: declaration 'ProtoLen' definition 'FormatLen'. [funcArgNamesDifferent]
static uldat sockFindFunction(byte len, const char *Name, byte FormatLen, const char *Format) {
                                                               ^
server/socket.cpp:345:64: note: Function 'sockFindFunction' argument 3 names different: declaration 'ProtoLen' definition 'FormatLen'.
static uldat sockFindFunction(byte len, const char *name, byte ProtoLen, const char *Proto);
                                                               ^
server/socket.cpp:895:64: note: Function 'sockFindFunction' argument 3 names different: declaration 'ProtoLen' definition 'FormatLen'.
static uldat sockFindFunction(byte len, const char *Name, byte FormatLen, const char *Format) {
                                                               ^
server/socket.cpp:895:87: style:inconclusive: Function 'sockFindFunction' argument 4 names different: declaration 'Proto' definition 'Format'. [funcArgNamesDifferent]
static uldat sockFindFunction(byte len, const char *Name, byte FormatLen, const char *Format) {
                                                                                      ^
server/socket.cpp:345:86: note: Function 'sockFindFunction' argument 4 names different: declaration 'Proto' definition 'Format'.
static uldat sockFindFunction(byte len, const char *name, byte ProtoLen, const char *Proto);
                                                                                     ^
server/socket.cpp:895:87: note: Function 'sockFindFunction' argument 4 names different: declaration 'Proto' definition 'Format'.
static uldat sockFindFunction(byte len, const char *Name, byte FormatLen, const char *Format) {
                                                                                      ^
server/socket.cpp:1059:93: style:inconclusive: Function 'sockDrawWidget' argument 6 names different: declaration 'utf8_bytes' definition 'Text'. [funcArgNamesDifferent]
static void sockDrawWidget(Twidget w, dat XWidth, dat YWidth, dat Left, dat Up, const char *Text,
                                                                                            ^
server/socket.cpp:366:40: note: Function 'sockDrawWidget' argument 6 names different: declaration 'utf8_bytes' definition 'Text'.
                           const char *utf8_bytes, const trune *runes, const tcell *cells);
                                       ^
server/socket.cpp:1059:93: note: Function 'sockDrawWidget' argument 6 names different: declaration 'utf8_bytes' definition 'Text'.
static void sockDrawWidget(Twidget w, dat XWidth, dat YWidth, dat Left, dat Up, const char *Text,
                                                                                            ^
server/socket.cpp:1060:41: style:inconclusive: Function 'sockDrawWidget' argument 7 names different: declaration 'runes' definition 'Font'. [funcArgNamesDifferent]
                           const trune *Font, const tcell *Attr) {
                                        ^
server/socket.cpp:366:65: note: Function 'sockDrawWidget' argument 7 names different: declaration 'runes' definition 'Font'.
                           const char *utf8_bytes, const trune *runes, const tcell *cells);
                                                                ^
server/socket.cpp:1060:41: note: Function 'sockDrawWidget' argument 7 names different: declaration 'runes' definition 'Font'.
                           const trune *Font, const tcell *Attr) {
                                        ^
server/socket.cpp:1060:60: style:inconclusive: Function 'sockDrawWidget' argument 8 names different: declaration 'cells' definition 'Attr'. [funcArgNamesDifferent]
                           const trune *Font, const tcell *Attr) {
                                                           ^
server/socket.cpp:366:85: note: Function 'sockDrawWidget' argument 8 names different: declaration 'cells' definition 'Attr'.
                           const char *utf8_bytes, const trune *runes, const tcell *cells);
                                                                                    ^
server/socket.cpp:1060:60: note: Function 'sockDrawWidget' argument 8 names different: declaration 'cells' definition 'Attr'.
                           const trune *Font, const tcell *Attr) {
                                                           ^
server/socket.cpp:1079:45: style:inconclusive: Function 'sockResizeWidget' argument 2 names different: declaration 'XWidth' definition 'X'. [funcArgNamesDifferent]
static void sockResizeWidget(Twidget w, dat X, dat Y) {
                                            ^
server/socket.cpp:363:45: note: Function 'sockResizeWidget' argument 2 names different: declaration 'XWidth' definition 'X'.
static void sockResizeWidget(Twidget w, dat XWidth, dat YWidth);
                                            ^
server/socket.cpp:1079:45: note: Function 'sockResizeWidget' argument 2 names different: declaration 'XWidth' definition 'X'.
static void sockResizeWidget(Twidget w, dat X, dat Y) {
                                            ^
server/socket.cpp:1079:52: style:inconclusive: Function 'sockResizeWidget' argument 3 names different: declaration 'YWidth' definition 'Y'. [funcArgNamesDifferent]
static void sockResizeWidget(Twidget w, dat X, dat Y) {
                                                   ^
server/socket.cpp:363:57: note: Function 'sockResizeWidget' argument 3 names different: declaration 'YWidth' definition 'Y'.
static void sockResizeWidget(Twidget w, dat XWidth, dat YWidth);
                                                        ^
server/socket.cpp:1079:52: note: Function 'sockResizeWidget' argument 3 names different: declaration 'YWidth' definition 'Y'.
static void sockResizeWidget(Twidget w, dat X, dat Y) {
                                                   ^
server/socket.cpp:1107:43: style:inconclusive: Function 'sockCirculateChildrenRow' argument 1 names different: declaration 'O' definition 'obj'. [funcArgNamesDifferent]
static void sockCirculateChildrenRow(Tobj obj, byte up_or_down) {
                                          ^
server/socket.cpp:396:43: note: Function 'sockCirculateChildrenRow' argument 1 names different: declaration 'O' definition 'obj'.
static void sockCirculateChildrenRow(Tobj O, byte up_or_down);
                                          ^
server/socket.cpp:1107:43: note: Function 'sockCirculateChildrenRow' argument 1 names different: declaration 'O' definition 'obj'.
static void sockCirculateChildrenRow(Tobj obj, byte up_or_down) {
                                          ^
server/socket.cpp:1717:38: style:inconclusive: Function 'sockNotifySelection' argument 1 names different: declaration 'Requestor' definition 'requestor'. [funcArgNamesDifferent]
static void sockNotifySelection(Tobj requestor, uldat reqprivate, uldat magic,
                                     ^
server/socket.cpp:428:38: note: Function 'sockNotifySelection' argument 1 names different: declaration 'Requestor' definition 'requestor'.
static void sockNotifySelection(Tobj Requestor, uldat ReqPrivate, uldat Magic,
                                     ^
server/socket.cpp:1717:38: note: Function 'sockNotifySelection' argument 1 names different: declaration 'Requestor' definition 'requestor'.
static void sockNotifySelection(Tobj requestor, uldat reqprivate, uldat magic,
                                     ^
server/socket.cpp:1717:55: style:inconclusive: Function 'sockNotifySelection' argument 2 names different: declaration 'ReqPrivate' definition 'reqprivate'. [funcArgNamesDifferent]
static void sockNotifySelection(Tobj requestor, uldat reqprivate, uldat magic,
                                                      ^
server/socket.cpp:428:55: note: Function 'sockNotifySelection' argument 2 names different: declaration 'ReqPrivate' definition 'reqprivate'.
static void sockNotifySelection(Tobj Requestor, uldat ReqPrivate, uldat Magic,
                                                      ^
server/socket.cpp:1717:55: note: Function 'sockNotifySelection' argument 2 names different: declaration 'ReqPrivate' definition 'reqprivate'.
static void sockNotifySelection(Tobj requestor, uldat reqprivate, uldat magic,
                                                      ^
server/socket.cpp:1717:73: style:inconclusive: Function 'sockNotifySelection' argument 3 names different: declaration 'Magic' definition 'magic'. [funcArgNamesDifferent]
static void sockNotifySelection(Tobj requestor, uldat reqprivate, uldat magic,
                                                                        ^
server/socket.cpp:428:73: note: Function 'sockNotifySelection' argument 3 names different: declaration 'Magic' definition 'magic'.
static void sockNotifySelection(Tobj Requestor, uldat ReqPrivate, uldat Magic,
                                                                        ^
server/socket.cpp:1717:73: note: Function 'sockNotifySelection' argument 3 names different: declaration 'Magic' definition 'magic'.
static void sockNotifySelection(Tobj requestor, uldat reqprivate, uldat magic,
                                                                        ^
server/socket.cpp:1718:44: style:inconclusive: Function 'sockNotifySelection' argument 4 names different: declaration 'MIME' definition 'mime'. [funcArgNamesDifferent]
                                const char mime[TW_MAX_MIMELEN], uldat len, const char *data) {
                                           ^
server/socket.cpp:429:44: note: Function 'sockNotifySelection' argument 4 names different: declaration 'MIME' definition 'mime'.
                                const char MIME[TW_MAX_MIMELEN], uldat len, const char *Data);
                                           ^
server/socket.cpp:1718:44: note: Function 'sockNotifySelection' argument 4 names different: declaration 'MIME' definition 'mime'.
                                const char mime[TW_MAX_MIMELEN], uldat len, const char *data) {
                                           ^
server/socket.cpp:1718:89: style:inconclusive: Function 'sockNotifySelection' argument 6 names different: declaration 'Data' definition 'data'. [funcArgNamesDifferent]
                                const char mime[TW_MAX_MIMELEN], uldat len, const char *data) {
                                                                                        ^
server/socket.cpp:429:89: note: Function 'sockNotifySelection' argument 6 names different: declaration 'Data' definition 'data'.
                                const char MIME[TW_MAX_MIMELEN], uldat len, const char *Data);
                                                                                        ^
server/socket.cpp:1718:89: note: Function 'sockNotifySelection' argument 6 names different: declaration 'Data' definition 'data'.
                                const char mime[TW_MAX_MIMELEN], uldat len, const char *data) {
                                                                                        ^
server/socket.cpp:2148:89: warning: Found suspicious operator ',' [constStatement]
          log(WARNING) << "twin: warning: client has different `" << Chars::from_c(zero),
                                                                                        ^
server/socketalien.h:88:21: portability: 'src' is of type 'const void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
    FlipCopyMem(src + (srclen > dstlen ? srclen - dstlen : 0), dst, Min2(dstlen, srclen));
                    ^
server/socketalien.h:92:17: portability: 'src' is of type 'const void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
    CopyMem(src + srclen - dstlen, dst, dstlen);
                ^
server/socketalien.h:250:5: style: Variable 'T' is assigned a value that is never used. [unreadVariable]
    PUSH(T, uldat, code);
    ^
server/socketalien.h:256:9: style: Variable 'T' is assigned a value that is never used. [unreadVariable]
      T = alienPush(data, len, T, alien_len);
        ^
server/socket.cpp:1871:7: style: Variable 't' is assigned a value that is never used. [unreadVariable]
      alienPUSH(t, uldat, data);
      ^
server/socket.cpp:1753:32: style:inconclusive: Function 'ShutdownGzip' argument 1 names different: declaration 'Slot' definition 'slot'. [funcArgNamesDifferent]
static void ShutdownGzip(uldat slot) {
                               ^
server/socket.cpp:331:32: note: Function 'ShutdownGzip' argument 1 names different: declaration 'Slot' definition 'slot'.
static void ShutdownGzip(uldat Slot);
                               ^
server/socket.cpp:1753:32: note: Function 'ShutdownGzip' argument 1 names different: declaration 'Slot' definition 'slot'.
static void ShutdownGzip(uldat slot) {
                               ^
server/socket.cpp:1779:14: style: Variable 'slot' is assigned a value that is never used. [unreadVariable]
  uldat slot = NOSLOT;
             ^
server/socket.cpp:2165:0: information: Skipping configuration 'TW_IS_LITTLE_ENDIAN' since the value of 'TW_IS_LITTLE_ENDIAN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return TW_IS_LITTLE_ENDIAN ? MagicAlien : MagicAlienXendian;
^
server/tterm.cpp:39:11: style: The scope of the variable 'Window' can be reduced. [variableScope]
  Twindow Window;
          ^
server/tterm.cpp:104:11: style: The scope of the variable 'Win' can be reduced. [variableScope]
  Twindow Win;
          ^
server/tterm.cpp:115:12: style: Variable 'Code' is assigned a value that is never used. [unreadVariable]
      Code = Event->EventKeyboard.Code;
           ^
server/tty.cpp:699:21: style: The scope of the variable 'Event' can be reduced. [variableScope]
    event_keyboard *Event;
                    ^
server/tty.cpp:1433:29: style:inconclusive: Function 'TtyKbdFocus' argument 1 names different: declaration 'Window' definition 'newW'. [funcArgNamesDifferent]
Twidget TtyKbdFocus(Twidget newW) {
                            ^
server/tty.h:109:29: note: Function 'TtyKbdFocus' argument 1 names different: declaration 'Window' definition 'newW'.
Twidget TtyKbdFocus(Twidget Window);
                            ^
server/tty.cpp:1433:29: note: Function 'TtyKbdFocus' argument 1 names different: declaration 'Window' definition 'newW'.
Twidget TtyKbdFocus(Twidget newW) {
                            ^
server/tty.cpp:1599:30: style:inconclusive: Function 'TtyWriteCharset' argument 1 names different: declaration 'Window' definition 'w'. [funcArgNamesDifferent]
bool TtyWriteCharset(Twindow w, uldat len, const char *charset_bytes) {
                             ^
server/tty.h:104:30: note: Function 'TtyWriteCharset' argument 1 names different: declaration 'Window' definition 'w'.
bool TtyWriteCharset(Twindow Window, uldat Len, const char *charset_bytes);
                             ^
server/tty.cpp:1599:30: note: Function 'TtyWriteCharset' argument 1 names different: declaration 'Window' definition 'w'.
bool TtyWriteCharset(Twindow w, uldat len, const char *charset_bytes) {
                             ^
server/tty.cpp:1599:39: style:inconclusive: Function 'TtyWriteCharset' argument 2 names different: declaration 'Len' definition 'len'. [funcArgNamesDifferent]
bool TtyWriteCharset(Twindow w, uldat len, const char *charset_bytes) {
                                      ^
server/tty.h:104:44: note: Function 'TtyWriteCharset' argument 2 names different: declaration 'Len' definition 'len'.
bool TtyWriteCharset(Twindow Window, uldat Len, const char *charset_bytes);
                                           ^
server/tty.cpp:1599:39: note: Function 'TtyWriteCharset' argument 2 names different: declaration 'Len' definition 'len'.
bool TtyWriteCharset(Twindow w, uldat len, const char *charset_bytes) {
                                      ^
server/tty.cpp:1603:27: style:inconclusive: Function 'TtyWriteUtf8' argument 1 names different: declaration 'Window' definition 'w'. [funcArgNamesDifferent]
bool TtyWriteUtf8(Twindow w, uldat len, const char *utf8_bytes) {
                          ^
server/tty.h:105:27: note: Function 'TtyWriteUtf8' argument 1 names different: declaration 'Window' definition 'w'.
bool TtyWriteUtf8(Twindow Window, uldat Len, const char *utf8_bytes);
                          ^
server/tty.cpp:1603:27: note: Function 'TtyWriteUtf8' argument 1 names different: declaration 'Window' definition 'w'.
bool TtyWriteUtf8(Twindow w, uldat len, const char *utf8_bytes) {
                          ^
server/tty.cpp:1603:36: style:inconclusive: Function 'TtyWriteUtf8' argument 2 names different: declaration 'Len' definition 'len'. [funcArgNamesDifferent]
bool TtyWriteUtf8(Twindow w, uldat len, const char *utf8_bytes) {
                                   ^
server/tty.h:105:41: note: Function 'TtyWriteUtf8' argument 2 names different: declaration 'Len' definition 'len'.
bool TtyWriteUtf8(Twindow Window, uldat Len, const char *utf8_bytes);
                                        ^
server/tty.cpp:1603:36: note: Function 'TtyWriteUtf8' argument 2 names different: declaration 'Len' definition 'len'.
bool TtyWriteUtf8(Twindow w, uldat len, const char *utf8_bytes) {
                                   ^
server/tty.cpp:1608:28: style:inconclusive: Function 'TtyWriteTRune' argument 1 names different: declaration 'Window' definition 'w'. [funcArgNamesDifferent]
bool TtyWriteTRune(Twindow w, uldat len, const trune *runes) {
                           ^
server/tty.h:106:28: note: Function 'TtyWriteTRune' argument 1 names different: declaration 'Window' definition 'w'.
bool TtyWriteTRune(Twindow Window, uldat Len, const trune *runes);
                           ^
server/tty.cpp:1608:28: note: Function 'TtyWriteTRune' argument 1 names different: declaration 'Window' definition 'w'.
bool TtyWriteTRune(Twindow w, uldat len, const trune *runes) {
                           ^
server/tty.cpp:1608:37: style:inconclusive: Function 'TtyWriteTRune' argument 2 names different: declaration 'Len' definition 'len'. [funcArgNamesDifferent]
bool TtyWriteTRune(Twindow w, uldat len, const trune *runes) {
                                    ^
server/tty.h:106:42: note: Function 'TtyWriteTRune' argument 2 names different: declaration 'Len' definition 'len'.
bool TtyWriteTRune(Twindow Window, uldat Len, const trune *runes);
                                         ^
server/tty.cpp:1608:37: note: Function 'TtyWriteTRune' argument 2 names different: declaration 'Len' definition 'len'.
bool TtyWriteTRune(Twindow w, uldat len, const trune *runes) {
                                    ^
server/tty.cpp:1664:28: style:inconclusive: Function 'TtyWriteTCell' argument 1 names different: declaration 'Window' definition 'w'. [funcArgNamesDifferent]
bool TtyWriteTCell(Twindow w, dat x, dat y, uldat len, const tcell *text) {
                           ^
server/tty.h:107:28: note: Function 'TtyWriteTCell' argument 1 names different: declaration 'Window' definition 'w'.
bool TtyWriteTCell(Twindow Window, dat x, dat y, uldat Len, const tcell *cells);
                           ^
server/tty.cpp:1664:28: note: Function 'TtyWriteTCell' argument 1 names different: declaration 'Window' definition 'w'.
bool TtyWriteTCell(Twindow w, dat x, dat y, uldat len, const tcell *text) {
                           ^
server/tty.cpp:1664:51: style:inconclusive: Function 'TtyWriteTCell' argument 4 names different: declaration 'Len' definition 'len'. [funcArgNamesDifferent]
bool TtyWriteTCell(Twindow w, dat x, dat y, uldat len, const tcell *text) {
                                                  ^
server/tty.h:107:56: note: Function 'TtyWriteTCell' argument 4 names different: declaration 'Len' definition 'len'.
bool TtyWriteTCell(Twindow Window, dat x, dat y, uldat Len, const tcell *cells);
                                                       ^
server/tty.cpp:1664:51: note: Function 'TtyWriteTCell' argument 4 names different: declaration 'Len' definition 'len'.
bool TtyWriteTCell(Twindow w, dat x, dat y, uldat len, const tcell *text) {
                                                  ^
server/tty.cpp:1664:69: style:inconclusive: Function 'TtyWriteTCell' argument 5 names different: declaration 'cells' definition 'text'. [funcArgNamesDifferent]
bool TtyWriteTCell(Twindow w, dat x, dat y, uldat len, const tcell *text) {
                                                                    ^
server/tty.h:107:74: note: Function 'TtyWriteTCell' argument 5 names different: declaration 'cells' definition 'text'.
bool TtyWriteTCell(Twindow Window, dat x, dat y, uldat Len, const tcell *cells);
                                                                         ^
server/tty.cpp:1664:69: note: Function 'TtyWriteTCell' argument 5 names different: declaration 'cells' definition 'text'.
bool TtyWriteTCell(Twindow w, dat x, dat y, uldat len, const tcell *text) {
                                                                    ^
server/tty.cpp:1562:76: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1562. [shiftTooManyBitsSigned]
        printable = (c >= 32 || !(((disp_ctrl ? CTRL_ALWAYS : CTRL_ACTION) >> c) & 1)) &&
                                                                           ^
server/tty.cpp:1562:24: note: Assuming that condition 'c>=32' is not redundant
        printable = (c >= 32 || !(((disp_ctrl ? CTRL_ALWAYS : CTRL_ACTION) >> c) & 1)) &&
                       ^
server/tty.cpp:1562:76: note: Shift
        printable = (c >= 32 || !(((disp_ctrl ? CTRL_ALWAYS : CTRL_ACTION) >> c) & 1)) &&
                                                                           ^
server/tty.cpp:1628:79: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1628. [shiftTooManyBitsSigned]
      ok = (c >= 32 || !(((*Flags & TTY_DISPCTRL ? CTRL_ALWAYS : CTRL_ACTION) >> c) & 1)) &&
                                                                              ^
server/tty.cpp:1628:15: note: Assuming that condition 'c>=32' is not redundant
      ok = (c >= 32 || !(((*Flags & TTY_DISPCTRL ? CTRL_ALWAYS : CTRL_ACTION) >> c) & 1)) &&
              ^
server/tty.cpp:1628:79: note: Shift
      ok = (c >= 32 || !(((*Flags & TTY_DISPCTRL ? CTRL_ALWAYS : CTRL_ACTION) >> c) & 1)) &&
                                                                              ^
server/tty.cpp:382:7: style: Variable 's' is assigned a value that is never used. [unreadVariable]
    s = Start + SizeX * (t + nr);
      ^
server/tty.cpp:1569:19: style: Variable 'utf8_in_use' is assigned a value that is never used. [unreadVariable]
      utf8_in_use = printable = tfalse;
                  ^
server/util.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
server/util.cpp:293:18: style: The scope of the variable 'Event' can be reduced. [variableScope]
  event_control *Event;
                 ^
server/util.cpp:678:14: style: The scope of the variable 'H' can be reduced. [variableScope]
  Tgadget G, H;
             ^
server/util.cpp:1332:7: style: The scope of the variable 'fds' can be reduced. [variableScope]
  int fds[2];
      ^
server/util.cpp:152:19: style:inconclusive: Function 'Minimum' argument 1 names different: declaration 'MaxIndex' definition 'max_index'. [funcArgNamesDifferent]
byte Minimum(byte max_index, const ldat *array) {
                  ^
server/util.h:52:19: note: Function 'Minimum' argument 1 names different: declaration 'MaxIndex' definition 'max_index'.
byte Minimum(byte MaxIndex, const ldat *Array);
                  ^
server/util.cpp:152:19: note: Function 'Minimum' argument 1 names different: declaration 'MaxIndex' definition 'max_index'.
byte Minimum(byte max_index, const ldat *array) {
                  ^
server/util.cpp:152:42: style:inconclusive: Function 'Minimum' argument 2 names different: declaration 'Array' definition 'array'. [funcArgNamesDifferent]
byte Minimum(byte max_index, const ldat *array) {
                                         ^
server/util.h:52:41: note: Function 'Minimum' argument 2 names different: declaration 'Array' definition 'array'.
byte Minimum(byte MaxIndex, const ldat *Array);
                                        ^
server/util.cpp:152:42: note: Function 'Minimum' argument 2 names different: declaration 'Array' definition 'array'.
byte Minimum(byte max_index, const ldat *array) {
                                         ^
server/util.cpp:376:37: style:inconclusive: Function 'SetSelectionFromWindow' argument 1 names different: declaration 'Window' definition 'w'. [funcArgNamesDifferent]
bool SetSelectionFromWindow(Twindow w) {
                                    ^
server/util.h:57:37: note: Function 'SetSelectionFromWindow' argument 1 names different: declaration 'Window' definition 'w'.
bool SetSelectionFromWindow(Twindow Window);
                                    ^
server/util.cpp:376:37: note: Function 'SetSelectionFromWindow' argument 1 names different: declaration 'Window' definition 'w'.
bool SetSelectionFromWindow(Twindow w) {
                                    ^
server/util.cpp:676:32: style:inconclusive: Function 'FallBackKeyAction' argument 1 names different: declaration 'window' definition 'w'. [funcArgNamesDifferent]
void FallBackKeyAction(Twindow w, event_keyboard *EventK) {
                               ^
server/util.h:67:32: note: Function 'FallBackKeyAction' argument 1 names different: declaration 'window' definition 'w'.
void FallBackKeyAction(Twindow window, event_keyboard *EventK);
                               ^
server/util.cpp:676:32: note: Function 'FallBackKeyAction' argument 1 names different: declaration 'window' definition 'w'.
void FallBackKeyAction(Twindow w, event_keyboard *EventK) {
                               ^
server/util.cpp:779:43: style:inconclusive: Function 'TokenizeStringVec' argument 2 names different: declaration 'text' definition 's'. [funcArgNamesDifferent]
char **TokenizeStringVec(uldat len, char *s) {
                                          ^
server/util.h:69:43: note: Function 'TokenizeStringVec' argument 2 names different: declaration 'text' definition 's'.
char **TokenizeStringVec(uldat len, char *text);
                                          ^
server/util.cpp:779:43: note: Function 'TokenizeStringVec' argument 2 names different: declaration 'text' definition 's'.
char **TokenizeStringVec(uldat len, char *s) {
                                          ^
server/util.cpp:825:27: style:inconclusive: Function 'FreeStringVec' argument 1 names different: declaration 'argv' definition 'cmd'. [funcArgNamesDifferent]
void FreeStringVec(char **cmd) {
                          ^
server/util.h:71:27: note: Function 'FreeStringVec' argument 1 names different: declaration 'argv' definition 'cmd'.
void FreeStringVec(char **argv);
                          ^
server/util.cpp:825:27: note: Function 'FreeStringVec' argument 1 names different: declaration 'argv' definition 'cmd'.
void FreeStringVec(char **cmd) {
                          ^
server/util.cpp:840:43: style:inconclusive: Function 'TokenizeTRuneVec' argument 2 names different: declaration 'text' definition 's'. [funcArgNamesDifferent]
char **TokenizeTRuneVec(uldat len, trune *s) {
                                          ^
server/util.h:70:43: note: Function 'TokenizeTRuneVec' argument 2 names different: declaration 'text' definition 's'.
char **TokenizeTRuneVec(uldat len, trune *text);
                                          ^
server/util.cpp:840:43: note: Function 'TokenizeTRuneVec' argument 2 names different: declaration 'text' definition 's'.
char **TokenizeTRuneVec(uldat len, trune *s) {
                                          ^
server/util.cpp:1382:17: style: union member 'Anonymous9::cv' is never used. [unusedStructMember]
    const void *cv;
                ^
server/util.cpp:1160:8: style: Unused variable: buf [unusedVariable]
  char buf[TW_BIGBUFF];
       ^
server/util.cpp:1182:3: error: sprintf format string requires 2 parameters but only 1 is given. [wrongPrintfScanfArgNum]
  sprintf(buf, "MAIL=/var/mail/%.*s", (int)(TW_BIGBUFF - 16) p->pw_name);
  ^
server/wm.cpp:1181:12: warning: Either the condition 'FG' is redundant or there is possible null pointer dereference: FG. [nullPointerRedundantCheck]
    temp = FG->Flags;
           ^
server/wm.cpp:1184:34: note: Assuming that condition 'FG' is not redundant
      if (FW == (Twindow)C->W && FG && (DetailCtx(C), (Twidget)FG == C->DW))
                                 ^
server/wm.cpp:1181:12: note: Null pointer dereference
    temp = FG->Flags;
           ^
server/wm.cpp:1187:9: warning: Either the condition 'FG' is redundant or there is possible null pointer dereference: FG. [nullPointerRedundantCheck]
        FG->Flags &= ~GADGETFL_PRESSED;
        ^
server/wm.cpp:1184:34: note: Assuming that condition 'FG' is not redundant
      if (FW == (Twindow)C->W && FG && (DetailCtx(C), (Twidget)FG == C->DW))
                                 ^
server/wm.cpp:1187:9: note: Null pointer dereference
        FG->Flags &= ~GADGETFL_PRESSED;
        ^
server/wm.cpp:1189:19: warning: Either the condition 'FG' is redundant or there is possible null pointer dereference: FG. [nullPointerRedundantCheck]
      if (temp != FG->Flags) {
                  ^
server/wm.cpp:1184:34: note: Assuming that condition 'FG' is not redundant
      if (FW == (Twindow)C->W && FG && (DetailCtx(C), (Twidget)FG == C->DW))
                                 ^
server/wm.cpp:1189:19: note: Null pointer dereference
      if (temp != FG->Flags) {
                  ^
server/wm.cpp:330:14: style: The scope of the variable 'Event' can be reduced. [variableScope]
  event_any *Event;
             ^
server/wm.cpp:356:8: style: The scope of the variable 'msg' can be reduced. [variableScope]
  Tmsg msg;
       ^
server/wm.cpp:431:14: style: The scope of the variable 'Event' can be reduced. [variableScope]
  event_any *Event;
             ^
server/wm.cpp:328:27: style:inconclusive: Function 'Check4Resize' argument 1 names different: declaration 'window' definition 'w'. [funcArgNamesDifferent]
void Check4Resize(Twindow w) {
                          ^
server/wm.h:31:27: note: Function 'Check4Resize' argument 1 names different: declaration 'window' definition 'w'.
void Check4Resize(Twindow window);
                          ^
server/wm.cpp:328:27: note: Function 'Check4Resize' argument 1 names different: declaration 'window' definition 'w'.
void Check4Resize(Twindow w) {
                          ^
server/wm.cpp:91:7: style: Local variable 'XWidth' shadows outer variable [shadowVariable]
  dat XWidth, YWidth;
      ^
server/wm.cpp:1827:12: note: Shadowed declaration
static dat XWidth, YWidth;
           ^
server/wm.cpp:91:7: note: Shadow variable
  dat XWidth, YWidth;
      ^
server/wm.cpp:91:15: style: Local variable 'YWidth' shadows outer variable [shadowVariable]
  dat XWidth, YWidth;
              ^
server/wm.cpp:1827:20: note: Shadowed declaration
static dat XWidth, YWidth;
                   ^
server/wm.cpp:91:15: note: Shadow variable
  dat XWidth, YWidth;
              ^
server/wm.cpp:1812:17: style: Local variable 'Do_Scroll' shadows outer variable [shadowVariable]
    extern Tmsg Do_Scroll;
                ^
server/scroller.h:15:13: note: Shadowed declaration
extern Tmsg Do_Scroll, Dont_Scroll;
            ^
server/wm.cpp:1812:17: note: Shadow variable
    extern Tmsg Do_Scroll;
                ^
server/wm.cpp:1817:17: style: Local variable 'Dont_Scroll' shadows outer variable [shadowVariable]
    extern Tmsg Dont_Scroll;
                ^
server/scroller.h:15:24: note: Shadowed declaration
extern Tmsg Do_Scroll, Dont_Scroll;
                       ^
server/wm.cpp:1817:17: note: Shadow variable
    extern Tmsg Dont_Scroll;
                ^
server/wm.cpp:263:15: style: Variable 'FlPressed' is assigned a value that is never used. [unreadVariable]
    FlPressed = ttrue;
              ^
server/wm.cpp:286:19: style: Variable 'FlPressed' is assigned a value that is never used. [unreadVariable]
        FlPressed = ttrue;
                  ^
server/wm.cpp:313:15: style: Variable 'FlPressed' is assigned a value that is never used. [unreadVariable]
    FlPressed = ttrue;
              ^
server/wm.cpp:318:15: style: Variable 'FlPressed' is assigned a value that is never used. [unreadVariable]
    FlPressed = ttrue;
              ^
server/wm.cpp:462:14: style: Variable 'LastKeys' is assigned a value that is never used. [unreadVariable]
    LastKeys = 0;
             ^
server/wm.cpp:560:12: style: Variable 'last_w' is assigned a value that is never used. [unreadVariable]
    last_w = w;
           ^
server/wm.cpp:1657:11: error: Invalid log() argument nr 1. The value is 0 but the valid values are '4.94066e-324:'. [invalidFunctionArg]
      log(INFO) << "autofocus: 0x" << hex(oldW ? oldW->Id : NOID) << " -> 0x" << hex(focusW->Id)
          ^
test/test_stl_vector.cpp:28:12: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
      sum1 += e;
           ^
server/alloc.h:22:26: error: Null pointer dereference: from [ctunullpointer]
  return std::memcpy(to, from, len);
                         ^
server/builtin.cpp:594:25: note: Calling function SendControlMsg, 4th argument is null
          SendControlMsg(Ext(WM, MsgPort), MSG_CONTROL_RESTART, 0, NULL);
                        ^
server/util.cpp:299:5: note: Calling function CopyMem, 1st argument is null
    CopyMem(Data, Event->Data, Len);
    ^
server/alloc.h:22:26: note: Dereferencing argument from that is null
  return std::memcpy(to, from, len);
                         ^
libs/libtw/avl.c:29:0: style: The function 'AVLFind' is never used. [unusedFunction]

^
libs/libtw/avl.c:160:0: style: The function 'AVLInsert' is never used. [unusedFunction]

^
libs/libtw/avl.c:188:0: style: The function 'AVLRemove' is never used. [unusedFunction]

^
server/main.cpp:227:0: style: The function 'AlwaysNull' is never used. [unusedFunction]

^
server/dl.cpp:156:0: style: The function 'DlSym' is never used. [unusedFunction]

^
server/draw.cpp:1838:0: style: The function 'DrawScreen' is never used. [unusedFunction]

^
server/hw_multi.cpp:971:0: style: The function 'FillOldVideo' is never used. [unusedFunction]

^
server/wm.cpp:741:0: style: The function 'FocusCtx' is never used. [unusedFunction]

^
server/hw/hw_display.cpp:554:0: style: The function 'InitModule' is never used. [unusedFunction]

^
server/hw/hw_display.cpp:560:0: style: The function 'QuitModule' is never used. [unusedFunction]

^
server/wm.cpp:1962:0: style: The function 'QuitWM' is never used. [unusedFunction]

^
server/socket.cpp:2313:0: style: The function 'SocketIO' is never used. [unusedFunction]

^
libs/libtutf/cp865.c:18:0: style: The function 'Tutf_UTF_32_to_CP865' is never used. [unusedFunction]

^
libs/libtw/missing.c:15:0: style: The function 'Tw_missing_getenv' is never used. [unusedFunction]

^
libs/libtw/missing.c:21:0: style: The function 'Tw_missing_memcmp' is never used. [unusedFunction]

^
libs/libtw/missing.c:33:0: style: The function 'Tw_missing_strdup' is never used. [unusedFunction]

^
libs/libtw/missing.c:48:0: style: The function 'Tw_missing_strspn' is never used. [unusedFunction]

^
libs/libtw/missing.c:59:0: style: The function 'Tw_missing_strstr' is never used. [unusedFunction]

^
libs/libtw/missing.c:95:0: style: The function 'Tw_trune' is never used. [unusedFunction]

^
libs/libltdl/loaders/dld_link.c:61:0: style: The function 'dld_link_LTX_get_vtable' is never used. [unusedFunction]

^
libs/libltdl/loaders/dlopen.c:61:0: style: The function 'dlopen_LTX_get_vtable' is never used. [unusedFunction]

^
libs/libltdl/loaders/dyld.c:62:0: style: The function 'dyld_LTX_get_vtable' is never used. [unusedFunction]

^
clients/mapscrn/kdmapop.c:147:0: style: The function 'getunimap' is never used. [unusedFunction]

^
libs/libltdl/loaders/load_add_on.c:61:0: style: The function 'load_add_on_LTX_get_vtable' is never used. [unusedFunction]

^
libs/libltdl/loaders/loadlibrary.c:66:0: style: The function 'loadlibrary_LTX_get_vtable' is never used. [unusedFunction]

^
clients/mapscrn/kdmapop.c:178:0: style: The function 'loadunimap' is never used. [unusedFunction]

^
libs/libltdl/lt_error.c:93:0: style: The function 'lt__error_string' is never used. [unusedFunction]

^
libs/libltdl/lt_error.c:102:0: style: The function 'lt__get_last_error' is never used. [unusedFunction]

^
libs/libltdl/lt__alloc.c:73:0: style: The function 'lt__realloc' is never used. [unusedFunction]

^
libs/libltdl/lt_error.c:108:0: style: The function 'lt__set_last_error' is never used. [unusedFunction]

^
libs/libltdl/ltdl.c:1607:0: style: The function 'lt_dladvise_global' is never used. [unusedFunction]

^
libs/libltdl/ltdl.c:1599:0: style: The function 'lt_dladvise_local' is never used. [unusedFunction]

^
libs/libltdl/ltdl.c:1615:0: style: The function 'lt_dladvise_preload' is never used. [unusedFunction]

^
libs/libltdl/ltdl.c:1591:0: style: The function 'lt_dladvise_resident' is never used. [unusedFunction]

^
libs/libltdl/ltdl.c:2369:0: style: The function 'lt_dlcaller_get_data' is never used. [unusedFunction]

^
libs/libltdl/ltdl.c:2322:0: style: The function 'lt_dlcaller_set_data' is never used. [unusedFunction]

^
libs/libltdl/ltdl.c:2108:0: style: The function 'lt_dlerror' is never used. [unusedFunction]

^
libs/libltdl/ltdl.c:265:0: style: The function 'lt_dlexit' is never used. [unusedFunction]

^
libs/libltdl/ltdl.c:1904:0: style: The function 'lt_dlforeachfile' is never used. [unusedFunction]

^
libs/libltdl/ltdl.c:2392:0: style: The function 'lt_dlgetinfo' is never used. [unusedFunction]

^
libs/libltdl/ltdl.c:2247:0: style: The function 'lt_dlgetsearchpath' is never used. [unusedFunction]

^
libs/libltdl/ltdl.c:2429:0: style: The function 'lt_dlhandle_fetch' is never used. [unusedFunction]

^
libs/libltdl/ltdl.c:2447:0: style: The function 'lt_dlhandle_map' is never used. [unusedFunction]

^
libs/libltdl/ltdl.c:2202:0: style: The function 'lt_dlinsertsearchdir' is never used. [unusedFunction]

^
libs/libltdl/ltdl.c:2257:0: style: The function 'lt_dlmakeresident' is never used. [unusedFunction]

^
libs/libltdl/loaders/preopen.c:305:0: style: The function 'lt_dlpreload_default' is never used. [unusedFunction]

^
libs/libltdl/ltdl.c:2229:0: style: The function 'lt_dlsetsearchpath' is never used. [unusedFunction]

^
libs/libltdl/loaders/shl_load.c:61:0: style: The function 'shl_load_LTX_get_vtable' is never used. [unusedFunction]

^
server/shm.cpp:291:0: style: The function 'shm_TSR_quit' is never used. [unusedFunction]

^
server/shm.cpp:400:0: style: The function 'shm_getend' is never used. [unusedFunction]

^
libs/libltdl/slist.c:54:0: style: The function 'slist_delete' is never used. [unusedFunction]

^
libs/libltdl/slist.c:205:0: style: The function 'slist_length' is never used. [unusedFunction]

^
libs/libltdl/slist.c:194:0: style: The function 'slist_nth' is never used. [unusedFunction]

^
libs/libltdl/slist.c:223:0: style: The function 'slist_reverse' is never used. [unusedFunction]

^
test/test_stl_vector.cpp:179:0: style: The function 'swap_string' is never used. [unusedFunction]

^
clients/mapscrn/xmalloc.c:32:0: style: The function 'xrealloc' is never used. [unusedFunction]

^
nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) [missingInclude]

